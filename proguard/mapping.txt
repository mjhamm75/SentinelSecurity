android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.a:
    void invalidateOptionsMenu(android.app.Activity) -> a
android.support.v4.app.BackStackRecord -> android.support.v4.app.b:
    android.support.v4.app.FragmentManagerImpl mManager -> a
    android.support.v4.app.BackStackRecord$Op mHead -> b
    android.support.v4.app.BackStackRecord$Op mTail -> c
    int mNumOp -> d
    int mEnterAnim -> e
    int mExitAnim -> f
    int mPopEnterAnim -> g
    int mPopExitAnim -> h
    int mTransition -> i
    int mTransitionStyle -> j
    boolean mAddToBackStack -> k
    boolean mAllowAddToBackStack -> l
    java.lang.String mName -> m
    boolean mCommitted -> n
    int mIndex -> o
    int mBreadCrumbTitleRes -> p
    java.lang.CharSequence mBreadCrumbTitleText -> q
    int mBreadCrumbShortTitleRes -> r
    java.lang.CharSequence mBreadCrumbShortTitleText -> s
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> a
    void addOp(android.support.v4.app.BackStackRecord$Op) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> b
    void bumpBackStackNesting(int) -> a
    int commit() -> a
    int commitInternal(boolean) -> a
    void run() -> run
    void popFromBackStack(boolean) -> b
    java.lang.String getName() -> b
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.c:
    android.support.v4.app.BackStackRecord$Op next -> a
    android.support.v4.app.BackStackRecord$Op prev -> b
    int cmd -> c
    android.support.v4.app.Fragment fragment -> d
    int enterAnim -> e
    int exitAnim -> f
    int popEnterAnim -> g
    int popExitAnim -> h
    java.util.ArrayList removed -> i
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> a
    int mTransition -> b
    int mTransitionStyle -> c
    java.lang.String mName -> d
    int mIndex -> e
    int mBreadCrumbTitleRes -> f
    java.lang.CharSequence mBreadCrumbTitleText -> g
    int mBreadCrumbShortTitleRes -> h
    java.lang.CharSequence mBreadCrumbShortTitleText -> i
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.d:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.BackStackState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    java.util.HashMap sClassMap -> P
    int mState -> a
    android.view.View mAnimatingAway -> b
    int mStateAfterAnimating -> c
    android.os.Bundle mSavedFragmentState -> d
    android.util.SparseArray mSavedViewState -> e
    int mIndex -> f
    java.lang.String mWho -> g
    android.os.Bundle mArguments -> h
    android.support.v4.app.Fragment mTarget -> i
    int mTargetIndex -> j
    int mTargetRequestCode -> k
    boolean mAdded -> l
    boolean mRemoving -> m
    boolean mResumed -> n
    boolean mFromLayout -> o
    boolean mInLayout -> p
    boolean mRestored -> q
    int mBackStackNesting -> r
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> s
    android.support.v4.app.FragmentActivity mActivity -> t
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> u
    android.support.v4.app.Fragment mParentFragment -> v
    int mFragmentId -> w
    int mContainerId -> x
    java.lang.String mTag -> y
    boolean mHidden -> z
    boolean mDetached -> A
    boolean mRetainInstance -> B
    boolean mRetaining -> C
    boolean mHasMenu -> D
    boolean mMenuVisible -> E
    boolean mCalled -> F
    int mNextAnim -> G
    android.view.ViewGroup mContainer -> H
    android.view.View mView -> I
    android.view.View mInnerView -> J
    boolean mDeferStart -> K
    boolean mUserVisibleHint -> L
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> M
    boolean mLoadersStarted -> N
    boolean mCheckedForLoaderManager -> O
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> a
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> a
    void restoreViewState(android.os.Bundle) -> a
    void setIndex(int,android.support.v4.app.Fragment) -> a
    boolean isInBackStack() -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    android.support.v4.app.FragmentActivity getActivity() -> b
    android.content.res.Resources getResources() -> c
    boolean isDetached() -> d
    void onHiddenChanged(boolean) -> a
    void onActivityResult(int,int,android.content.Intent) -> a
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> b
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> a
    void onAttach(android.app.Activity) -> a
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> a
    void onCreate(android.os.Bundle) -> c
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    void onActivityCreated(android.os.Bundle) -> d
    void onViewStateRestored(android.os.Bundle) -> e
    void onStart() -> e
    void onResume() -> f
    void onSaveInstanceState(android.os.Bundle) -> f
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> g
    void onStop() -> h
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> i
    void onDestroy() -> j
    void initState() -> k
    void onDetach() -> l
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    void onPrepareOptionsMenu(android.view.Menu) -> a
    void onDestroyOptionsMenu() -> m
    boolean onOptionsItemSelected(android.view.MenuItem) -> a
    void onOptionsMenuClosed(android.view.Menu) -> b
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> b
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void instantiateChildFragmentManager() -> n
    void performCreate(android.os.Bundle) -> g
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> b
    void performActivityCreated(android.os.Bundle) -> h
    void performStart() -> o
    void performResume() -> p
    void performConfigurationChanged(android.content.res.Configuration) -> a
    void performLowMemory() -> q
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> b
    boolean performPrepareOptionsMenu(android.view.Menu) -> c
    boolean performOptionsItemSelected(android.view.MenuItem) -> c
    boolean performContextItemSelected(android.view.MenuItem) -> d
    void performOptionsMenuClosed(android.view.Menu) -> d
    void performSaveInstanceState(android.os.Bundle) -> i
    void performPause() -> r
    void performStop() -> s
    void performReallyStop() -> t
    void performDestroyView() -> u
    void performDestroy() -> v
android.support.v4.app.Fragment$1 -> android.support.v4.app.e:
    android.support.v4.app.Fragment this$0 -> a
    android.view.View findViewById(int) -> a
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.f:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.g:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.h:
    android.os.Handler mHandler -> a
    android.support.v4.app.FragmentManagerImpl mFragments -> b
    android.support.v4.app.FragmentContainer mContainer -> c
    boolean mCreated -> d
    boolean mResumed -> e
    boolean mStopped -> f
    boolean mReallyStopped -> g
    boolean mRetaining -> h
    boolean mOptionsMenuInvalidated -> i
    boolean mCheckedForLoaderManager -> j
    boolean mLoadersStarted -> k
    java.util.HashMap mAllLoaderManagers -> l
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> m
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> a
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> b
    void supportInvalidateOptionsMenu() -> c
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> a
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> a
    void doReallyStop(boolean) -> a
    void onReallyStop() -> d
    void onAttachFragment(android.support.v4.app.Fragment) -> a
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void invalidateSupportFragment(java.lang.String) -> a
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> a
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.i:
    int[] Fragment -> a
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.j:
    java.lang.Object activity -> a
    java.lang.Object custom -> b
    java.util.HashMap children -> c
    java.util.ArrayList fragments -> d
    java.util.HashMap loaders -> e
android.support.v4.app.FragmentContainer -> android.support.v4.app.k:
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentManager -> android.support.v4.app.l:
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.m:
    void onBackStackChanged() -> a
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.n:
    boolean DEBUG -> a
    boolean HONEYCOMB -> b
    java.util.ArrayList mPendingActions -> c
    java.lang.Runnable[] mTmpActions -> d
    boolean mExecutingActions -> e
    java.util.ArrayList mActive -> f
    java.util.ArrayList mAdded -> g
    java.util.ArrayList mAvailIndices -> h
    java.util.ArrayList mBackStack -> i
    java.util.ArrayList mCreatedMenus -> j
    java.util.ArrayList mBackStackIndices -> k
    java.util.ArrayList mAvailBackStackIndices -> l
    java.util.ArrayList mBackStackChangeListeners -> m
    int mCurState -> n
    android.support.v4.app.FragmentActivity mActivity -> o
    android.support.v4.app.FragmentContainer mContainer -> p
    android.support.v4.app.Fragment mParent -> q
    boolean mNeedMenuInvalidate -> r
    boolean mStateSaved -> s
    boolean mDestroyed -> t
    java.lang.String mNoTransactionsBecause -> u
    boolean mHavePendingDeferredStart -> v
    android.os.Bundle mStateBundle -> w
    android.util.SparseArray mStateArray -> x
    java.lang.Runnable mExecCommit -> y
    android.view.animation.Interpolator DECELERATE_QUINT -> z
    android.view.animation.Interpolator DECELERATE_CUBIC -> A
    android.view.animation.Interpolator ACCELERATE_QUINT -> B
    android.view.animation.Interpolator ACCELERATE_CUBIC -> C
    void throwException(java.lang.RuntimeException) -> a
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    boolean popBackStackImmediate() -> c
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> a
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> a
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> a
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> a
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> a
    void moveToState(android.support.v4.app.Fragment) -> b
    void moveToState(int,boolean) -> a
    void moveToState(int,int,int,boolean) -> a
    void startPendingDeferredFragments() -> d
    void makeActive(android.support.v4.app.Fragment) -> c
    void makeInactive(android.support.v4.app.Fragment) -> d
    void addFragment(android.support.v4.app.Fragment,boolean) -> a
    void removeFragment(android.support.v4.app.Fragment,int,int) -> a
    void hideFragment(android.support.v4.app.Fragment,int,int) -> b
    void showFragment(android.support.v4.app.Fragment,int,int) -> c
    void detachFragment(android.support.v4.app.Fragment,int,int) -> d
    void attachFragment(android.support.v4.app.Fragment,int,int) -> e
    android.support.v4.app.Fragment findFragmentById(int) -> a
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    void checkStateLoss() -> t
    void enqueueAction(java.lang.Runnable,boolean) -> a
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> a
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> a
    void freeBackStackIndex(int) -> b
    boolean execPendingActions() -> e
    void reportBackStackChanged() -> f
    void addBackStackState(android.support.v4.app.BackStackRecord) -> b
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> a
    java.util.ArrayList retainNonConfig() -> g
    void saveFragmentViewState(android.support.v4.app.Fragment) -> e
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> f
    android.os.Parcelable saveAllState() -> h
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> a
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> a
    void noteStateNotSaved() -> i
    void dispatchCreate() -> j
    void dispatchActivityCreated() -> k
    void dispatchStart() -> l
    void dispatchResume() -> m
    void dispatchPause() -> n
    void dispatchStop() -> o
    void dispatchReallyStop() -> p
    void dispatchDestroyView() -> q
    void dispatchDestroy() -> r
    void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    void dispatchLowMemory() -> s
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> a
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    boolean dispatchContextItemSelected(android.view.MenuItem) -> b
    void dispatchOptionsMenuClosed(android.view.Menu) -> b
    int reverseTransit(int) -> c
    int transitToStyleIndex(int,boolean) -> b
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.o:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.p:
    android.support.v4.app.Fragment val$fragment -> a
    android.support.v4.app.FragmentManagerImpl this$0 -> b
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> a
    int[] mAdded -> b
    android.support.v4.app.BackStackState[] mBackStack -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.q:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentManagerState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> a
    int mIndex -> b
    boolean mFromLayout -> c
    int mFragmentId -> d
    int mContainerId -> e
    java.lang.String mTag -> f
    boolean mRetainInstance -> g
    boolean mDetached -> h
    android.os.Bundle mArguments -> i
    android.os.Bundle mSavedFragmentState -> j
    android.support.v4.app.Fragment mInstance -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.r:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> a
    android.content.Context mContext -> b
    android.support.v4.app.FragmentManager mFragmentManager -> c
    int mContainerId -> d
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> e
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> f
    boolean mAttached -> g
    void setup() -> setup
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> a
android.support.v4.app.FragmentTabHost$1 -> android.support.v4.app.s:
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.t:
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.u:
    java.lang.String tag -> a
    java.lang.Class clss -> b
    android.os.Bundle args -> c
    android.support.v4.app.Fragment fragment -> d
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> a
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> b
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> c
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> d
android.support.v4.app.FragmentTransaction -> android.support.v4.app.v:
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> b
    int commit() -> a
android.support.v4.app.LoaderManager -> android.support.v4.app.w:
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.x:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.y:
    boolean DEBUG -> a
    android.support.v4.util.SparseArrayCompat mLoaders -> b
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> c
    java.lang.String mWho -> d
    android.support.v4.app.FragmentActivity mActivity -> e
    boolean mStarted -> f
    boolean mRetaining -> g
    void updateActivity(android.support.v4.app.FragmentActivity) -> a
    void doStart() -> b
    void doStop() -> c
    void doRetain() -> d
    void finishRetain() -> e
    void doReportNextStart() -> f
    void doReportStart() -> g
    void doDestroy() -> h
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.z:
    int mId -> a
    android.os.Bundle mArgs -> b
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> c
    android.support.v4.content.Loader mLoader -> d
    boolean mHaveData -> e
    boolean mDeliveredData -> f
    java.lang.Object mData -> g
    boolean mStarted -> h
    boolean mRetaining -> i
    boolean mRetainingStarted -> j
    boolean mReportNextStart -> k
    boolean mDestroyed -> l
    boolean mListenerRegistered -> m
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> n
    android.support.v4.app.LoaderManagerImpl this$0 -> o
    void start() -> a
    void retain() -> b
    void finishRetain() -> c
    void reportStart() -> d
    void stop() -> e
    void destroy() -> f
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.aa:
    android.view.ViewGroup wrap(android.view.View) -> a
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.ab:
android.support.v4.content.Loader -> android.support.v4.a.a:
    int mId -> a
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> b
    boolean mStarted -> c
    boolean mAbandoned -> d
    boolean mReset -> e
    boolean mContentChanged -> f
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void startLoading() -> a
    void onStartLoading() -> b
    void stopLoading() -> c
    void onStopLoading() -> d
    void reset() -> e
    void onReset() -> f
    java.lang.String dataToString(java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.a.b:
android.support.v4.os.ParcelableCompat -> android.support.v4.b.a:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.b.b:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.b.c:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    java.lang.Object[] newArray(int) -> a
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.b.d:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.b.e:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.util.DebugUtils -> android.support.v4.c.a:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
android.support.v4.util.LogWriter -> android.support.v4.c.b:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> a
android.support.v4.util.SparseArrayCompat -> android.support.v4.c.c:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    void gc() -> c
    int size() -> a
    int keyAt(int) -> a
    java.lang.Object valueAt(int) -> b
    void clear() -> b
    int idealByteArraySize(int) -> c
    int idealIntArraySize(int) -> d
android.support.v4.view.KeyEventCompat -> android.support.v4.view.a:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    boolean hasModifiers(android.view.KeyEvent,int) -> a
    boolean hasNoModifiers(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.b:
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> a
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.c:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.d:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.e:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> a
android.support.v4.view.MotionEventCompat -> android.support.v4.view.f:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    int getActionIndex(android.view.MotionEvent) -> a
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.g:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.h:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.i:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.j:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.PagerAdapter -> android.support.v4.view.k:
    android.database.DataSetObservable mObservable -> a
    int getCount() -> a
    void startUpdate(android.view.ViewGroup) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    void finishUpdate(android.view.ViewGroup) -> b
    void startUpdate(android.view.View) -> a
    java.lang.Object instantiateItem(android.view.View,int) -> a
    void destroyItem(android.view.View,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> b
    void finishUpdate(android.view.View) -> b
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    android.os.Parcelable saveState() -> b
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    int getItemPosition(java.lang.Object) -> a
    void registerDataSetObserver(android.database.DataSetObserver) -> a
    void unregisterDataSetObserver(android.database.DataSetObserver) -> b
    float getPageWidth(int) -> a
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.l:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.m:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.n:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.o:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.p:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.ViewCompat -> android.support.v4.view.q:
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.r:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.s:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.t:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.u:
    boolean canScrollHorizontally(android.view.View,int) -> a
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.v:
    void postInvalidateOnAnimation(android.view.View) -> b
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.w:
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.x:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.y:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompatHC -> android.support.v4.view.z:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompatICS -> android.support.v4.view.aa:
    boolean canScrollHorizontally(android.view.View,int) -> a
android.support.v4.view.ViewCompatJB -> android.support.v4.view.ab:
    void postInvalidateOnAnimation(android.view.View) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    int[] LAYOUT_ATTRS -> a
    java.util.Comparator COMPARATOR -> b
    android.view.animation.Interpolator sInterpolator -> c
    java.util.ArrayList mItems -> d
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> e
    android.graphics.Rect mTempRect -> f
    android.support.v4.view.PagerAdapter mAdapter -> g
    int mCurItem -> h
    int mRestoredCurItem -> i
    android.os.Parcelable mRestoredAdapterState -> j
    java.lang.ClassLoader mRestoredClassLoader -> k
    android.widget.Scroller mScroller -> l
    android.support.v4.view.ViewPager$PagerObserver mObserver -> m
    int mPageMargin -> n
    android.graphics.drawable.Drawable mMarginDrawable -> o
    int mTopPageBounds -> p
    int mBottomPageBounds -> q
    float mFirstOffset -> r
    float mLastOffset -> s
    int mChildWidthMeasureSpec -> t
    int mChildHeightMeasureSpec -> u
    boolean mInLayout -> v
    boolean mScrollingCacheEnabled -> w
    boolean mPopulatePending -> x
    int mOffscreenPageLimit -> y
    boolean mIsBeingDragged -> z
    boolean mIsUnableToDrag -> A
    int mDefaultGutterSize -> B
    int mGutterSize -> C
    int mTouchSlop -> D
    float mLastMotionX -> E
    float mLastMotionY -> F
    float mInitialMotionX -> G
    float mInitialMotionY -> H
    int mActivePointerId -> I
    android.view.VelocityTracker mVelocityTracker -> J
    int mMinimumVelocity -> K
    int mMaximumVelocity -> L
    int mFlingDistance -> M
    int mCloseEnough -> N
    boolean mFakeDragging -> O
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> P
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> Q
    boolean mFirstLayout -> R
    boolean mNeedCalculatePageOffsets -> S
    boolean mCalledSuper -> T
    int mDecorChildCount -> U
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> V
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> W
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> Z
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> aa
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> ab
    int mDrawingOrder -> ac
    java.util.ArrayList mDrawingOrderedChildren -> ad
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> ae
    java.lang.Runnable mEndScrollRunnable -> af
    int mScrollState -> ag
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> f
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> a
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void scrollToItem(int,boolean,int,boolean) -> a
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void setChildrenDrawingOrderEnabledCompat(boolean) -> setChildrenDrawingOrderEnabledCompat
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> a
    void smoothScrollTo(int,int,int) -> a
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> a
    void dataSetChanged() -> a
    void populate() -> b
    void populate(int) -> a
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> a
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> b
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> d
    void onPageScrolled(int,float,int) -> a
    void completeScroll(boolean) -> a
    boolean isGutterDrag(float,float) -> a
    void enableLayers(boolean) -> b
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean performDrag(float) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> g
    int determineTargetPage(int,float,int,int) -> a
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    void endDrag() -> h
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScroll(android.view.View,boolean,int,int,int) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> a
    boolean arrowScroll(int) -> c
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> a
    boolean pageLeft() -> c
    boolean pageRight() -> d
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    int[] access$400() -> e
android.support.v4.view.ViewPager$1 -> android.support.v4.view.ac:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.ad:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.ae:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.af:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
    float widthFactor -> d
    float offset -> e
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.ag:
    boolean isDecor -> a
    int gravity -> b
    float widthFactor -> c
    boolean needsMeasure -> d
    int position -> e
    int childIndex -> f
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.ah:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.ai:
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void onPageScrollStateChanged(int) -> b
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.aj:
    void transformPage(android.view.View,float) -> a
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.ak:
    android.support.v4.view.ViewPager this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.al:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> b
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> b
    java.lang.Object[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.am:
    int compare(android.view.View,android.view.View) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.d.a:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> b
    void setSize(int,int) -> a
    boolean isFinished() -> a
    void finish() -> b
    boolean onPull(float) -> a
    boolean onRelease() -> c
    boolean draw(android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.d.b:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.d.c:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.d.d:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.d.e:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
com.app.sentinelsecurity.FinalActivity -> com.app.sentinelsecurity.FinalActivity:
    void onCreate(android.os.Bundle) -> onCreate
com.app.sentinelsecurity.FinalActivity$1 -> com.app.sentinelsecurity.a:
    com.app.sentinelsecurity.FinalActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.app.sentinelsecurity.ListActivity -> com.app.sentinelsecurity.b:
    android.widget.ListView items -> a
    com.app.sentinelsecurity.domain.DbData dbData -> b
    java.util.List questions -> c
    com.app.sentinelsecurity.QuestionsAdapter adapter -> d
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void createHeader() -> h
    java.lang.Class getNextClass() -> a
    android.content.Context getActivity() -> b
    android.content.Context getCurrentContext() -> c
    java.lang.String getHeaderTitle() -> d
    java.util.List getQuestionsList() -> e
    android.widget.ListView getListView() -> f
    java.util.List getQuestions(java.lang.Long) -> a
    java.util.List getQuestionsFromCursor(android.database.Cursor) -> a
    com.app.sentinelsecurity.domain.DbData getDbData() -> g
com.app.sentinelsecurity.ListActivity$1 -> com.app.sentinelsecurity.c:
    com.app.sentinelsecurity.ListActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.app.sentinelsecurity.ListActivity$2 -> com.app.sentinelsecurity.d:
    com.app.sentinelsecurity.ListActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.app.sentinelsecurity.ListActivity$3 -> com.app.sentinelsecurity.e:
    com.app.sentinelsecurity.ListActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.app.sentinelsecurity.MainActivity -> com.app.sentinelsecurity.MainActivity:
    android.content.Context context -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
com.app.sentinelsecurity.MonitoringActivity -> com.app.sentinelsecurity.MonitoringActivity:
    android.content.Context context -> e
    void onCreate(android.os.Bundle) -> onCreate
    java.util.List getQuestionsList() -> e
    java.lang.Class getNextClass() -> a
    android.content.Context getActivity() -> b
    android.content.Context getCurrentContext() -> c
    java.lang.String getHeaderTitle() -> d
com.app.sentinelsecurity.NotificationActivity -> com.app.sentinelsecurity.NotificationActivity:
    android.content.Context context -> e
    void onCreate(android.os.Bundle) -> onCreate
    java.lang.Class getNextClass() -> a
    android.app.Activity getActivity() -> h
    android.content.Context getCurrentContext() -> c
    java.lang.String getHeaderTitle() -> d
    java.util.List getQuestionsList() -> e
    android.content.Context getActivity() -> b
com.app.sentinelsecurity.NotificationResumeActivity -> com.app.sentinelsecurity.NotificationResumeActivity:
    android.content.Context context -> e
    void onCreate(android.os.Bundle) -> onCreate
    java.util.List getQuestionsList() -> e
    java.lang.Class getNextClass() -> a
    android.content.Context getActivity() -> b
    android.content.Context getCurrentContext() -> c
    java.lang.String getHeaderTitle() -> d
com.app.sentinelsecurity.PdfBuilder -> com.app.sentinelsecurity.f:
    com.lowagie.text.Document document -> k
    java.io.File file -> l
    com.lowagie.text.pdf.PdfWriter writer -> m
    android.database.Cursor cursor -> n
    int FIELD_TYPE_TEXTAREA -> a
    int FIELD_TYPE_RADIO -> b
    int FIELD_TYPE_CHECKBOX -> c
    com.lowagie.text.Font BOLD_UNDERLINED -> d
    com.lowagie.text.Font BOLD -> e
    com.lowagie.text.Font BOLD_SMALL -> f
    com.lowagie.text.Font UNDERLINED -> g
    com.lowagie.text.Font NORMAL -> h
    com.lowagie.text.Font NORMAL_BOLD -> i
    com.lowagie.text.Font NORMAL_SMALL -> j
    void createPdf(java.io.File,android.database.Cursor) -> a
    void buildPdf() -> a
    void addReportHeader() -> b
    void addNotficationSection() -> c
    void addSystemTestSection() -> d
    void addSupervisorySection() -> e
    void addMonitoringSection() -> f
    void addNotficationResumeSection() -> g
    void addGeneralComments() -> h
    void addReportFooter() -> i
    com.lowagie.text.Chunk getSmallSpace() -> j
    com.lowagie.text.pdf.PdfPTable createFourColumnChecklist(java.lang.String[],java.lang.String[],com.lowagie.text.pdf.PdfWriter,java.lang.String,java.lang.String) -> a
    void createFourColumnBody(java.lang.String[],com.lowagie.text.pdf.PdfPTable,java.lang.String) -> a
    com.lowagie.text.pdf.PdfPTable createFiveColumnChecklist(java.lang.String[],java.lang.String[],java.lang.String,java.lang.String) -> a
    com.lowagie.text.pdf.PdfPTable createTable(float[],float) -> a
    void createFiveColumnBody(java.lang.String[],com.lowagie.text.pdf.PdfPTable,java.lang.String) -> b
    void createTableHeaders(java.lang.String[],com.lowagie.text.pdf.PdfPTable) -> a
    com.lowagie.text.Document getDocument() -> k
com.app.sentinelsecurity.PdfBuilder$CellField -> com.app.sentinelsecurity.g:
    com.lowagie.text.pdf.PdfFormField parent -> b
    java.lang.String partialFieldName -> c
    com.lowagie.text.pdf.PdfWriter writer -> d
    boolean checked -> e
    com.app.sentinelsecurity.PdfBuilder this$0 -> a
    void cellLayout(com.lowagie.text.pdf.PdfPCell,com.lowagie.text.Rectangle,com.lowagie.text.pdf.PdfContentByte[]) -> a
    void createCheckboxField(com.lowagie.text.Rectangle) -> a
com.app.sentinelsecurity.QuestionsAdapter -> com.app.sentinelsecurity.h:
    android.content.Context context -> a
    java.util.List questions -> b
    com.app.sentinelsecurity.QuestionsAdapter$QuestionHolder holder -> c
    android.widget.ListView list -> d
    com.app.sentinelsecurity.domain.DbData dbData -> e
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void setStateCheckboxes(com.app.sentinelsecurity.QuestionsAdapter$QuestionHolder,com.app.sentinelsecurity.domain.Question) -> a
    void updateQuestion(com.app.sentinelsecurity.domain.Question,java.lang.Boolean,java.lang.String) -> a
com.app.sentinelsecurity.QuestionsAdapter$1 -> com.app.sentinelsecurity.i:
    boolean proceed -> a
    com.app.sentinelsecurity.QuestionsAdapter this$0 -> b
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.app.sentinelsecurity.QuestionsAdapter$QuestionHolder -> com.app.sentinelsecurity.j:
    android.widget.TextView question -> a
    android.widget.CheckBox yes -> b
    android.widget.CheckBox no -> c
    com.app.sentinelsecurity.QuestionsAdapter this$0 -> d
com.app.sentinelsecurity.SingleQuestionActivity -> com.app.sentinelsecurity.SingleQuestionActivity:
    com.app.sentinelsecurity.domain.DbData dbData -> a
    void onCreate(android.os.Bundle) -> onCreate
    void updateQuestion(com.app.sentinelsecurity.domain.Question,java.lang.Boolean,java.lang.String) -> a
    void setCheckboxesStatus(android.widget.CheckBox,android.widget.CheckBox) -> a
    void setQuestionText() -> a
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
com.app.sentinelsecurity.SingleQuestionActivity$1 -> com.app.sentinelsecurity.k:
    com.app.sentinelsecurity.SingleQuestionActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.app.sentinelsecurity.SingleQuestionActivity$2 -> com.app.sentinelsecurity.l:
    com.app.sentinelsecurity.SingleQuestionActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.app.sentinelsecurity.SingleQuestionActivity$3 -> com.app.sentinelsecurity.m:
    boolean proceed -> a
    com.app.sentinelsecurity.SingleQuestionActivity this$0 -> b
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.app.sentinelsecurity.SupervisoryActivity -> com.app.sentinelsecurity.SupervisoryActivity:
    android.content.Context context -> e
    void onCreate(android.os.Bundle) -> onCreate
    java.util.List getQuestionsList() -> e
    java.lang.Class getNextClass() -> a
    android.content.Context getActivity() -> b
    android.content.Context getCurrentContext() -> c
    java.lang.String getHeaderTitle() -> d
com.app.sentinelsecurity.SystemActivity -> com.app.sentinelsecurity.SystemActivity:
    android.content.Context context -> e
    void onCreate(android.os.Bundle) -> onCreate
    java.util.List getQuestionsList() -> e
    java.lang.Class getNextClass() -> a
    android.content.Context getActivity() -> b
    android.content.Context getCurrentContext() -> c
    java.lang.String getHeaderTitle() -> d
com.app.sentinelsecurity.domain.DbData -> com.app.sentinelsecurity.a.a:
    java.lang.String CREATE_TABLE_QUESTION -> a
    android.content.Context context -> b
    com.app.sentinelsecurity.domain.DbData$DbHelper dbHelper -> c
    android.database.sqlite.SQLiteDatabase db -> d
    java.lang.Long createQuestion() -> a
    void updateQuestion(java.lang.String,java.lang.Boolean,java.lang.Long) -> a
    android.database.Cursor getQuestionsFromDB(java.lang.Long) -> a
    void closeDb() -> b
com.app.sentinelsecurity.domain.DbData$DbHelper -> com.app.sentinelsecurity.a.b:
    com.app.sentinelsecurity.domain.DbData this$0 -> a
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.app.sentinelsecurity.domain.Question -> com.app.sentinelsecurity.a.c:
    java.lang.String question -> a
    java.lang.Boolean isYesChecked -> b
    java.lang.Boolean isNoChecked -> c
    java.lang.String dbYesColumn -> d
    java.lang.String dbNoColumn -> e
    java.lang.String getQuestion() -> a
    java.lang.Boolean getIsYesChecked() -> b
    void setIsYesChecked(java.lang.Boolean) -> a
    java.lang.Boolean getIsNoChecked() -> c
    void setIsNoChecked(java.lang.Boolean) -> b
    java.lang.String getDbYesColumn() -> d
    java.lang.String getDbNoColumn() -> e
com.lowagie.text.Anchor -> com.a.a.a:
    java.lang.String name -> a
    java.lang.String reference -> b
    boolean process(com.lowagie.text.ElementListener) -> a
    java.util.ArrayList getChunks() -> a
    int type() -> b
    java.lang.String getReference() -> c
com.lowagie.text.Annotation -> com.a.a.b:
    int annotationtype -> a
    java.util.HashMap annotationAttributes -> b
    float llx -> c
    float lly -> d
    float urx -> e
    float ury -> f
    int type() -> b
    boolean process(com.lowagie.text.ElementListener) -> a
    java.util.ArrayList getChunks() -> a
    void setDimensions(float,float,float,float) -> a
    float llx() -> c
    float lly() -> d
    float urx() -> e
    float ury() -> f
    float llx(float) -> a
    float lly(float) -> b
    float urx(float) -> c
    float ury(float) -> d
    int annotationType() -> g
    java.lang.String title() -> h
    java.lang.String content() -> i
    java.util.HashMap attributes() -> j
    boolean isContent() -> k
    boolean isNestable() -> l
com.lowagie.text.BadElementException -> com.a.a.c:
com.lowagie.text.Cell -> com.a.a.d:
    java.util.ArrayList arrayList -> a
    int horizontalAlignment -> b
    int verticalAlignment -> c
    float width -> d
    boolean percentage -> e
    int colspan -> f
    int rowspan -> g
    float leading -> h
    int maxLines -> i
    java.lang.String showTruncation -> j
    boolean useAscender -> k
    boolean useDescender -> l
    boolean useBorderPadding -> m
    boolean groupChange -> n
    boolean process(com.lowagie.text.ElementListener) -> a
    int type() -> b
    java.util.ArrayList getChunks() -> a
    int getHorizontalAlignment() -> c
    void setHorizontalAlignment(int) -> a
    int getVerticalAlignment() -> d
    void setVerticalAlignment(int) -> b
    float getWidth() -> e
    void setColspan(int) -> c
    int getColspan() -> f
    void setRowspan(int) -> d
    int getRowspan() -> g
    float getLeading() -> h
    int getMaxLines() -> i
    java.lang.String getShowTruncation() -> j
    boolean isUseAscender() -> m
    boolean isUseDescender() -> n
    boolean isUseBorderPadding() -> o
    boolean getGroupChange() -> p
    int size() -> q
    java.util.Iterator getElements() -> r
    void fill() -> s
    boolean isTable() -> t
    com.lowagie.text.pdf.PdfPCell createPdfPCell() -> u
    float getTop() -> v
    float getBottom() -> w
    float getLeft() -> x
    float getRight() -> y
com.lowagie.text.Chapter -> com.a.a.e:
    int type() -> b
    boolean isNestable() -> l
com.lowagie.text.ChapterAutoNumber -> com.a.a.f:
    boolean numberSet -> a
    int setAutomaticNumber(int) -> a
com.lowagie.text.Chunk -> com.a.a.g:
    com.lowagie.text.Chunk NEWLINE -> a
    com.lowagie.text.Chunk NEXTPAGE -> b
    java.lang.StringBuffer content -> c
    com.lowagie.text.Font font -> d
    java.util.HashMap attributes -> e
    boolean process(com.lowagie.text.ElementListener) -> a
    int type() -> b
    java.util.ArrayList getChunks() -> a
    java.lang.StringBuffer append(java.lang.String) -> a
    void setFont(com.lowagie.text.Font) -> a
    com.lowagie.text.Font getFont() -> c
    java.lang.String getContent() -> d
    java.lang.String toString() -> toString
    boolean isEmpty() -> e
    boolean hasAttributes() -> f
    java.util.HashMap getAttributes() -> g
    void setAttributes(java.util.HashMap) -> a
    com.lowagie.text.Chunk setAttribute(java.lang.String,java.lang.Object) -> a
    com.lowagie.text.Chunk setUnderline(float,float) -> a
    com.lowagie.text.Chunk setUnderline(harmony.java.awt.Color,float,float,float,float,int) -> a
    com.lowagie.text.Chunk setHyphenation(com.lowagie.text.pdf.HyphenationEvent) -> a
    com.lowagie.text.Chunk setLocalGoto(java.lang.String) -> b
    com.lowagie.text.Chunk setLocalDestination(java.lang.String) -> c
    com.lowagie.text.Chunk setAnchor(java.lang.String) -> d
    com.lowagie.text.Chunk setNewPage() -> h
    boolean isContent() -> k
    boolean isNestable() -> l
    com.lowagie.text.pdf.HyphenationEvent getHyphenation() -> i
com.lowagie.text.DocListener -> com.a.a.h:
    void open() -> a
    void close() -> b
    boolean newPage() -> c
    boolean setPageSize(com.lowagie.text.Rectangle) -> a
    boolean setMargins(float,float,float,float) -> a
com.lowagie.text.DocWriter -> com.a.a.i:
    com.lowagie.text.Rectangle pageSize -> a
    com.lowagie.text.Document document -> b
    com.lowagie.text.pdf.OutputStreamCounter os -> c
    boolean open -> d
    boolean pause -> e
    boolean closeStream -> f
    boolean add(com.lowagie.text.Element) -> a
    void open() -> a
    boolean setPageSize(com.lowagie.text.Rectangle) -> a
    boolean setMargins(float,float,float,float) -> a
    boolean newPage() -> c
    void close() -> b
    byte[] getISOBytes(java.lang.String) -> a
    boolean isPaused() -> d
com.lowagie.text.Document -> com.a.a.j:
    boolean compress -> a
    boolean plainRandomAccess -> b
    float wmfFontCorrection -> c
    java.util.ArrayList listeners -> t
    boolean open -> d
    boolean close -> e
    com.lowagie.text.Rectangle pageSize -> f
    float marginLeft -> g
    float marginRight -> h
    float marginTop -> i
    float marginBottom -> j
    boolean marginMirroring -> k
    boolean marginMirroringTopBottom -> l
    java.lang.String javaScript_onLoad -> m
    java.lang.String javaScript_onUnLoad -> n
    java.lang.String htmlStyleClass -> o
    int pageN -> p
    com.lowagie.text.HeaderFooter header -> q
    com.lowagie.text.HeaderFooter footer -> r
    int chapternumber -> s
    void addDocListener(com.lowagie.text.DocListener) -> a
    boolean add(com.lowagie.text.Element) -> a
    void open() -> a
    boolean setPageSize(com.lowagie.text.Rectangle) -> a
    boolean setMargins(float,float,float,float) -> a
    boolean newPage() -> c
    int getPageNumber() -> d
    void close() -> b
    boolean addProducer() -> e
    boolean addCreationDate() -> f
    float rightMargin() -> g
    float left() -> h
    float right() -> i
    float top() -> j
    float bottom() -> k
    float left(float) -> a
    float right(float) -> b
    float top(float) -> c
    float bottom(float) -> d
    java.lang.String getRelease() -> l
    java.lang.String getVersion() -> m
    boolean isMarginMirroring() -> n
com.lowagie.text.DocumentException -> com.a.a.k:
com.lowagie.text.Element -> com.a.a.l:
    boolean process(com.lowagie.text.ElementListener) -> a
    int type() -> b
    boolean isContent() -> k
    boolean isNestable() -> l
    java.util.ArrayList getChunks() -> a
com.lowagie.text.ElementListener -> com.a.a.m:
    boolean add(com.lowagie.text.Element) -> a
com.lowagie.text.ExceptionConverter -> com.a.a.n:
    java.lang.Exception ex -> a
    java.lang.String prefix -> b
    java.lang.RuntimeException convertException(java.lang.Exception) -> a
    java.lang.String getMessage() -> getMessage
    java.lang.String getLocalizedMessage() -> getLocalizedMessage
    java.lang.String toString() -> toString
    void printStackTrace() -> printStackTrace
    void printStackTrace(java.io.PrintStream) -> printStackTrace
    void printStackTrace(java.io.PrintWriter) -> printStackTrace
    java.lang.Throwable fillInStackTrace() -> fillInStackTrace
com.lowagie.text.Font -> com.a.a.o:
    int family -> a
    float size -> b
    int style -> c
    harmony.java.awt.Color color -> d
    com.lowagie.text.pdf.BaseFont baseFont -> e
    int compareTo(java.lang.Object) -> compareTo
    int getFamily() -> a
    java.lang.String getFamilyname() -> b
    float getSize() -> c
    float getCalculatedSize() -> d
    float getCalculatedLeading(float) -> a
    int getStyle() -> e
    boolean isUnderlined() -> f
    boolean isStrikethru() -> g
    void setStyle(int) -> a
    harmony.java.awt.Color getColor() -> h
    com.lowagie.text.pdf.BaseFont getBaseFont() -> i
    com.lowagie.text.pdf.BaseFont getCalculatedBaseFont(boolean) -> a
    boolean isStandardFont() -> j
    com.lowagie.text.Font difference(com.lowagie.text.Font) -> a
com.lowagie.text.FontFactory -> com.a.a.p:
    com.lowagie.text.FontFactoryImp fontImp -> c
    java.lang.String defaultEncoding -> a
    boolean defaultEmbedding -> b
    com.lowagie.text.Font getFont(java.lang.String,java.lang.String,boolean,float,int,harmony.java.awt.Color) -> a
    com.lowagie.text.Font getFont(java.lang.String,java.lang.String,boolean,float,int) -> a
    com.lowagie.text.Font getFont(java.lang.String,float,int,harmony.java.awt.Color) -> a
com.lowagie.text.FontFactoryImp -> com.a.a.q:
    java.util.Properties trueTypeFonts -> c
    java.lang.String[] TTFamilyOrder -> d
    java.util.Hashtable fontFamilies -> e
    java.lang.String defaultEncoding -> a
    boolean defaultEmbedding -> b
    com.lowagie.text.Font getFont(java.lang.String,java.lang.String,boolean,float,int,harmony.java.awt.Color) -> a
    com.lowagie.text.Font getFont(java.lang.String,java.lang.String,boolean,float,int,harmony.java.awt.Color,boolean) -> a
com.lowagie.text.HeaderFooter -> com.a.a.r:
    boolean numbered -> a
    com.lowagie.text.Phrase before -> b
    int pageN -> c
    com.lowagie.text.Phrase after -> d
    int alignment -> e
    void setPageNumber(int) -> a
    com.lowagie.text.Paragraph paragraph() -> c
com.lowagie.text.Image -> com.a.a.s:
    int type -> a
    java.net.URL url -> b
    byte[] rawData -> c
    int bpc -> d
    com.lowagie.text.pdf.PdfTemplate[] template -> e
    int alignment -> f
    java.lang.String alt -> g
    float absoluteX -> h
    float absoluteY -> i
    float plainWidth -> j
    float plainHeight -> k
    float scaledWidth -> l
    float scaledHeight -> m
    int compressionLevel -> n
    java.lang.Long mySerialId -> o
    com.lowagie.text.pdf.PdfIndirectReference directReference -> aa
    long serialId -> p
    float rotationRadians -> q
    float initialRotation -> ab
    float indentationLeft -> r
    float indentationRight -> s
    float spacingBefore -> t
    float spacingAfter -> u
    float widthPercentage -> ac
    com.lowagie.text.Annotation annotation -> v
    com.lowagie.text.pdf.PdfOCG layer -> w
    boolean interpolation -> x
    int originalType -> y
    byte[] originalData -> z
    boolean deflated -> A
    int dpiX -> B
    int dpiY -> C
    float XYRatio -> ad
    int colorspace -> D
    boolean invert -> E
    com.lowagie.text.pdf.PdfDictionary additional -> ae
    boolean mask -> F
    com.lowagie.text.Image imageMask -> G
    boolean smask -> af
    int[] transparency -> H
    com.lowagie.text.pdf.PdfIndirectReference getDirectReference() -> c
    com.lowagie.text.Image getInstance(com.lowagie.text.Image) -> a
    int type() -> b
    boolean isNestable() -> l
    boolean isImgRaw() -> d
    boolean isImgTemplate() -> f
    java.net.URL getUrl() -> g
    byte[] getRawData() -> h
    int getBpc() -> i
    com.lowagie.text.pdf.PdfTemplate getTemplateData() -> j
    void setTemplateData(com.lowagie.text.pdf.PdfTemplate) -> a
    int getAlignment() -> m
    void setAbsolutePosition(float,float) -> a
    boolean hasAbsoluteX() -> n
    float getAbsoluteX() -> o
    boolean hasAbsoluteY() -> p
    float getAbsoluteY() -> q
    float getScaledWidth() -> r
    float getScaledHeight() -> s
    void scaleAbsolute(float,float) -> b
    void scalePercent(float) -> a
    void scalePercent(float,float) -> c
    void scaleToFit(float,float) -> d
    float[] matrix() -> t
    java.lang.Long getSerialId() -> u
    java.lang.Long getMySerialId() -> z
    float getImageRotation() -> A
    void setRotation(float) -> b
    float getIndentationLeft() -> B
    float getIndentationRight() -> C
    float getSpacingBefore() -> D
    float getSpacingAfter() -> E
    float getWidthPercentage() -> F
    void setWidthPercentage(float) -> c
    com.lowagie.text.Annotation getAnnotation() -> G
    com.lowagie.text.pdf.PdfOCG getLayer() -> H
    boolean isInterpolation() -> I
    void setOriginalType(int) -> a
    boolean isDeflated() -> J
    void setDpi(int,int) -> a
    int getColorspace() -> K
    boolean isInverted() -> L
    com.lowagie.text.pdf.PdfDictionary getAdditional() -> M
    void setAdditional(com.lowagie.text.pdf.PdfDictionary) -> a
    boolean isMask() -> N
    com.lowagie.text.Image getImageMask() -> O
    boolean isSmask() -> P
    int[] getTransparency() -> Q
    int getCompressionLevel() -> R
com.lowagie.text.ImgJBIG2 -> com.a.a.t:
    byte[] global -> aa
    byte[] getGlobalBytes() -> S
com.lowagie.text.ImgRaw -> com.a.a.u:
com.lowagie.text.ImgWMF -> com.a.a.v:
    void readWMF(com.lowagie.text.pdf.PdfTemplate) -> b
com.lowagie.text.LargeElement -> com.a.a.w:
    boolean isComplete() -> c
    void flushContent() -> d
com.lowagie.text.List -> com.a.a.x:
    java.util.ArrayList list -> a
    boolean numbered -> b
    boolean lettered -> c
    boolean lowercase -> d
    boolean autoindent -> e
    boolean alignindent -> f
    int first -> g
    com.lowagie.text.Chunk symbol -> h
    java.lang.String preSymbol -> i
    java.lang.String postSymbol -> j
    float indentationLeft -> k
    float indentationRight -> l
    float symbolIndent -> m
    boolean process(com.lowagie.text.ElementListener) -> a
    int type() -> b
    java.util.ArrayList getChunks() -> a
    void normalizeIndentation() -> c
    void setIndentationLeft(float) -> a
    void setIndentationRight(float) -> b
    java.util.ArrayList getItems() -> d
    boolean isAlignindent() -> e
    float getIndentationLeft() -> f
    float getIndentationRight() -> g
    boolean isContent() -> k
    boolean isNestable() -> l
com.lowagie.text.ListItem -> com.a.a.y:
    com.lowagie.text.Chunk symbol -> k
    int type() -> b
    com.lowagie.text.Chunk getListSymbol() -> c
com.lowagie.text.MarkedObject -> com.a.a.z:
    com.lowagie.text.Element element -> a
    java.util.Properties markupAttributes -> b
    java.util.ArrayList getChunks() -> a
    boolean process(com.lowagie.text.ElementListener) -> a
    int type() -> b
    boolean isContent() -> k
    boolean isNestable() -> l
com.lowagie.text.MarkedSection -> com.a.a.aa:
    com.lowagie.text.MarkedObject title -> c
    boolean process(com.lowagie.text.ElementListener) -> a
    com.lowagie.text.MarkedObject getTitle() -> c
com.lowagie.text.Meta -> com.a.a.ab:
    int type -> a
    java.lang.StringBuffer content -> b
    boolean process(com.lowagie.text.ElementListener) -> a
    int type() -> b
    java.util.ArrayList getChunks() -> a
    boolean isContent() -> k
    boolean isNestable() -> l
    java.lang.String getContent() -> c
    java.lang.String getName() -> d
com.lowagie.text.PageSize -> com.a.a.ac:
    com.lowagie.text.Rectangle LETTER -> a
    com.lowagie.text.Rectangle NOTE -> b
    com.lowagie.text.Rectangle LEGAL -> c
    com.lowagie.text.Rectangle TABLOID -> d
    com.lowagie.text.Rectangle EXECUTIVE -> e
    com.lowagie.text.Rectangle POSTCARD -> f
    com.lowagie.text.Rectangle A0 -> g
    com.lowagie.text.Rectangle A1 -> h
    com.lowagie.text.Rectangle A2 -> i
    com.lowagie.text.Rectangle A3 -> j
    com.lowagie.text.Rectangle A4 -> k
    com.lowagie.text.Rectangle A5 -> l
    com.lowagie.text.Rectangle A6 -> m
    com.lowagie.text.Rectangle A7 -> n
    com.lowagie.text.Rectangle A8 -> o
    com.lowagie.text.Rectangle A9 -> p
    com.lowagie.text.Rectangle A10 -> q
    com.lowagie.text.Rectangle B0 -> r
    com.lowagie.text.Rectangle B1 -> s
    com.lowagie.text.Rectangle B2 -> t
    com.lowagie.text.Rectangle B3 -> u
    com.lowagie.text.Rectangle B4 -> v
    com.lowagie.text.Rectangle B5 -> w
    com.lowagie.text.Rectangle B6 -> x
    com.lowagie.text.Rectangle B7 -> y
    com.lowagie.text.Rectangle B8 -> z
    com.lowagie.text.Rectangle B9 -> A
    com.lowagie.text.Rectangle B10 -> B
    com.lowagie.text.Rectangle ARCH_E -> C
    com.lowagie.text.Rectangle ARCH_D -> D
    com.lowagie.text.Rectangle ARCH_C -> E
    com.lowagie.text.Rectangle ARCH_B -> F
    com.lowagie.text.Rectangle ARCH_A -> G
    com.lowagie.text.Rectangle FLSA -> H
    com.lowagie.text.Rectangle FLSE -> I
    com.lowagie.text.Rectangle HALFLETTER -> J
    com.lowagie.text.Rectangle _11X17 -> K
    com.lowagie.text.Rectangle ID_1 -> L
    com.lowagie.text.Rectangle ID_2 -> M
    com.lowagie.text.Rectangle ID_3 -> N
    com.lowagie.text.Rectangle LEDGER -> O
    com.lowagie.text.Rectangle CROWN_QUARTO -> P
    com.lowagie.text.Rectangle LARGE_CROWN_QUARTO -> Q
    com.lowagie.text.Rectangle DEMY_QUARTO -> R
    com.lowagie.text.Rectangle ROYAL_QUARTO -> S
    com.lowagie.text.Rectangle CROWN_OCTAVO -> T
    com.lowagie.text.Rectangle LARGE_CROWN_OCTAVO -> U
    com.lowagie.text.Rectangle DEMY_OCTAVO -> V
    com.lowagie.text.Rectangle ROYAL_OCTAVO -> W
    com.lowagie.text.Rectangle SMALL_PAPERBACK -> X
    com.lowagie.text.Rectangle PENGUIN_SMALL_PAPERBACK -> Y
    com.lowagie.text.Rectangle PENGUIN_LARGE_PAPERBACK -> Z
com.lowagie.text.Paragraph -> com.a.a.ad:
    int alignment -> a
    float multipliedLeading -> b
    float indentationLeft -> c
    float indentationRight -> d
    float firstLineIndent -> k
    float spacingBefore -> e
    float spacingAfter -> f
    float extraParagraphSpace -> l
    boolean keeptogether -> g
    int type() -> b
    boolean add(java.lang.Object) -> add
    void setAlignment(int) -> a
    void setLeading(float) -> a
    void setLeading(float,float) -> a
    void setIndentationLeft(float) -> b
    void setIndentationRight(float) -> c
    void setFirstLineIndent(float) -> d
    void setSpacingBefore(float) -> e
    void setSpacingAfter(float) -> f
    boolean getKeepTogether() -> d
    int getAlignment() -> e
    float getMultipliedLeading() -> f
    float getTotalLeading() -> g
    float getIndentationLeft() -> h
    float getIndentationRight() -> i
    float getFirstLineIndent() -> j
    float getSpacingBefore() -> m
    float getSpacingAfter() -> n
    float getExtraParagraphSpace() -> o
    void setExtraParagraphSpace(float) -> g
    float spacingBefore() -> p
    float spacingAfter() -> q
com.lowagie.text.Phrase -> com.a.a.ae:
    float leading -> h
    com.lowagie.text.Font font -> i
    com.lowagie.text.pdf.HyphenationEvent hyphenation -> j
    boolean process(com.lowagie.text.ElementListener) -> a
    int type() -> b
    java.util.ArrayList getChunks() -> a
    boolean isContent() -> k
    boolean isNestable() -> l
    void add(int,java.lang.Object) -> add
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    boolean addChunk(com.lowagie.text.Chunk) -> a
    void addSpecial(java.lang.Object) -> a
    void setLeading(float) -> a
    float getLeading() -> r
    boolean hasLeading() -> s
    com.lowagie.text.Font getFont() -> t
    boolean isEmpty() -> isEmpty
    com.lowagie.text.pdf.HyphenationEvent getHyphenation() -> u
    void setHyphenation(com.lowagie.text.pdf.HyphenationEvent) -> a
com.lowagie.text.Rectangle -> com.a.a.af:
    float llx -> I
    float lly -> J
    float urx -> K
    float ury -> L
    int rotation -> M
    harmony.java.awt.Color backgroundColor -> N
    int border -> O
    boolean useVariableBorders -> P
    float borderWidth -> Q
    float borderWidthLeft -> R
    float borderWidthRight -> S
    float borderWidthTop -> T
    float borderWidthBottom -> U
    harmony.java.awt.Color borderColor -> V
    harmony.java.awt.Color borderColorLeft -> W
    harmony.java.awt.Color borderColorRight -> X
    harmony.java.awt.Color borderColorTop -> Y
    harmony.java.awt.Color borderColorBottom -> Z
    boolean process(com.lowagie.text.ElementListener) -> a
    int type() -> b
    java.util.ArrayList getChunks() -> a
    boolean isContent() -> k
    boolean isNestable() -> l
    void setLeft(float) -> d
    float getLeft() -> x
    float getLeft(float) -> e
    void setRight(float) -> f
    float getRight() -> y
    float getRight(float) -> g
    float getWidth() -> e
    void setTop(float) -> h
    float getTop() -> v
    float getTop(float) -> i
    void setBottom(float) -> j
    float getBottom() -> w
    float getBottom(float) -> k
    float getHeight() -> T
    void normalize() -> U
    int getRotation() -> V
    harmony.java.awt.Color getBackgroundColor() -> W
    void setBackgroundColor(harmony.java.awt.Color) -> a
    int getBorder() -> X
    boolean hasBorders() -> Y
    boolean hasBorder(int) -> e
    void setBorder(int) -> f
    boolean isUseVariableBorders() -> Z
    void disableBorderSide(int) -> g
    float getBorderWidth() -> aa
    void setBorderWidth(float) -> l
    float getVariableBorderWidth(float,int) -> a
    float getBorderWidthLeft() -> ab
    float getBorderWidthRight() -> ac
    float getBorderWidthTop() -> ad
    float getBorderWidthBottom() -> ae
    harmony.java.awt.Color getBorderColor() -> af
    void setBorderColor(harmony.java.awt.Color) -> b
    harmony.java.awt.Color getBorderColorLeft() -> ag
    harmony.java.awt.Color getBorderColorRight() -> ah
    harmony.java.awt.Color getBorderColorTop() -> ai
    harmony.java.awt.Color getBorderColorBottom() -> aj
    com.lowagie.text.Rectangle rectangle(float,float) -> e
    void cloneNonPositionParameters(com.lowagie.text.Rectangle) -> a
    void softCloneNonPositionParameters(com.lowagie.text.Rectangle) -> b
    java.lang.String toString() -> toString
com.lowagie.text.RectangleReadOnly -> com.a.a.ag:
    void throwReadOnlyError() -> c
    void setLeft(float) -> d
    void setRight(float) -> f
    void setTop(float) -> h
    void setBottom(float) -> j
    void normalize() -> U
    void setBackgroundColor(harmony.java.awt.Color) -> a
    void setBorder(int) -> f
    void disableBorderSide(int) -> g
    void setBorderWidth(float) -> l
    void setBorderColor(harmony.java.awt.Color) -> b
    void cloneNonPositionParameters(com.lowagie.text.Rectangle) -> a
    void softCloneNonPositionParameters(com.lowagie.text.Rectangle) -> b
    java.lang.String toString() -> toString
com.lowagie.text.Row -> com.a.a.ah:
    int columns -> a
    int currentColumn -> b
    boolean[] reserved -> c
    java.lang.Object[] cells -> d
    boolean process(com.lowagie.text.ElementListener) -> a
    int type() -> b
    java.util.ArrayList getChunks() -> a
    boolean isContent() -> k
    boolean isNestable() -> l
    int addElement(java.lang.Object,int) -> a
    void setElement(java.lang.Object,int) -> b
    boolean reserve(int,int) -> a
    boolean isReserved(int) -> a
    int getObjectID(java.lang.Object) -> a
    java.lang.Object getCell(int) -> b
    boolean isEmpty() -> c
    int getColumns() -> d
com.lowagie.text.RtfElementInterface -> com.a.a.ai:
com.lowagie.text.Section -> com.a.a.aj:
    com.lowagie.text.Paragraph title -> b
    java.lang.String bookmarkTitle -> c
    int numberDepth -> d
    int numberStyle -> e
    float indentationLeft -> f
    float indentationRight -> g
    float indentation -> h
    boolean bookmarkOpen -> i
    boolean triggerNewPage -> j
    int subsections -> k
    java.util.ArrayList numbers -> l
    boolean complete -> m
    boolean addedCompletely -> n
    boolean notAddedYet -> o
    boolean process(com.lowagie.text.ElementListener) -> a
    int type() -> b
    java.util.ArrayList getChunks() -> a
    boolean isContent() -> k
    boolean isNestable() -> l
    void add(int,java.lang.Object) -> add
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    com.lowagie.text.Paragraph getTitle() -> e
    com.lowagie.text.Paragraph constructTitle(com.lowagie.text.Paragraph,java.util.ArrayList,int,int) -> a
    float getIndentationLeft() -> f
    float getIndentationRight() -> g
    float getIndentation() -> h
    boolean isBookmarkOpen() -> i
    boolean isTriggerNewPage() -> j
    com.lowagie.text.Paragraph getBookmarkTitle() -> m
    void setChapterNumber(int) -> b
    int getDepth() -> n
    void setNumbers(int,java.util.ArrayList) -> a
    boolean isNotAddedYet() -> o
    void setNotAddedYet(boolean) -> a
    boolean isAddedCompletely() -> p
    void setAddedCompletely(boolean) -> b
    void flushContent() -> d
    boolean isComplete() -> c
com.lowagie.text.SimpleCell -> com.a.a.ak:
    java.util.ArrayList content -> d
    float width -> e
    float widthpercentage -> f
    float spacing_left -> g
    float spacing_right -> h
    float spacing_top -> i
    float spacing_bottom -> j
    float padding_left -> k
    float padding_right -> l
    float padding_top -> m
    float padding_bottom -> n
    int colspan -> o
    int horizontalAlignment -> p
    int verticalAlignment -> q
    boolean cellgroup -> r
    boolean useAscender -> a
    boolean useDescender -> b
    boolean useBorderPadding -> c
    com.lowagie.text.pdf.PdfPCell createPdfPCell(com.lowagie.text.SimpleCell) -> a
    void cellLayout(com.lowagie.text.pdf.PdfPCell,com.lowagie.text.Rectangle,com.lowagie.text.pdf.PdfContentByte[]) -> a
    void setPadding(float) -> a
    int getColspan() -> c
    void setPadding_bottom(float) -> b
    void setPadding_left(float) -> c
    void setPadding_right(float) -> m
    void setPadding_top(float) -> n
    float getSpacing_left() -> d
    float getSpacing_right() -> f
    float getSpacing_top() -> g
    float getSpacing_bottom() -> h
    void setSpacing(float) -> o
    void setSpacing_left(float) -> p
    void setSpacing_right(float) -> q
    void setSpacing_top(float) -> r
    void setSpacing_bottom(float) -> s
    float getWidth() -> e
    float getWidthpercentage() -> i
    java.util.ArrayList getContent() -> j
    int type() -> b
com.lowagie.text.SimpleTable -> com.a.a.al:
    java.util.ArrayList content -> a
    float width -> b
    float widthpercentage -> c
    float cellspacing -> d
    float cellpadding -> e
    int alignment -> f
    com.lowagie.text.pdf.PdfPTable createPdfPTable() -> c
    void tableLayout(com.lowagie.text.pdf.PdfPTable,float[][],float[],int,int,com.lowagie.text.pdf.PdfContentByte[]) -> a
    void setCellspacing(float) -> a
    float getWidth() -> e
    int type() -> b
    boolean isNestable() -> l
com.lowagie.text.SplitCharacter -> com.a.a.am:
    boolean isSplitCharacter(int,int,int,char[],com.lowagie.text.pdf.PdfChunk[]) -> a
com.lowagie.text.Table -> com.a.a.an:
    int columns -> h
    java.util.ArrayList rows -> i
    harmony.java.awt.Point curPosition -> j
    com.lowagie.text.Cell defaultCell -> k
    int lastHeaderRow -> l
    int alignment -> m
    float cellpadding -> n
    float cellspacing -> o
    float width -> p
    boolean locked -> q
    float[] widths -> r
    boolean mTableInserted -> s
    boolean autoFillEmptyCells -> a
    boolean tableFitsPage -> b
    boolean cellsFitPage -> c
    float offset -> d
    boolean convert2pdfptable -> e
    boolean notAddedYet -> f
    boolean complete -> g
    boolean process(com.lowagie.text.ElementListener) -> a
    int type() -> b
    java.util.ArrayList getChunks() -> a
    boolean isNestable() -> l
    int getColumns() -> f
    int size() -> g
    harmony.java.awt.Dimension getDimension() -> h
    int getLastHeaderRow() -> i
    float getPadding() -> j
    float getSpacing() -> m
    void setAutoFillEmptyCells(boolean) -> a
    float getWidth() -> e
    boolean isCellsFitPage() -> n
    float getOffset() -> o
    void addCell(com.lowagie.text.Cell,harmony.java.awt.Point) -> a
    void insertTable(com.lowagie.text.Table,harmony.java.awt.Point) -> a
    void complete() -> p
    java.lang.Object getElement(int,int) -> a
    void mergeInsertedTables() -> t
    void fillEmptyMatrixCells() -> u
    boolean isValidLocation(com.lowagie.text.Cell,harmony.java.awt.Point) -> b
    void assumeTableDefaults(com.lowagie.text.Cell) -> a
    void placeCell(java.util.ArrayList,com.lowagie.text.Cell,harmony.java.awt.Point) -> a
    void setCurrentLocationToNextValidPosition(harmony.java.awt.Point) -> a
    float[] getWidths(float,float) -> a
    java.util.Iterator iterator() -> q
    com.lowagie.text.pdf.PdfPTable createPdfPTable() -> r
    boolean isNotAddedYet() -> s
    void setNotAddedYet(boolean) -> b
    void flushContent() -> d
    boolean isComplete() -> c
com.lowagie.text.TextElementArray -> com.a.a.ao:
com.lowagie.text.Utilities -> com.a.a.ap:
    java.lang.Object[][] addToArray(java.lang.Object[][],java.lang.Object[]) -> a
    void skip(java.io.InputStream,int) -> a
    boolean isSurrogateHigh(char) -> a
    boolean isSurrogateLow(char) -> b
    boolean isSurrogatePair(java.lang.String,int) -> a
    boolean isSurrogatePair(char[],int) -> a
    int convertToUtf32(char,char) -> a
    int convertToUtf32(char[],int) -> b
    int convertToUtf32(java.lang.String,int) -> b
com.lowagie.text.exceptions.IllegalPdfSyntaxException -> com.a.a.a.a:
com.lowagie.text.exceptions.InvalidPdfException -> com.a.a.a.b:
com.lowagie.text.exceptions.UnsupportedPdfException -> com.a.a.a.c:
com.lowagie.text.pdf.AcroFields -> com.a.a.b.a:
    java.util.HashMap fields -> a
    java.util.HashMap stdFieldFontNames -> b
    com.lowagie.text.pdf.PdfName[] buttonRemove -> c
    java.util.HashMap getFields() -> a
com.lowagie.text.pdf.AcroFields$Item -> com.a.a.b.b:
    java.util.ArrayList values -> a
    java.util.ArrayList widgets -> b
    java.util.ArrayList widget_refs -> c
    java.util.ArrayList merged -> d
    java.util.ArrayList page -> e
    java.util.ArrayList tabOrder -> f
    int size() -> a
    com.lowagie.text.pdf.PdfDictionary getMerged(int) -> a
    java.lang.Integer getPage(int) -> b
    void forcePage(int,int) -> a
    java.lang.Integer getTabOrder(int) -> c
com.lowagie.text.pdf.ArabicLigaturizer -> com.a.a.b.c:
    char[][] chartable -> a
    boolean isVowel(char) -> a
    char charshape(char,int) -> a
    int shapecount(char) -> b
    int ligature(char,com.lowagie.text.pdf.ArabicLigaturizer$charstruct) -> a
    void copycstostring(java.lang.StringBuffer,com.lowagie.text.pdf.ArabicLigaturizer$charstruct,int) -> a
    void doublelig(java.lang.StringBuffer,int) -> a
    boolean connects_to_left(com.lowagie.text.pdf.ArabicLigaturizer$charstruct) -> a
    void shape(char[],java.lang.StringBuffer,int) -> a
    int arabic_shape(char[],int,int,char[],int,int,int) -> a
    void processNumbers(char[],int,int,int) -> a
    void shapeToArabicDigitsWithContext(char[],int,int,char,boolean) -> a
com.lowagie.text.pdf.ArabicLigaturizer$charstruct -> com.a.a.b.d:
    char basechar -> a
    char mark1 -> b
    char vowel -> c
    int lignum -> d
    int numshapes -> e
com.lowagie.text.pdf.BadPdfFormatException -> com.a.a.b.e:
com.lowagie.text.pdf.BaseField -> com.a.a.b.f:
    float borderWidth -> a
    int borderStyle -> b
    harmony.java.awt.Color borderColor -> c
    harmony.java.awt.Color backgroundColor -> d
    harmony.java.awt.Color textColor -> e
    com.lowagie.text.pdf.BaseFont font -> f
    float fontSize -> g
    int alignment -> h
    com.lowagie.text.pdf.PdfWriter writer -> i
    java.lang.String text -> j
    com.lowagie.text.Rectangle box -> k
    int rotation -> l
    int visibility -> m
    java.lang.String fieldName -> n
    int options -> o
    int maxCharacterLength -> p
    java.util.HashMap fieldKeys -> q
    com.lowagie.text.pdf.BaseFont getRealFont() -> a
    com.lowagie.text.pdf.PdfAppearance getBorderAppearance() -> b
    void drawTopFrame(com.lowagie.text.pdf.PdfAppearance) -> a
    void drawBottomFrame(com.lowagie.text.pdf.PdfAppearance) -> b
    void setBorderColor(harmony.java.awt.Color) -> a
    void setBackgroundColor(harmony.java.awt.Color) -> b
    void setTextColor(harmony.java.awt.Color) -> c
    void setFont(com.lowagie.text.pdf.BaseFont) -> a
    void setText(java.lang.String) -> a
    void setBox(com.lowagie.text.Rectangle) -> a
com.lowagie.text.pdf.BaseFont -> com.a.a.b.g:
    int[] CHAR_RANGE_LATIN -> a
    int[] CHAR_RANGE_ARABIC -> b
    int[] CHAR_RANGE_HEBREW -> c
    int[] CHAR_RANGE_CYRILLIC -> d
    java.util.ArrayList subsetRanges -> e
    int fontType -> f
    int[] widths -> g
    java.lang.String[] differences -> h
    char[] unicodeDifferences -> i
    int[][] charBBoxes -> j
    java.lang.String encoding -> k
    boolean embedded -> l
    int compressionLevel -> m
    boolean fontSpecific -> n
    java.util.HashMap fontCache -> o
    java.util.HashMap BuiltinFonts14 -> p
    boolean forceWidthsOutput -> q
    boolean directTextToByte -> r
    boolean subset -> s
    boolean fastWinansi -> t
    com.lowagie.text.pdf.IntHashtable specialMap -> u
    com.lowagie.text.pdf.BaseFont createFont(java.lang.String,java.lang.String,boolean) -> a
    com.lowagie.text.pdf.BaseFont createFont(java.lang.String,java.lang.String,boolean,boolean,byte[],byte[]) -> a
    com.lowagie.text.pdf.BaseFont createFont(java.lang.String,java.lang.String,boolean,boolean,byte[],byte[],boolean) -> a
    com.lowagie.text.pdf.BaseFont createFont(java.lang.String,java.lang.String,boolean,boolean,byte[],byte[],boolean,boolean) -> a
    java.lang.String getBaseName(java.lang.String) -> a
    java.lang.String normalizeEncoding(java.lang.String) -> b
    void createEncoding() -> a
    int getRawWidth(int,java.lang.String) -> a
    int getWidth(int) -> a
    int getWidth(java.lang.String) -> c
    int getAscent(java.lang.String) -> d
    float getAscentPoint(java.lang.String,float) -> a
    float getWidthPoint(java.lang.String,float) -> b
    float getWidthPoint(int,float) -> a
    byte[] convertToBytes(java.lang.String) -> e
    byte[] convertToBytes(int) -> b
    void writeFont(com.lowagie.text.pdf.PdfWriter,com.lowagie.text.pdf.PdfIndirectReference,java.lang.Object[]) -> a
    java.lang.String getEncoding() -> b
    float getFontDescriptor(int,float) -> b
    int getFontType() -> c
    boolean isEmbedded() -> d
    boolean isFontSpecific() -> e
    java.lang.String createSubsetPrefix() -> f
    char getUnicodeDifferences(int) -> c
    java.lang.String getPostscriptFontName() -> g
    java.lang.String[][] getFamilyFontName() -> h
    boolean isSubset() -> i
    java.io.InputStream getResourceStream(java.lang.String) -> f
    java.io.InputStream getResourceStream(java.lang.String,java.lang.ClassLoader) -> a
    int getUnicodeEquivalent(int) -> d
    int getCidCode(int) -> e
    int[] getCharBBox(int) -> f
    int[] getRawCharBBox(int,java.lang.String) -> b
com.lowagie.text.pdf.BaseFont$StreamFont -> com.a.a.b.h:
com.lowagie.text.pdf.BidiLine -> com.a.a.b.i:
    int runDirection -> a
    int pieceSize -> b
    char[] text -> c
    com.lowagie.text.pdf.PdfChunk[] detailChunks -> d
    int totalTextLength -> e
    byte[] orderLevels -> f
    int[] indexChars -> g
    java.util.ArrayList chunks -> h
    int indexChunk -> i
    int indexChunkChar -> j
    int currentChar -> k
    int storedRunDirection -> l
    char[] storedText -> m
    com.lowagie.text.pdf.PdfChunk[] storedDetailChunks -> n
    int storedTotalTextLength -> o
    byte[] storedOrderLevels -> p
    int[] storedIndexChars -> q
    int storedIndexChunk -> r
    int storedIndexChunkChar -> s
    int storedCurrentChar -> t
    boolean shortStore -> u
    com.lowagie.text.pdf.IntHashtable mirrorChars -> v
    int arabicOptions -> w
    boolean isEmpty() -> a
    boolean getParagraph(int) -> a
    void addChunk(com.lowagie.text.pdf.PdfChunk) -> a
    void addPiece(char,com.lowagie.text.pdf.PdfChunk) -> a
    void save() -> b
    void restore() -> c
    void mirrorGlyphs() -> d
    void doArabicShapping() -> e
    com.lowagie.text.pdf.PdfLine processLine(float,float,int,int,int) -> a
    float getWidth(int,int) -> a
    java.util.ArrayList createArrayOfPdfChunks(int,int) -> b
    java.util.ArrayList createArrayOfPdfChunks(int,int,com.lowagie.text.pdf.PdfChunk) -> a
    int[] getWord(int,int) -> c
    int trimRight(int,int) -> d
    int trimRightEx(int,int) -> e
    int trimLeftEx(int,int) -> f
    void reorder(int,int) -> g
    void flip(int,int) -> h
    boolean isWS(char) -> a
com.lowagie.text.pdf.BidiOrder -> com.a.a.b.j:
    byte[] initialTypes -> a
    byte[] embeddings -> b
    byte paragraphEmbeddingLevel -> c
    int textLength -> d
    byte[] resultTypes -> e
    byte[] resultLevels -> f
    byte[] rtypes -> g
    char[] baseTypes -> h
    byte getDirection(char) -> a
    void runAlgorithm() -> b
    void determineParagraphEmbeddingLevel() -> c
    void determineExplicitEmbeddingLevels() -> d
    int removeExplicitCodes() -> e
    int reinsertExplicitCodes(int) -> a
    byte[] processEmbeddings(byte[],byte) -> a
    void resolveWeakTypes(int,int,byte,byte,byte) -> a
    void resolveNeutralTypes(int,int,byte,byte,byte) -> b
    void resolveImplicitLevels(int,int,byte,byte,byte) -> c
    byte[] getLevels() -> a
    byte[] getLevels(int[]) -> a
    boolean isWhitespace(byte) -> a
    byte typeForLevel(int) -> b
    int findRunLimit(int,int,byte[]) -> a
    void setTypes(int,int,byte) -> a
    void setLevels(int,int,byte) -> b
    void validateParagraphEmbeddingLevel(byte) -> b
    void validateLineBreaks(int[],int) -> a
com.lowagie.text.pdf.ByteBuffer -> com.a.a.b.k:
    int count -> a
    byte[] buf -> b
    int byteCacheSize -> d
    byte[][] byteCache -> e
    char[] chars -> f
    byte[] bytes -> g
    boolean HIGH_PRECISION -> c
    java.text.DecimalFormatSymbols dfs -> h
    com.lowagie.text.pdf.ByteBuffer append_i(int) -> a
    com.lowagie.text.pdf.ByteBuffer append(byte[],int,int) -> a
    com.lowagie.text.pdf.ByteBuffer append(byte[]) -> a
    com.lowagie.text.pdf.ByteBuffer append(java.lang.String) -> a
    com.lowagie.text.pdf.ByteBuffer append(char) -> a
    com.lowagie.text.pdf.ByteBuffer append(com.lowagie.text.pdf.ByteBuffer) -> a
    com.lowagie.text.pdf.ByteBuffer append(int) -> b
    com.lowagie.text.pdf.ByteBuffer append(byte) -> a
    com.lowagie.text.pdf.ByteBuffer appendHex(byte) -> b
    com.lowagie.text.pdf.ByteBuffer append(float) -> a
    com.lowagie.text.pdf.ByteBuffer append(double) -> a
    java.lang.String formatDouble(double) -> b
    java.lang.String formatDouble(double,com.lowagie.text.pdf.ByteBuffer) -> a
    void reset() -> a
    byte[] toByteArray() -> b
    int size() -> c
    void setSize(int) -> c
    java.lang.String toString() -> toString
    void writeTo(java.io.OutputStream) -> a
    void write(int) -> write
    void write(byte[],int,int) -> write
com.lowagie.text.pdf.CFFFont -> com.a.a.b.l:
    java.lang.String[] operatorNames -> a
    java.lang.String[] standardStrings -> b
    int nextIndexOffset -> c
    java.lang.String key -> d
    java.lang.Object[] args -> e
    int arg_count -> f
    com.lowagie.text.pdf.RandomAccessFileOrArray buf -> g
    int offSize -> q
    int nameIndexOffset -> h
    int topdictIndexOffset -> i
    int stringIndexOffset -> j
    int gsubrIndexOffset -> k
    int[] nameOffsets -> l
    int[] topdictOffsets -> m
    int[] stringOffsets -> n
    int[] gsubrOffsets -> o
    com.lowagie.text.pdf.CFFFont$Font[] fonts -> p
    java.lang.String getString(char) -> a
    char getCard8() -> a
    char getCard16() -> b
    int getOffset(int) -> a
    void seek(int) -> b
    short getShort() -> c
    int getInt() -> d
    int getPosition() -> e
    int[] getIndex(int) -> c
    void getDictItem() -> f
    com.lowagie.text.pdf.CFFFont$RangeItem getEntireIndexRange(int) -> d
    java.lang.String[] getNames() -> g
    void ReadEncoding(int) -> e
com.lowagie.text.pdf.CFFFont$DictNumberItem -> com.a.a.b.m:
    int value -> a
    int size -> b
    void increment(int[]) -> a
    void emit(byte[]) -> a
com.lowagie.text.pdf.CFFFont$DictOffsetItem -> com.a.a.b.n:
    int size -> a
    void increment(int[]) -> a
    void emit(byte[]) -> a
com.lowagie.text.pdf.CFFFont$Font -> com.a.a.b.o:
    java.lang.String name -> a
    java.lang.String fullName -> b
    boolean isCID -> c
    int privateOffset -> d
    int privateLength -> e
    int privateSubrs -> f
    int charstringsOffset -> g
    int encodingOffset -> h
    int charsetOffset -> i
    int fdarrayOffset -> j
    int fdselectOffset -> k
    int[] fdprivateOffsets -> l
    int[] fdprivateLengths -> m
    int nglyphs -> n
    int nstrings -> o
    int CharsetLength -> p
    int[] charstringsOffsets -> q
    int[] FDSelect -> r
    int FDSelectLength -> s
    int FDSelectFormat -> t
    int CharstringType -> u
    int FDArrayCount -> v
    int FDArrayOffsize -> w
    int[] FDArrayOffsets -> x
    int[] PrivateSubrsOffset -> y
    int[][] PrivateSubrsOffsetsArray -> z
    int[] SubrsOffsets -> A
    com.lowagie.text.pdf.CFFFont this$0 -> B
com.lowagie.text.pdf.CFFFont$IndexBaseItem -> com.a.a.b.p:
com.lowagie.text.pdf.CFFFont$IndexMarkerItem -> com.a.a.b.q:
    com.lowagie.text.pdf.CFFFont$OffsetItem offItem -> a
    com.lowagie.text.pdf.CFFFont$IndexBaseItem indexBase -> b
    void xref() -> a
com.lowagie.text.pdf.CFFFont$IndexOffsetItem -> com.a.a.b.r:
    int size -> a
    void increment(int[]) -> a
    void emit(byte[]) -> a
com.lowagie.text.pdf.CFFFont$Item -> com.a.a.b.s:
    int myOffset -> c
    void increment(int[]) -> a
    void emit(byte[]) -> a
    void xref() -> a
com.lowagie.text.pdf.CFFFont$MarkerItem -> com.a.a.b.t:
    com.lowagie.text.pdf.CFFFont$OffsetItem p -> a
    void xref() -> a
com.lowagie.text.pdf.CFFFont$OffsetItem -> com.a.a.b.u:
    int value -> b
    void set(int) -> a
com.lowagie.text.pdf.CFFFont$RangeItem -> com.a.a.b.v:
    int offset -> a
    int length -> b
    com.lowagie.text.pdf.RandomAccessFileOrArray buf -> d
    void increment(int[]) -> a
    void emit(byte[]) -> a
com.lowagie.text.pdf.CFFFont$StringItem -> com.a.a.b.w:
    java.lang.String s -> a
    void increment(int[]) -> a
    void emit(byte[]) -> a
com.lowagie.text.pdf.CFFFont$SubrMarkerItem -> com.a.a.b.x:
    com.lowagie.text.pdf.CFFFont$OffsetItem offItem -> a
    com.lowagie.text.pdf.CFFFont$IndexBaseItem indexBase -> b
    void xref() -> a
com.lowagie.text.pdf.CFFFont$UInt16Item -> com.a.a.b.y:
    char value -> a
    void increment(int[]) -> a
    void emit(byte[]) -> a
com.lowagie.text.pdf.CFFFont$UInt24Item -> com.a.a.b.z:
    int value -> a
    void increment(int[]) -> a
    void emit(byte[]) -> a
com.lowagie.text.pdf.CFFFont$UInt32Item -> com.a.a.b.aa:
    int value -> a
    void increment(int[]) -> a
    void emit(byte[]) -> a
com.lowagie.text.pdf.CFFFont$UInt8Item -> com.a.a.b.ab:
    char value -> a
    void increment(int[]) -> a
    void emit(byte[]) -> a
com.lowagie.text.pdf.CFFFontSubset -> com.a.a.b.ac:
    java.lang.String[] SubrsFunctions -> q
    java.lang.String[] SubrsEscapeFuncs -> r
    java.util.HashMap GlyphsUsed -> s
    java.util.ArrayList glyphsInList -> t
    java.util.HashMap FDArrayUsed -> u
    java.util.HashMap[] hSubrsUsed -> v
    java.util.ArrayList[] lSubrsUsed -> w
    java.util.HashMap hGSubrsUsed -> x
    java.util.ArrayList lGSubrsUsed -> y
    java.util.HashMap hSubrsUsedNonCID -> z
    java.util.ArrayList lSubrsUsedNonCID -> A
    byte[][] NewLSubrsIndex -> B
    byte[] NewSubrsIndexNonCID -> C
    byte[] NewGSubrsIndex -> D
    byte[] NewCharStringsIndex -> E
    int GBias -> F
    java.util.LinkedList OutputList -> G
    int NumOfHints -> H
    int CountCharset(int,int) -> a
    int CountRange(int,int) -> b
    void readFDSelect(int) -> f
    void BuildFDArrayUsed(int) -> g
    void ReadFDArray(int) -> h
    byte[] Process(java.lang.String) -> a
    int CalcBias(int,int) -> c
    void BuildNewCharString(int) -> i
    void BuildNewLGSubrs(int) -> j
    void BuildFDSubrsOffsets(int,int) -> d
    void BuildSubrUsed(int,int,int,int[],java.util.HashMap,java.util.ArrayList) -> a
    void BuildGSubrsUsed(int) -> k
    void ReadASubr(int,int,int,int,java.util.HashMap,java.util.ArrayList,int[]) -> a
    void HandelStack() -> h
    int StackOpp() -> i
    void EmptyStack() -> j
    void PopStack() -> k
    void PushStack() -> l
    void ReadCommand() -> m
    int CalcHints(int,int,int,int,int[]) -> a
    byte[] BuildNewIndex(int[],java.util.HashMap,byte) -> a
    byte[] AssembleIndex(int[],byte[]) -> a
    byte[] BuildNewFile(int) -> l
    void CopyHeader() -> n
    void BuildIndexHeader(int,int,int) -> a
    void CreateKeys(com.lowagie.text.pdf.CFFFont$OffsetItem,com.lowagie.text.pdf.CFFFont$OffsetItem,com.lowagie.text.pdf.CFFFont$OffsetItem,com.lowagie.text.pdf.CFFFont$OffsetItem) -> a
    void CreateNewStringIndex(int) -> m
    void CreateFDSelect(com.lowagie.text.pdf.CFFFont$OffsetItem,int) -> a
    void CreateCharset(com.lowagie.text.pdf.CFFFont$OffsetItem,int) -> b
    void CreateFDArray(com.lowagie.text.pdf.CFFFont$OffsetItem,com.lowagie.text.pdf.CFFFont$OffsetItem,int) -> a
    void Reconstruct(int) -> n
    void ReconstructFDArray(int,com.lowagie.text.pdf.CFFFont$OffsetItem[]) -> a
    void ReconstructPrivateDict(int,com.lowagie.text.pdf.CFFFont$OffsetItem[],com.lowagie.text.pdf.CFFFont$IndexBaseItem[],com.lowagie.text.pdf.CFFFont$OffsetItem[]) -> a
    void ReconstructPrivateSubrs(int,com.lowagie.text.pdf.CFFFont$IndexBaseItem[],com.lowagie.text.pdf.CFFFont$OffsetItem[]) -> a
    int CalcSubrOffsetSize(int,int) -> e
    void CreateNonCIDPrivate(int,com.lowagie.text.pdf.CFFFont$OffsetItem) -> a
    void CreateNonCIDSubrs(int,com.lowagie.text.pdf.CFFFont$IndexBaseItem,com.lowagie.text.pdf.CFFFont$OffsetItem) -> a
com.lowagie.text.pdf.CJKFont -> com.a.a.b.ad:
    java.util.Properties cjkFonts -> v
    java.util.Properties cjkEncodings -> w
    java.util.Hashtable allCMaps -> x
    java.util.Hashtable allFonts -> y
    boolean propertiesLoaded -> z
    java.lang.String fontName -> A
    java.lang.String style -> B
    java.lang.String CMap -> C
    boolean cidDirect -> D
    char[] translationMap -> E
    com.lowagie.text.pdf.IntHashtable vMetrics -> F
    com.lowagie.text.pdf.IntHashtable hMetrics -> G
    java.util.HashMap fontDesc -> H
    boolean vertical -> I
    void loadProperties() -> k
    boolean isCJKFont(java.lang.String,java.lang.String) -> a
    int getWidth(int) -> a
    int getWidth(java.lang.String) -> c
    int getRawWidth(int,java.lang.String) -> a
    com.lowagie.text.pdf.PdfDictionary getFontDescriptor() -> l
    com.lowagie.text.pdf.PdfDictionary getCIDFont(com.lowagie.text.pdf.PdfIndirectReference,com.lowagie.text.pdf.IntHashtable) -> a
    com.lowagie.text.pdf.PdfDictionary getFontBaseType(com.lowagie.text.pdf.PdfIndirectReference) -> a
    void writeFont(com.lowagie.text.pdf.PdfWriter,com.lowagie.text.pdf.PdfIndirectReference,java.lang.Object[]) -> a
    float getDescNumber(java.lang.String) -> j
    float getBBox(int) -> g
    float getFontDescriptor(int,float) -> b
    java.lang.String getPostscriptFontName() -> g
    java.lang.String[][] getFullFontName() -> j
    java.lang.String[][] getFamilyFontName() -> h
    char[] readCMap(java.lang.String) -> g
    com.lowagie.text.pdf.IntHashtable createMetric(java.lang.String) -> h
    java.lang.String convertToHCIDMetrics(int[],com.lowagie.text.pdf.IntHashtable) -> a
    java.lang.String convertToVCIDMetrics(int[],com.lowagie.text.pdf.IntHashtable,com.lowagie.text.pdf.IntHashtable) -> a
    java.util.HashMap readFontProperties(java.lang.String) -> i
    int getUnicodeEquivalent(int) -> d
    int getCidCode(int) -> e
    int[] getCharBBox(int) -> f
    int[] getRawCharBBox(int,java.lang.String) -> b
com.lowagie.text.pdf.CMYKColor -> com.a.a.b.ae:
    float cyan -> a
    float magenta -> b
    float yellow -> c
    float black -> d
    float getCyan() -> a
    float getMagenta() -> b
    float getYellow() -> c
    float getBlack() -> d
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.lowagie.text.pdf.ColorDetails -> com.a.a.b.af:
    com.lowagie.text.pdf.PdfIndirectReference indirectReference -> a
    com.lowagie.text.pdf.PdfName colorName -> b
    com.lowagie.text.pdf.PdfSpotColor spotcolor -> c
    com.lowagie.text.pdf.PdfIndirectReference getIndirectReference() -> a
    com.lowagie.text.pdf.PdfName getColorName() -> b
    com.lowagie.text.pdf.PdfObject getSpotColor(com.lowagie.text.pdf.PdfWriter) -> a
com.lowagie.text.pdf.ColumnText -> com.a.a.b.ag:
    int runDirection -> a
    float maxY -> b
    float minY -> c
    float leftX -> d
    float rightX -> e
    int alignment -> f
    java.util.ArrayList leftWall -> g
    java.util.ArrayList rightWall -> h
    com.lowagie.text.pdf.BidiLine bidiLine -> i
    float yLine -> j
    float currentLeading -> k
    float fixedLeading -> l
    float multipliedLeading -> m
    com.lowagie.text.pdf.PdfContentByte canvas -> n
    com.lowagie.text.pdf.PdfContentByte[] canvases -> o
    int lineStatus -> p
    float indent -> q
    float followingIndent -> r
    float rightIndent -> s
    float extraParagraphSpace -> t
    float rectangularWidth -> u
    boolean rectangularMode -> v
    float spaceCharRatio -> C
    boolean lastWasNewline -> D
    int linesWritten -> E
    float firstLineY -> F
    boolean firstLineYDone -> G
    int arabicOptions -> H
    float descender -> w
    boolean composite -> x
    com.lowagie.text.pdf.ColumnText compositeColumn -> y
    java.util.LinkedList compositeElements -> z
    int listIdx -> A
    boolean splittedRow -> I
    com.lowagie.text.Phrase waitPhrase -> B
    boolean useAscender -> J
    float filledWidth -> K
    boolean adjustFirstLine -> L
    com.lowagie.text.pdf.ColumnText duplicate(com.lowagie.text.pdf.ColumnText) -> a
    com.lowagie.text.pdf.ColumnText setACopy(com.lowagie.text.pdf.ColumnText) -> b
    void setSimpleVars(com.lowagie.text.pdf.ColumnText) -> c
    void addWaitingPhrase() -> l
    void addText(com.lowagie.text.Phrase) -> a
    void setText(com.lowagie.text.Phrase) -> b
    void addElement(com.lowagie.text.Element) -> a
    java.util.ArrayList convertColumn(float[]) -> a
    float findLimitsPoint(java.util.ArrayList) -> a
    float[] findLimitsOneLine() -> a
    float[] findLimitsTwoLines() -> b
    void setColumns(float[],float[]) -> a
    void setSimpleColumn(com.lowagie.text.Phrase,float,float,float,float,float,int) -> a
    void setSimpleColumn(float,float,float,float,float,int) -> a
    void setSimpleColumn(float,float,float,float) -> a
    void setLeading(float) -> a
    void setLeading(float,float) -> a
    void setYLine(float) -> b
    float getYLine() -> c
    void setAlignment(int) -> a
    int getAlignment() -> d
    void setIndent(float) -> c
    float getIndent() -> e
    void setFollowingIndent(float) -> d
    void setRightIndent(float) -> e
    int go() -> f
    int go(boolean) -> a
    void setExtraParagraphSpace(float) -> f
    void setSpaceCharRatio(float) -> g
    void setRunDirection(int) -> b
    int getRunDirection() -> g
    void setArabicOptions(int) -> c
    float getDescender() -> h
    void showTextAligned(com.lowagie.text.pdf.PdfContentByte,int,com.lowagie.text.Phrase,float,float,float,int,int) -> a
    void showTextAligned(com.lowagie.text.pdf.PdfContentByte,int,com.lowagie.text.Phrase,float,float,float) -> a
    int goComposite(boolean) -> b
    void setCanvas(com.lowagie.text.pdf.PdfContentByte) -> a
    void setCanvases(com.lowagie.text.pdf.PdfContentByte[]) -> a
    boolean zeroHeightElement() -> i
    boolean isUseAscender() -> j
    void setUseAscender(boolean) -> c
    float getFilledWidth() -> k
    void setFilledWidth(float) -> h
    void updateFilledWidth(float) -> i
com.lowagie.text.pdf.DefaultSplitCharacter -> com.a.a.b.ah:
    com.lowagie.text.SplitCharacter DEFAULT -> a
    boolean isSplitCharacter(int,int,int,char[],com.lowagie.text.pdf.PdfChunk[]) -> a
    char getCurrentCharacter(int,char[],com.lowagie.text.pdf.PdfChunk[]) -> a
com.lowagie.text.pdf.DocumentFont -> com.a.a.b.ai:
    java.util.HashMap metrics -> v
    java.lang.String fontName -> w
    com.lowagie.text.pdf.PRIndirectReference refFont -> x
    com.lowagie.text.pdf.IntHashtable uni2byte -> y
    float Ascender -> z
    float CapHeight -> A
    float Descender -> B
    float ItalicAngle -> C
    float llx -> D
    float lly -> E
    float urx -> F
    float ury -> G
    boolean isType0 -> H
    com.lowagie.text.pdf.BaseFont cjkMirror -> I
    java.lang.String[] cjkNames -> J
    java.lang.String[] cjkEncs -> K
    java.lang.String[] cjkNames2 -> L
    java.lang.String[] cjkEncs2 -> M
    int[] stdEnc -> N
    java.lang.String[][] getFamilyFontName() -> h
    float getFontDescriptor(int,float) -> b
    java.lang.String[][] getFullFontName() -> j
    java.lang.String getPostscriptFontName() -> g
    int getRawWidth(int,java.lang.String) -> a
    void writeFont(com.lowagie.text.pdf.PdfWriter,com.lowagie.text.pdf.PdfIndirectReference,java.lang.Object[]) -> a
    int getWidth(int) -> a
    int getWidth(java.lang.String) -> c
    byte[] convertToBytes(java.lang.String) -> e
    byte[] convertToBytes(int) -> b
    com.lowagie.text.pdf.PdfIndirectReference getIndirectReference() -> k
    int[] getCharBBox(int) -> f
    int[] getRawCharBBox(int,java.lang.String) -> b
com.lowagie.text.pdf.ExtendedColor -> com.a.a.b.aj:
    int type -> e
    int getType() -> e
    int getType(harmony.java.awt.Color) -> a
    float normalize(float) -> a
com.lowagie.text.pdf.ExtraEncoding -> com.a.a.b.ak:
    byte[] charToByte(java.lang.String,java.lang.String) -> a
    byte[] charToByte(char,java.lang.String) -> a
    java.lang.String byteToChar(byte[],java.lang.String) -> a
com.lowagie.text.pdf.FontDetails -> com.a.a.b.al:
    com.lowagie.text.pdf.PdfIndirectReference indirectReference -> a
    com.lowagie.text.pdf.PdfName fontName -> b
    com.lowagie.text.pdf.BaseFont baseFont -> c
    com.lowagie.text.pdf.TrueTypeFontUnicode ttu -> d
    com.lowagie.text.pdf.CJKFont cjkFont -> e
    byte[] shortTag -> f
    java.util.HashMap longTag -> g
    com.lowagie.text.pdf.IntHashtable cjkTag -> h
    int fontType -> i
    boolean symbolic -> j
    boolean subset -> k
    com.lowagie.text.pdf.PdfIndirectReference getIndirectReference() -> a
    com.lowagie.text.pdf.PdfName getFontName() -> b
    byte[] convertToBytes(java.lang.String) -> a
    void writeFont(com.lowagie.text.pdf.PdfWriter) -> a
    void setSubset(boolean) -> a
com.lowagie.text.pdf.GlyphList -> com.a.a.b.am:
    java.util.HashMap unicode2names -> a
    java.util.HashMap names2unicode -> b
    int[] nameToUnicode(java.lang.String) -> a
    java.lang.String unicodeToName(int) -> a
com.lowagie.text.pdf.GrayColor -> com.a.a.b.an:
    float gray -> c
    com.lowagie.text.pdf.GrayColor GRAYBLACK -> a
    com.lowagie.text.pdf.GrayColor GRAYWHITE -> b
    float getGray() -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.lowagie.text.pdf.HyphenationEvent -> com.a.a.b.ao:
    java.lang.String getHyphenatedWordPre(java.lang.String,com.lowagie.text.pdf.BaseFont,float,float) -> a
    java.lang.String getHyphenatedWordPost() -> a
com.lowagie.text.pdf.IntHashtable -> com.a.a.b.ap:
    com.lowagie.text.pdf.IntHashtable$Entry[] table -> a
    int count -> b
    int threshold -> c
    float loadFactor -> d
    boolean containsKey(int) -> a
    int get(int) -> b
    void rehash() -> a
    int put(int,int) -> a
    int remove(int) -> c
    int[] toOrderedKeys() -> b
    int[] getKeys() -> c
    java.lang.Object clone() -> clone
com.lowagie.text.pdf.IntHashtable$Entry -> com.a.a.b.aq:
    int hash -> a
    int key -> b
    int value -> c
    com.lowagie.text.pdf.IntHashtable$Entry next -> d
    java.lang.Object clone() -> clone
com.lowagie.text.pdf.LZWDecoder -> com.a.a.b.ar:
    byte[][] stringTable -> a
    byte[] data -> b
    java.io.OutputStream uncompData -> c
    int tableIndex -> d
    int bitsToGet -> e
    int bytePointer -> f
    int bitPointer -> g
    int nextData -> h
    int nextBits -> i
    int[] andTable -> j
    void decode(byte[],java.io.OutputStream) -> a
    void initializeStringTable() -> a
    void writeString(byte[]) -> a
    void addStringToTable(byte[],byte) -> a
    void addStringToTable(byte[]) -> b
    byte[] composeString(byte[],byte) -> b
    int getNextCode() -> b
com.lowagie.text.pdf.MappedRandomAccessFile -> com.a.a.b.as:
    java.nio.MappedByteBuffer mappedByteBuffer -> a
    java.nio.channels.FileChannel channel -> b
    void init(java.nio.channels.FileChannel,java.nio.channels.FileChannel$MapMode) -> a
    int read() -> a
    int read(byte[],int,int) -> a
    long getFilePointer() -> b
    void seek(long) -> a
    long length() -> c
    void close() -> d
    void finalize() -> finalize
    boolean clean(java.nio.ByteBuffer) -> a
com.lowagie.text.pdf.MappedRandomAccessFile$1 -> com.a.a.b.at:
    java.nio.ByteBuffer val$buffer -> a
    java.lang.Object run() -> run
com.lowagie.text.pdf.MultiColumnText -> com.a.a.b.au:
    float desiredHeight -> a
    float totalHeight -> b
    boolean overflow -> c
    float top -> d
    com.lowagie.text.pdf.ColumnText columnText -> e
    java.util.ArrayList columnDefs -> f
    boolean simple -> g
    int currentColumn -> h
    float nextY -> i
    boolean columnsRightToLeft -> j
    com.lowagie.text.pdf.PdfDocument document -> k
    float write(com.lowagie.text.pdf.PdfContentByte,com.lowagie.text.pdf.PdfDocument,float) -> a
    void newPage() -> f
    float getHeight(float[],float[]) -> a
    boolean process(com.lowagie.text.ElementListener) -> a
    int type() -> b
    java.util.ArrayList getChunks() -> a
    boolean isContent() -> k
    boolean isNestable() -> l
    float getColumnBottom() -> g
    int getCurrentColumn() -> c
    void resetCurrentColumn() -> d
    boolean shiftCurrentColumn() -> e
    float access$0(com.lowagie.text.pdf.MultiColumnText) -> a
    float access$2(com.lowagie.text.pdf.MultiColumnText) -> b
com.lowagie.text.pdf.MultiColumnText$ColumnDef -> com.a.a.b.av:
    float[] left -> b
    float[] right -> c
    com.lowagie.text.pdf.MultiColumnText this$0 -> a
    float[] resolvePositions(int) -> a
    float[] resolvePositions(float[]) -> a
    boolean isSimple() -> a
    boolean access$0(com.lowagie.text.pdf.MultiColumnText$ColumnDef) -> a
com.lowagie.text.pdf.OutputStreamCounter -> com.a.a.b.aw:
    java.io.OutputStream out -> a
    int counter -> b
    void close() -> close
    void flush() -> flush
    void write(byte[]) -> write
    void write(int) -> write
    void write(byte[],int,int) -> write
    int getCounter() -> a
com.lowagie.text.pdf.OutputStreamEncryption -> com.a.a.b.ax:
    java.io.OutputStream out -> a
    com.lowagie.text.pdf.crypto.ARCFOUREncryption arcfour -> b
    com.lowagie.text.pdf.crypto.AESCipher cipher -> c
    byte[] sb -> d
    boolean aes -> e
    boolean finished -> f
    void close() -> close
    void flush() -> flush
    void write(byte[]) -> write
    void write(int) -> write
    void write(byte[],int,int) -> write
    void finish() -> a
com.lowagie.text.pdf.PRAcroForm -> com.a.a.b.ay:
    java.util.ArrayList fields -> a
    int size() -> a
com.lowagie.text.pdf.PRIndirectReference -> com.a.a.b.az:
    com.lowagie.text.pdf.PdfReader reader -> a
    void toPdf(com.lowagie.text.pdf.PdfWriter,java.io.OutputStream) -> a
    com.lowagie.text.pdf.PdfReader getReader() -> a
com.lowagie.text.pdf.PRStream -> com.a.a.b.ba:
    com.lowagie.text.pdf.PdfReader reader -> a
    int offset -> b
    int length -> c
    int objNum -> d
    int objGen -> e
    void setLength(int) -> a
    int getOffset() -> b
    int getLength() -> c
    com.lowagie.text.pdf.PdfReader getReader() -> d
    byte[] getBytes() -> e
    void setObjNum(int,int) -> a
    int getObjNum() -> f
    int getObjGen() -> g
    void toPdf(com.lowagie.text.pdf.PdfWriter,java.io.OutputStream) -> a
com.lowagie.text.pdf.PRTokeniser -> com.a.a.b.bb:
    boolean[] delims -> a
    com.lowagie.text.pdf.RandomAccessFileOrArray file -> b
    int type -> c
    java.lang.String stringValue -> d
    int reference -> e
    int generation -> f
    boolean hexString -> g
    void seek(int) -> a
    int getFilePointer() -> a
    void close() -> b
    int length() -> c
    int read() -> d
    com.lowagie.text.pdf.RandomAccessFileOrArray getSafeFile() -> e
    com.lowagie.text.pdf.RandomAccessFileOrArray getFile() -> f
    java.lang.String readString(int) -> b
    boolean isWhitespace(int) -> c
    int getTokenType() -> g
    java.lang.String getStringValue() -> h
    int getReference() -> i
    int getGeneration() -> j
    void backOnePosition(int) -> d
    void throwError(java.lang.String) -> a
    int getHex(int) -> e
    void nextValidToken() -> k
    boolean nextToken() -> l
    int intValue() -> m
    boolean readLineSegment(byte[]) -> a
    boolean isHexString() -> n
com.lowagie.text.pdf.PageResources -> com.a.a.b.bc:
    com.lowagie.text.pdf.PdfDictionary fontDictionary -> a
    com.lowagie.text.pdf.PdfDictionary xObjectDictionary -> b
    com.lowagie.text.pdf.PdfDictionary colorDictionary -> c
    com.lowagie.text.pdf.PdfDictionary patternDictionary -> d
    com.lowagie.text.pdf.PdfDictionary shadingDictionary -> e
    com.lowagie.text.pdf.PdfDictionary extGStateDictionary -> f
    com.lowagie.text.pdf.PdfDictionary propertyDictionary -> g
    java.util.HashMap forbiddenNames -> h
    com.lowagie.text.pdf.PdfDictionary originalResources -> i
    int[] namePtr -> j
    java.util.HashMap usedNames -> k
    com.lowagie.text.pdf.PdfName translateName(com.lowagie.text.pdf.PdfName) -> a
    com.lowagie.text.pdf.PdfName addFont(com.lowagie.text.pdf.PdfName,com.lowagie.text.pdf.PdfIndirectReference) -> a
    com.lowagie.text.pdf.PdfName addXObject(com.lowagie.text.pdf.PdfName,com.lowagie.text.pdf.PdfIndirectReference) -> b
    com.lowagie.text.pdf.PdfName addColor(com.lowagie.text.pdf.PdfName,com.lowagie.text.pdf.PdfIndirectReference) -> c
    void addDefaultColor(com.lowagie.text.pdf.PdfDictionary) -> a
    void addDefaultColorDiff(com.lowagie.text.pdf.PdfDictionary) -> b
    com.lowagie.text.pdf.PdfName addPattern(com.lowagie.text.pdf.PdfName,com.lowagie.text.pdf.PdfIndirectReference) -> d
    com.lowagie.text.pdf.PdfName addProperty(com.lowagie.text.pdf.PdfName,com.lowagie.text.pdf.PdfIndirectReference) -> e
    com.lowagie.text.pdf.PdfDictionary getResources() -> a
com.lowagie.text.pdf.PatternColor -> com.a.a.b.bd:
    com.lowagie.text.pdf.PdfPatternPainter painter -> a
    com.lowagie.text.pdf.PdfPatternPainter getPainter() -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.lowagie.text.pdf.PdfAcroForm -> com.a.a.b.be:
    com.lowagie.text.pdf.PdfWriter writer -> a
    java.util.HashMap fieldTemplates -> b
    com.lowagie.text.pdf.PdfArray documentFields -> c
    com.lowagie.text.pdf.PdfArray calculationOrder -> d
    int sigFlags -> e
    void addFieldTemplates(java.util.HashMap) -> a
    void addDocumentField(com.lowagie.text.pdf.PdfIndirectReference) -> a
    boolean isValid() -> b
com.lowagie.text.pdf.PdfAction -> com.a.a.b.bf:
    com.lowagie.text.pdf.PdfAction rendition(java.lang.String,com.lowagie.text.pdf.PdfFileSpecification,java.lang.String,com.lowagie.text.pdf.PdfIndirectReference) -> a
com.lowagie.text.pdf.PdfAnnotation -> com.a.a.b.bg:
    com.lowagie.text.pdf.PdfName HIGHLIGHT_NONE -> a
    com.lowagie.text.pdf.PdfName HIGHLIGHT_INVERT -> b
    com.lowagie.text.pdf.PdfName HIGHLIGHT_OUTLINE -> c
    com.lowagie.text.pdf.PdfName HIGHLIGHT_PUSH -> d
    com.lowagie.text.pdf.PdfName HIGHLIGHT_TOGGLE -> e
    com.lowagie.text.pdf.PdfName APPEARANCE_NORMAL -> f
    com.lowagie.text.pdf.PdfName APPEARANCE_ROLLOVER -> g
    com.lowagie.text.pdf.PdfName APPEARANCE_DOWN -> h
    com.lowagie.text.pdf.PdfName AA_ENTER -> i
    com.lowagie.text.pdf.PdfName AA_EXIT -> j
    com.lowagie.text.pdf.PdfName AA_DOWN -> k
    com.lowagie.text.pdf.PdfName AA_UP -> l
    com.lowagie.text.pdf.PdfName AA_FOCUS -> m
    com.lowagie.text.pdf.PdfName AA_BLUR -> n
    com.lowagie.text.pdf.PdfName AA_JS_KEY -> o
    com.lowagie.text.pdf.PdfName AA_JS_FORMAT -> p
    com.lowagie.text.pdf.PdfName AA_JS_CHANGE -> q
    com.lowagie.text.pdf.PdfName AA_JS_OTHER_CHANGE -> r
    com.lowagie.text.pdf.PdfWriter writer -> s
    com.lowagie.text.pdf.PdfIndirectReference reference -> t
    java.util.HashMap templates -> u
    boolean form -> v
    boolean annotation -> w
    boolean used -> x
    int placeInPage -> E
    com.lowagie.text.pdf.PdfAnnotation createScreen(com.lowagie.text.pdf.PdfWriter,com.lowagie.text.Rectangle,java.lang.String,com.lowagie.text.pdf.PdfFileSpecification,java.lang.String,boolean) -> a
    com.lowagie.text.pdf.PdfIndirectReference getIndirectReference() -> b
    void setDefaultAppearanceString(com.lowagie.text.pdf.PdfContentByte) -> a
    void setFlags(int) -> a
    void setBorderStyle(com.lowagie.text.pdf.PdfBorderDictionary) -> a
    void setAppearance(com.lowagie.text.pdf.PdfName,java.lang.String,com.lowagie.text.pdf.PdfTemplate) -> a
    void setAppearanceState(java.lang.String) -> a
    boolean isUsed() -> c
    void setUsed() -> d
    java.util.HashMap getTemplates() -> f
    boolean isForm() -> g
    boolean isAnnotation() -> h
    void setPage() -> i
    int getPlaceInPage() -> j
    com.lowagie.text.pdf.PdfDictionary getMK() -> k
    void setMKRotation(int) -> b
    com.lowagie.text.pdf.PdfArray getMKColor(harmony.java.awt.Color) -> a
    void setMKBorderColor(harmony.java.awt.Color) -> b
    void setMKBackgroundColor(harmony.java.awt.Color) -> c
    void setMKNormalCaption(java.lang.String) -> b
com.lowagie.text.pdf.PdfAppearance -> com.a.a.b.bh:
    java.util.HashMap stdFieldFontNames -> a
    com.lowagie.text.pdf.PdfAppearance createAppearance(com.lowagie.text.pdf.PdfWriter,float,float) -> a
    com.lowagie.text.pdf.PdfAppearance createAppearance(com.lowagie.text.pdf.PdfWriter,float,float,com.lowagie.text.pdf.PdfName) -> a
    void setFontAndSize(com.lowagie.text.pdf.BaseFont,float) -> a
    com.lowagie.text.pdf.PdfContentByte getDuplicate() -> a
com.lowagie.text.pdf.PdfArray -> com.a.a.b.bi:
    java.util.ArrayList arrayList -> a
    void toPdf(com.lowagie.text.pdf.PdfWriter,java.io.OutputStream) -> a
    java.lang.String toString() -> toString
    com.lowagie.text.pdf.PdfObject remove(int) -> a
    java.util.ArrayList getArrayList() -> a
    int size() -> b
    boolean isEmpty() -> c
    boolean add(com.lowagie.text.pdf.PdfObject) -> a
    boolean add(float[]) -> a
    boolean add(int[]) -> a
    void add(int,com.lowagie.text.pdf.PdfObject) -> a
    void addFirst(com.lowagie.text.pdf.PdfObject) -> b
    boolean contains(com.lowagie.text.pdf.PdfObject) -> c
    java.util.ListIterator listIterator() -> d
    com.lowagie.text.pdf.PdfObject getPdfObject(int) -> b
    com.lowagie.text.pdf.PdfObject getDirectObject(int) -> c
    com.lowagie.text.pdf.PdfName getAsName(int) -> d
com.lowagie.text.pdf.PdfBoolean -> com.a.a.b.bj:
    com.lowagie.text.pdf.PdfBoolean PDFTRUE -> a
    com.lowagie.text.pdf.PdfBoolean PDFFALSE -> b
    boolean value -> c
    boolean booleanValue() -> a
    java.lang.String toString() -> toString
com.lowagie.text.pdf.PdfBorderArray -> com.a.a.b.bk:
com.lowagie.text.pdf.PdfBorderDictionary -> com.a.a.b.bl:
com.lowagie.text.pdf.PdfCell -> com.a.a.b.bm:
    java.util.ArrayList lines -> a
    com.lowagie.text.pdf.PdfLine line -> b
    java.util.ArrayList images -> c
    float leading -> d
    int rownumber -> e
    int rowspan -> f
    float cellspacing -> g
    float cellpadding -> h
    boolean header -> i
    float contentHeight -> j
    boolean useAscender -> k
    boolean useDescender -> l
    boolean useBorderPadding -> m
    int verticalAlignment -> n
    com.lowagie.text.pdf.PdfLine firstLine -> o
    com.lowagie.text.pdf.PdfLine lastLine -> p
    int groupNumber -> q
    void addList(com.lowagie.text.List,float,float,int) -> a
    void setBottom(float) -> j
    float getLeft() -> x
    float getRight() -> y
    float getTop() -> v
    float getBottom() -> w
    void addLine(com.lowagie.text.pdf.PdfLine) -> a
    com.lowagie.text.pdf.PdfLine removeLine(int) -> b
    void flushCurrentLine() -> n
    float firstLineRealHeight() -> o
    float getBorderWidthInside(int) -> c
    float addImage(com.lowagie.text.Image,float,float,float,int) -> a
    java.util.ArrayList getLines(float,float) -> a
    java.util.ArrayList getImages(float,float) -> b
    boolean isHeader() -> c
    void setHeader() -> d
    boolean mayBeRemoved() -> f
    float remainingLinesHeight() -> p
    float remainingHeight() -> g
    int rownumber() -> h
    int rowspan() -> i
    float cellspacing() -> j
    float cellpadding() -> m
    void processActions(com.lowagie.text.Element,com.lowagie.text.pdf.PdfAction,java.util.ArrayList) -> a
    void setGroupNumber(int) -> a
    com.lowagie.text.Rectangle rectangle(float,float) -> e
com.lowagie.text.pdf.PdfChunk -> com.a.a.b.bn:
    char[] singleSpace -> m
    com.lowagie.text.pdf.PdfChunk[] thisChunk -> n
    java.util.HashMap keysAttributes -> o
    java.util.HashMap keysNoStroke -> p
    java.lang.String value -> a
    java.lang.String encoding -> b
    com.lowagie.text.pdf.PdfFont font -> c
    com.lowagie.text.pdf.BaseFont baseFont -> d
    com.lowagie.text.SplitCharacter splitCharacter -> e
    java.util.HashMap attributes -> f
    java.util.HashMap noStroke -> g
    boolean newlineSplit -> h
    com.lowagie.text.Image image -> i
    float offsetX -> j
    float offsetY -> k
    boolean changeLeading -> l
    int getUnicodeEquivalent(int) -> a
    int getWord(java.lang.String,int) -> a
    com.lowagie.text.pdf.PdfChunk split(float) -> a
    com.lowagie.text.pdf.PdfChunk truncate(float) -> b
    com.lowagie.text.pdf.PdfFont font() -> a
    harmony.java.awt.Color color() -> b
    float width() -> c
    boolean isNewlineSplit() -> d
    float getWidthCorrected(float,float) -> a
    float getTextRise() -> e
    float trimLastSpace() -> f
    float trimFirstSpace() -> g
    java.lang.Object getAttribute(java.lang.String) -> a
    boolean isAttribute(java.lang.String) -> b
    boolean isStroked() -> h
    boolean isSeparator() -> i
    boolean isHorizontalSeparator() -> j
    boolean isTab() -> k
    void adjustLeft(float) -> c
    boolean isImage() -> l
    com.lowagie.text.Image getImage() -> m
    float getImageOffsetX() -> n
    float getImageOffsetY() -> o
    void setValue(java.lang.String) -> c
    java.lang.String toString() -> toString
    boolean isSpecialEncoding() -> p
    int length() -> q
    int lengthUtf32() -> r
    boolean isExtSplitCharacter(int,int,int,char[],com.lowagie.text.pdf.PdfChunk[]) -> a
    java.lang.String trim(java.lang.String) -> d
    float getCharWidth(int) -> b
    boolean noPrint(int) -> c
com.lowagie.text.pdf.PdfColor -> com.a.a.b.bo:
com.lowagie.text.pdf.PdfContentByte -> com.a.a.b.bp:
    float[] unitRect -> a
    com.lowagie.text.pdf.ByteBuffer content -> b
    com.lowagie.text.pdf.PdfWriter writer -> c
    com.lowagie.text.pdf.PdfDocument pdf -> d
    com.lowagie.text.pdf.PdfContentByte$GraphicState state -> e
    java.util.ArrayList stateList -> f
    java.util.ArrayList layerDepth -> g
    int separator -> h
    int mcDepth -> i
    boolean inText -> j
    java.util.HashMap abrev -> k
    java.lang.String toString() -> toString
    com.lowagie.text.pdf.ByteBuffer getInternalBuffer() -> b
    byte[] toPdf(com.lowagie.text.pdf.PdfWriter) -> a
    void add(com.lowagie.text.pdf.PdfContentByte) -> a
    float getXTLM() -> c
    float getYTLM() -> d
    void setLineCap(int) -> a
    void setLineDash(float) -> a
    void setLineDash(float,float) -> a
    void setLineDash(float,float,float) -> a
    void setLineJoin(int) -> b
    void setLineWidth(float) -> b
    void clip() -> e
    void eoClip() -> f
    void setGrayFill(float) -> c
    void resetGrayFill() -> g
    void setGrayStroke(float) -> d
    void resetGrayStroke() -> h
    void HelperRGB(float,float,float) -> c
    void resetRGBColorFill() -> i
    void resetRGBColorStroke() -> j
    void HelperCMYK(float,float,float,float) -> d
    void setCMYKColorFillF(float,float,float,float) -> a
    void setCMYKColorStrokeF(float,float,float,float) -> b
    void moveTo(float,float) -> b
    void lineTo(float,float) -> c
    void curveTo(float,float,float,float,float,float) -> a
    void circle(float,float,float) -> b
    void rectangle(float,float,float,float) -> c
    boolean compareColors(harmony.java.awt.Color,harmony.java.awt.Color) -> a
    void variableRectangle(com.lowagie.text.Rectangle) -> a
    void rectangle(com.lowagie.text.Rectangle) -> b
    void closePath() -> k
    void newPath() -> l
    void stroke() -> m
    void closePathStroke() -> n
    void fill() -> o
    void eoFill() -> p
    void closePathFillStroke() -> q
    void closePathEoFillStroke() -> r
    void addImage(com.lowagie.text.Image) -> a
    void addImage(com.lowagie.text.Image,boolean) -> a
    void addImage(com.lowagie.text.Image,float,float,float,float,float,float) -> a
    void addImage(com.lowagie.text.Image,float,float,float,float,float,float,boolean) -> a
    void reset() -> s
    void reset(boolean) -> a
    void beginText() -> t
    void endText() -> u
    void saveState() -> v
    void restoreState() -> w
    void setCharacterSpacing(float) -> e
    void setWordSpacing(float) -> f
    void setFontAndSize(com.lowagie.text.pdf.BaseFont,float) -> a
    void setTextRenderingMode(int) -> c
    void setTextRise(float) -> g
    void showText2(java.lang.String) -> c
    void showText(java.lang.String) -> a
    void setTextMatrix(float,float,float,float,float,float) -> b
    void setTextMatrix(float,float) -> d
    void moveText(float,float) -> e
    int size() -> x
    byte[] escapeString(byte[]) -> a
    void escapeString(byte[],com.lowagie.text.pdf.ByteBuffer) -> a
    void concatCTM(float,float,float,float,float,float) -> c
    java.util.ArrayList bezierArc(float,float,float,float,float,float) -> d
    void arc(float,float,float,float,float,float) -> e
    void addTemplate(com.lowagie.text.pdf.PdfTemplate,float,float,float,float,float,float) -> a
    void setRGBColorFill(int,int,int) -> a
    void setRGBColorStroke(int,int,int) -> b
    void setColorStroke(harmony.java.awt.Color) -> a
    void setColorFill(harmony.java.awt.Color) -> b
    void setColorFill(com.lowagie.text.pdf.PdfSpotColor,float) -> a
    void setColorStroke(com.lowagie.text.pdf.PdfSpotColor,float) -> b
    void setPatternFill(com.lowagie.text.pdf.PdfPatternPainter) -> a
    void outputColorNumbers(harmony.java.awt.Color,float) -> a
    void setPatternFill(com.lowagie.text.pdf.PdfPatternPainter,harmony.java.awt.Color) -> a
    void setPatternFill(com.lowagie.text.pdf.PdfPatternPainter,harmony.java.awt.Color,float) -> a
    void setPatternStroke(com.lowagie.text.pdf.PdfPatternPainter,harmony.java.awt.Color) -> b
    void setPatternStroke(com.lowagie.text.pdf.PdfPatternPainter,harmony.java.awt.Color,float) -> b
    void setPatternStroke(com.lowagie.text.pdf.PdfPatternPainter) -> b
    void setShadingFill(com.lowagie.text.pdf.PdfShadingPattern) -> a
    void setShadingStroke(com.lowagie.text.pdf.PdfShadingPattern) -> b
    void checkWriter() -> y
    void showText(com.lowagie.text.pdf.PdfTextArray) -> a
    com.lowagie.text.pdf.PdfWriter getPdfWriter() -> z
    com.lowagie.text.pdf.PdfDocument getPdfDocument() -> A
    com.lowagie.text.pdf.PdfContentByte getDuplicate() -> a
    void roundRectangle(float,float,float,float,float) -> a
    void setLiteral(java.lang.String) -> b
    void checkNoPattern(com.lowagie.text.pdf.PdfTemplate) -> a
    com.lowagie.text.pdf.PageResources getPageResources() -> B
    void beginLayer(com.lowagie.text.pdf.PdfOCG) -> a
    void beginLayer2(com.lowagie.text.pdf.PdfOCG) -> b
    void endLayer() -> C
    void addAnnotation(com.lowagie.text.pdf.PdfAnnotation) -> a
    void sanityCheck() -> D
com.lowagie.text.pdf.PdfContentByte$GraphicState -> com.a.a.b.bq:
    com.lowagie.text.pdf.FontDetails fontDetails -> a
    com.lowagie.text.pdf.ColorDetails colorDetails -> b
    float size -> c
    float xTLM -> d
    float yTLM -> e
    float leading -> f
    float scale -> g
    float charSpace -> h
    float wordSpace -> i
com.lowagie.text.pdf.PdfContents -> com.a.a.b.br:
    byte[] SAVESTATE -> a
    byte[] RESTORESTATE -> b
    byte[] ROTATE90 -> c
    byte[] ROTATE180 -> d
    byte[] ROTATE270 -> e
    byte[] ROTATEFINAL -> f
com.lowagie.text.pdf.PdfCopyFieldsImp -> com.a.a.b.bs:
    com.lowagie.text.pdf.PdfName iTextTag -> aC
    java.lang.Integer zero -> aD
    java.util.ArrayList readers -> g
    java.util.HashMap readers2intrefs -> h
    java.util.HashMap pages2intrefs -> i
    java.util.HashMap visited -> j
    java.util.ArrayList fields -> k
    com.lowagie.text.pdf.RandomAccessFileOrArray file -> l
    java.util.HashMap fieldTree -> m
    java.util.ArrayList pageRefs -> n
    java.util.ArrayList pageDics -> o
    com.lowagie.text.pdf.PdfDictionary resources -> p
    com.lowagie.text.pdf.PdfDictionary form -> q
    boolean closing -> r
    java.util.HashMap tabOrder -> aE
    java.util.ArrayList calculationOrder -> aF
    java.util.ArrayList calculationOrderRefs -> aG
    boolean hasSignature -> aH
    java.util.HashMap widgetKeys -> s
    java.util.HashMap fieldKeys -> t
    void propagate(com.lowagie.text.pdf.PdfObject,com.lowagie.text.pdf.PdfIndirectReference,boolean) -> a
    void adjustTabOrder(com.lowagie.text.pdf.PdfArray,com.lowagie.text.pdf.PdfIndirectReference,com.lowagie.text.pdf.PdfNumber) -> a
    com.lowagie.text.pdf.PdfArray branchForm(java.util.HashMap,com.lowagie.text.pdf.PdfIndirectReference,java.lang.String) -> a
    void createAcroForms() -> e
    void close() -> b
    void closeIt() -> f
    void addPageOffsetToField(java.util.HashMap,int) -> a
    void createWidgets(java.util.ArrayList,com.lowagie.text.pdf.AcroFields$Item) -> a
    void mergeField(java.lang.String,com.lowagie.text.pdf.AcroFields$Item) -> a
    void mergeWithMaster(java.util.HashMap) -> a
    void mergeFields() -> g
    com.lowagie.text.pdf.PdfIndirectReference getPageReference(int) -> a
    com.lowagie.text.pdf.PdfDictionary getCatalog(com.lowagie.text.pdf.PdfIndirectReference) -> a
    com.lowagie.text.pdf.PdfIndirectReference getNewReference(com.lowagie.text.pdf.PRIndirectReference) -> a
    int getNewObjectNumber(com.lowagie.text.pdf.PdfReader,int,int) -> a
    boolean setVisited(com.lowagie.text.pdf.PRIndirectReference) -> b
    boolean isVisited(com.lowagie.text.pdf.PRIndirectReference) -> c
    boolean isPage(com.lowagie.text.pdf.PRIndirectReference) -> d
com.lowagie.text.pdf.PdfDashPattern -> com.a.a.b.bt:
    float dash -> b
    float gap -> c
    float phase -> d
    void toPdf(com.lowagie.text.pdf.PdfWriter,java.io.OutputStream) -> a
com.lowagie.text.pdf.PdfDate -> com.a.a.b.bu:
    int[] DATE_SPACE -> g
    java.lang.String setLength(int,int) -> b
com.lowagie.text.pdf.PdfDestination -> com.a.a.b.bv:
    boolean status -> b
    boolean hasPage() -> f
    boolean addPage(com.lowagie.text.pdf.PdfIndirectReference) -> a
com.lowagie.text.pdf.PdfDictionary -> com.a.a.b.bw:
    com.lowagie.text.pdf.PdfName FONT -> y
    com.lowagie.text.pdf.PdfName OUTLINES -> z
    com.lowagie.text.pdf.PdfName PAGE -> A
    com.lowagie.text.pdf.PdfName PAGES -> B
    com.lowagie.text.pdf.PdfName CATALOG -> C
    com.lowagie.text.pdf.PdfName dictionaryType -> a
    java.util.HashMap hashMap -> D
    void toPdf(com.lowagie.text.pdf.PdfWriter,java.io.OutputStream) -> a
    java.lang.String toString() -> toString
    void put(com.lowagie.text.pdf.PdfName,com.lowagie.text.pdf.PdfObject) -> a
    void putAll(com.lowagie.text.pdf.PdfDictionary) -> a
    void remove(com.lowagie.text.pdf.PdfName) -> a
    com.lowagie.text.pdf.PdfObject get(com.lowagie.text.pdf.PdfName) -> b
    com.lowagie.text.pdf.PdfObject getDirectObject(com.lowagie.text.pdf.PdfName) -> c
    java.util.Set getKeys() -> l
    int size() -> a
    boolean contains(com.lowagie.text.pdf.PdfName) -> d
    void merge(com.lowagie.text.pdf.PdfDictionary) -> b
    void mergeDifferent(com.lowagie.text.pdf.PdfDictionary) -> c
    com.lowagie.text.pdf.PdfDictionary getAsDict(com.lowagie.text.pdf.PdfName) -> e
    com.lowagie.text.pdf.PdfArray getAsArray(com.lowagie.text.pdf.PdfName) -> f
    com.lowagie.text.pdf.PdfNumber getAsNumber(com.lowagie.text.pdf.PdfName) -> g
com.lowagie.text.pdf.PdfDocument -> com.a.a.b.bx:
    com.lowagie.text.pdf.PdfWriter writer -> t
    com.lowagie.text.pdf.PdfContentByte text -> u
    com.lowagie.text.pdf.PdfContentByte graphics -> v
    float leading -> w
    int alignment -> x
    float currentHeight -> y
    boolean isSectionTitle -> z
    int leadingCount -> A
    com.lowagie.text.pdf.PdfAction anchorAction -> B
    int textEmptySize -> C
    byte[] xmpMetadata -> D
    float nextMarginLeft -> E
    float nextMarginRight -> F
    float nextMarginTop -> G
    float nextMarginBottom -> H
    boolean firstPageEvent -> I
    com.lowagie.text.pdf.PdfLine line -> J
    java.util.ArrayList lines -> K
    int lastElementType -> L
    com.lowagie.text.pdf.PdfDocument$Indentation indentation -> M
    com.lowagie.text.pdf.PdfDocument$PdfInfo info -> N
    com.lowagie.text.pdf.PdfOutline rootOutline -> O
    com.lowagie.text.pdf.PdfOutline currentOutline -> P
    com.lowagie.text.pdf.internal.PdfViewerPreferencesImp viewerPreferences -> Q
    com.lowagie.text.pdf.PdfPageLabels pageLabels -> R
    java.util.TreeMap localDestinations -> S
    java.util.HashMap documentLevelJS -> T
    java.text.DecimalFormat SIXTEEN_DIGITS -> U
    java.util.HashMap documentFileAttachment -> V
    java.lang.String openActionName -> W
    com.lowagie.text.pdf.PdfAction openActionAction -> X
    com.lowagie.text.pdf.PdfDictionary additionalActions -> Y
    com.lowagie.text.pdf.collection.PdfCollection collection -> Z
    com.lowagie.text.pdf.internal.PdfAnnotationsImp annotationsImp -> aa
    int markPoint -> ab
    com.lowagie.text.Rectangle nextPageSize -> ac
    java.util.HashMap thisBoxSize -> ad
    java.util.HashMap boxSize -> ae
    boolean pageEmpty -> af
    int duration -> ag
    com.lowagie.text.pdf.PdfTransition transition -> ah
    com.lowagie.text.pdf.PdfDictionary pageAA -> ai
    com.lowagie.text.pdf.PdfIndirectReference thumb -> aj
    com.lowagie.text.pdf.PageResources pageResources -> ak
    boolean strictImageSequence -> al
    float imageEnd -> am
    com.lowagie.text.Image imageWait -> an
    void addWriter(com.lowagie.text.pdf.PdfWriter) -> a
    boolean add(com.lowagie.text.Element) -> a
    void open() -> a
    void close() -> b
    boolean newPage() -> c
    boolean setPageSize(com.lowagie.text.Rectangle) -> a
    boolean setMargins(float,float,float,float) -> a
    void initPage() -> o
    void newLine() -> p
    void carriageReturn() -> q
    float getVerticalPosition(boolean) -> a
    void ensureNewLine() -> r
    float flushLines() -> s
    void writeLineToContent(com.lowagie.text.pdf.PdfLine,com.lowagie.text.pdf.PdfContentByte,com.lowagie.text.pdf.PdfContentByte,java.lang.Object[],float) -> a
    float indentLeft() -> t
    float indentRight() -> u
    float indentTop() -> v
    float indentBottom() -> w
    void addSpacing(float,float,com.lowagie.text.Font) -> a
    com.lowagie.text.pdf.PdfDocument$PdfInfo getInfo() -> x
    com.lowagie.text.pdf.PdfDocument$PdfCatalog getCatalog(com.lowagie.text.pdf.PdfIndirectReference) -> a
    void calculateOutlineCount() -> y
    void traverseOutlineCount(com.lowagie.text.pdf.PdfOutline) -> a
    void writeOutlines() -> z
    void outlineTree(com.lowagie.text.pdf.PdfOutline) -> b
    void localGoto(java.lang.String,float,float,float,float) -> a
    void remoteGoto(java.lang.String,java.lang.String,float,float,float,float) -> a
    void remoteGoto(java.lang.String,int,float,float,float,float) -> a
    com.lowagie.text.pdf.PdfAction getLocalGotoAction(java.lang.String) -> a
    boolean localDestination(java.lang.String,com.lowagie.text.pdf.PdfDestination) -> a
    java.util.HashMap getDocumentLevelJS() -> A
    void addAnnotation(com.lowagie.text.pdf.PdfAnnotation) -> a
    void setNewPageSizeAndMargins() -> B
    com.lowagie.text.pdf.PageResources getPageResources() -> C
    void add(com.lowagie.text.Image) -> a
    void addPTable(com.lowagie.text.pdf.PdfPTable) -> a
    boolean fitsPage(com.lowagie.text.pdf.PdfPTable,float) -> a
    void addPdfTable(com.lowagie.text.Table) -> a
    void analyzeRow(java.util.ArrayList,com.lowagie.text.pdf.PdfDocument$RenderingContext) -> a
    boolean mayBeRemoved(java.util.ArrayList) -> a
    void consumeRowspan(java.util.ArrayList,com.lowagie.text.pdf.PdfDocument$RenderingContext) -> b
    java.util.ArrayList extractRows(java.util.ArrayList,com.lowagie.text.pdf.PdfDocument$RenderingContext) -> c
    void renderCells(com.lowagie.text.pdf.PdfDocument$RenderingContext,java.util.List,boolean) -> a
    void doFooter() -> D
    void doHeader() -> E
com.lowagie.text.pdf.PdfDocument$Indentation -> com.a.a.b.by:
    float indentLeft -> a
    float sectionIndentLeft -> b
    float listIndentLeft -> c
    float imageIndentLeft -> d
    float indentRight -> e
    float sectionIndentRight -> f
    float imageIndentRight -> g
    float indentTop -> h
    float indentBottom -> i
com.lowagie.text.pdf.PdfDocument$PdfCatalog -> com.a.a.b.bz:
    com.lowagie.text.pdf.PdfWriter writer -> a
    void addNames(java.util.TreeMap,java.util.HashMap,java.util.HashMap,com.lowagie.text.pdf.PdfWriter) -> a
    void setOpenAction(com.lowagie.text.pdf.PdfAction) -> a
    void setAdditionalActions(com.lowagie.text.pdf.PdfDictionary) -> d
com.lowagie.text.pdf.PdfDocument$PdfInfo -> com.a.a.b.ca:
    void addTitle(java.lang.String) -> a
    void addSubject(java.lang.String) -> b
    void addKeywords(java.lang.String) -> c
    void addAuthor(java.lang.String) -> d
    void addCreator(java.lang.String) -> e
    void addProducer() -> b
    void addCreationDate() -> c
    void addkey(java.lang.String,java.lang.String) -> a
com.lowagie.text.pdf.PdfDocument$RenderingContext -> com.a.a.b.cb:
    float pagetop -> a
    float oldHeight -> b
    com.lowagie.text.pdf.PdfContentByte cellGraphics -> c
    float lostTableBottom -> d
    float maxCellBottom -> e
    java.util.Map rowspanMap -> f
    java.util.Map pageMap -> g
    com.lowagie.text.pdf.PdfTable table -> h
    int consumeRowspan(com.lowagie.text.pdf.PdfCell) -> a
    int currentRowspan(com.lowagie.text.pdf.PdfCell) -> b
    int cellRendered(com.lowagie.text.pdf.PdfCell,int) -> a
    int numCellRendered(com.lowagie.text.pdf.PdfCell) -> c
    boolean isCellRenderedOnPage(com.lowagie.text.pdf.PdfCell,int) -> b
com.lowagie.text.pdf.PdfEFStream -> com.a.a.b.cc:
    void toPdf(com.lowagie.text.pdf.PdfWriter,java.io.OutputStream) -> a
com.lowagie.text.pdf.PdfEncodings -> com.a.a.b.cd:
    char[] winansiByteToChar -> a
    char[] pdfEncodingByteToChar -> b
    com.lowagie.text.pdf.IntHashtable winansi -> c
    com.lowagie.text.pdf.IntHashtable pdfEncoding -> d
    java.util.HashMap extraEncodings -> e
    java.util.HashMap cmaps -> f
    byte[][] CRLF_CID_NEWLINE -> g
    byte[] convertToBytes(java.lang.String,java.lang.String) -> a
    byte[] convertToBytes(char,java.lang.String) -> a
    java.lang.String convertToString(byte[],java.lang.String) -> a
    boolean isPdfDocEncoding(java.lang.String) -> a
    void addExtraEncoding(java.lang.String,com.lowagie.text.pdf.ExtraEncoding) -> a
com.lowagie.text.pdf.PdfEncodings$Cp437Conversion -> com.a.a.b.ce:
    com.lowagie.text.pdf.IntHashtable c2b -> a
    char[] table -> b
    byte[] charToByte(java.lang.String,java.lang.String) -> a
    byte[] charToByte(char,java.lang.String) -> a
    java.lang.String byteToChar(byte[],java.lang.String) -> a
com.lowagie.text.pdf.PdfEncodings$SymbolConversion -> com.a.a.b.cf:
    com.lowagie.text.pdf.IntHashtable t1 -> a
    com.lowagie.text.pdf.IntHashtable t2 -> b
    com.lowagie.text.pdf.IntHashtable translation -> c
    char[] table1 -> d
    char[] table2 -> e
    byte[] charToByte(java.lang.String,java.lang.String) -> a
    byte[] charToByte(char,java.lang.String) -> a
    java.lang.String byteToChar(byte[],java.lang.String) -> a
com.lowagie.text.pdf.PdfEncodings$SymbolTTConversion -> com.a.a.b.cg:
    byte[] charToByte(char,java.lang.String) -> a
    byte[] charToByte(java.lang.String,java.lang.String) -> a
    java.lang.String byteToChar(byte[],java.lang.String) -> a
com.lowagie.text.pdf.PdfEncodings$WingdingsConversion -> com.a.a.b.ch:
    byte[] table -> a
    byte[] charToByte(char,java.lang.String) -> a
    byte[] charToByte(java.lang.String,java.lang.String) -> a
    java.lang.String byteToChar(byte[],java.lang.String) -> a
com.lowagie.text.pdf.PdfEncryption -> com.a.a.b.ci:
    byte[] pad -> l
    byte[] salt -> m
    byte[] metadataPad -> n
    byte[] key -> a
    int keySize -> b
    byte[] mkey -> c
    byte[] extra -> d
    java.security.MessageDigest md5 -> e
    byte[] ownerKey -> f
    byte[] userKey -> g
    com.lowagie.text.pdf.PdfPublicKeySecurityHandler publicKeyHandler -> h
    int permissions -> i
    byte[] documentID -> j
    long seq -> k
    int revision -> o
    int keyLength -> p
    boolean encryptMetadata -> q
    boolean embeddedFilesOnly -> r
    boolean isMetadataEncrypted() -> a
    boolean isEmbeddedFilesOnly() -> b
    byte[] createDocumentId() -> c
    void setupByEncryptionKey(byte[],int) -> a
    void setHashKey(int,int) -> a
    com.lowagie.text.pdf.PdfObject createInfoId(byte[]) -> a
    com.lowagie.text.pdf.PdfDictionary getEncryptionDictionary() -> d
    com.lowagie.text.pdf.PdfObject getFileID() -> e
    com.lowagie.text.pdf.OutputStreamEncryption getEncryptionStream(java.io.OutputStream) -> a
    int calculateStreamSize(int) -> a
    byte[] encryptByteArray(byte[]) -> b
    com.lowagie.text.pdf.StandardDecryption getDecryptor() -> f
    byte[] decryptByteArray(byte[]) -> c
com.lowagie.text.pdf.PdfException -> com.a.a.b.cj:
com.lowagie.text.pdf.PdfFileSpecification -> com.a.a.b.ck:
    com.lowagie.text.pdf.PdfWriter writer -> a
    com.lowagie.text.pdf.PdfIndirectReference ref -> b
    com.lowagie.text.pdf.PdfFileSpecification fileEmbedded(com.lowagie.text.pdf.PdfWriter,java.lang.String,java.lang.String,byte[]) -> a
    com.lowagie.text.pdf.PdfFileSpecification fileEmbedded(com.lowagie.text.pdf.PdfWriter,java.lang.String,java.lang.String,byte[],int) -> a
    com.lowagie.text.pdf.PdfFileSpecification fileEmbedded(com.lowagie.text.pdf.PdfWriter,java.lang.String,java.lang.String,byte[],java.lang.String,com.lowagie.text.pdf.PdfDictionary,int) -> a
    com.lowagie.text.pdf.PdfFileSpecification fileExtern(com.lowagie.text.pdf.PdfWriter,java.lang.String) -> a
    com.lowagie.text.pdf.PdfIndirectReference getReference() -> b
    void setUnicodeFileName(java.lang.String,boolean) -> a
com.lowagie.text.pdf.PdfFont -> com.a.a.b.cl:
    com.lowagie.text.pdf.BaseFont font -> c
    float size -> d
    com.lowagie.text.Image image -> a
    float hScale -> b
    int compareTo(java.lang.Object) -> compareTo
    float size() -> a
    float width() -> b
    float width(int) -> a
    float width(java.lang.String) -> a
    com.lowagie.text.pdf.BaseFont getFont() -> c
    void setImage(com.lowagie.text.Image) -> a
    com.lowagie.text.pdf.PdfFont getDefaultFont() -> d
    void setHorizontalScaling(float) -> a
com.lowagie.text.pdf.PdfFormField -> com.a.a.b.cm:
    com.lowagie.text.pdf.PdfName IF_SCALE_ALWAYS -> E
    com.lowagie.text.pdf.PdfName IF_SCALE_BIGGER -> F
    com.lowagie.text.pdf.PdfName IF_SCALE_SMALLER -> G
    com.lowagie.text.pdf.PdfName IF_SCALE_NEVER -> H
    com.lowagie.text.pdf.PdfName IF_SCALE_ANAMORPHIC -> I
    com.lowagie.text.pdf.PdfName IF_SCALE_PROPORTIONAL -> J
    com.lowagie.text.pdf.PdfName[] mergeTarget -> K
    com.lowagie.text.pdf.PdfFormField parent -> L
    java.util.ArrayList kids -> M
    void setWidget(com.lowagie.text.Rectangle,com.lowagie.text.pdf.PdfName) -> a
    com.lowagie.text.pdf.PdfFormField createEmpty(com.lowagie.text.pdf.PdfWriter) -> a
    void setButton(int) -> c
    com.lowagie.text.pdf.PdfFormField createButton(com.lowagie.text.pdf.PdfWriter,int) -> a
    com.lowagie.text.pdf.PdfFormField createCheckBox(com.lowagie.text.pdf.PdfWriter) -> b
    com.lowagie.text.pdf.PdfFormField getParent() -> m
    void addKid(com.lowagie.text.pdf.PdfFormField) -> a
    java.util.ArrayList getKids() -> n
    int setFieldFlags(int) -> d
    void setValueAsName(java.lang.String) -> c
    void setFieldName(java.lang.String) -> d
    void mergeResources(com.lowagie.text.pdf.PdfDictionary,com.lowagie.text.pdf.PdfDictionary,com.lowagie.text.pdf.PdfStamperImp) -> a
    void mergeResources(com.lowagie.text.pdf.PdfDictionary,com.lowagie.text.pdf.PdfDictionary) -> a
    void setUsed() -> d
    com.lowagie.text.pdf.PdfAnnotation shallowDuplicate(com.lowagie.text.pdf.PdfAnnotation) -> a
com.lowagie.text.pdf.PdfFormXObject -> com.a.a.b.cn:
    com.lowagie.text.pdf.PdfNumber ZERO -> a
    com.lowagie.text.pdf.PdfNumber ONE -> b
    com.lowagie.text.pdf.PdfLiteral MATRIX -> c
com.lowagie.text.pdf.PdfFunction -> com.a.a.b.co:
    com.lowagie.text.pdf.PdfWriter writer -> a
    com.lowagie.text.pdf.PdfIndirectReference reference -> b
    com.lowagie.text.pdf.PdfDictionary dictionary -> c
    com.lowagie.text.pdf.PdfIndirectReference getReference() -> a
    com.lowagie.text.pdf.PdfFunction type2(com.lowagie.text.pdf.PdfWriter,float[],float[],float[],float[],float) -> a
com.lowagie.text.pdf.PdfGState -> com.a.a.b.cp:
    com.lowagie.text.pdf.PdfName BM_NORMAL -> a
    com.lowagie.text.pdf.PdfName BM_COMPATIBLE -> b
    com.lowagie.text.pdf.PdfName BM_MULTIPLY -> c
    com.lowagie.text.pdf.PdfName BM_SCREEN -> d
    com.lowagie.text.pdf.PdfName BM_OVERLAY -> e
    com.lowagie.text.pdf.PdfName BM_DARKEN -> f
    com.lowagie.text.pdf.PdfName BM_LIGHTEN -> g
    com.lowagie.text.pdf.PdfName BM_COLORDODGE -> h
    com.lowagie.text.pdf.PdfName BM_COLORBURN -> i
    com.lowagie.text.pdf.PdfName BM_HARDLIGHT -> j
    com.lowagie.text.pdf.PdfName BM_SOFTLIGHT -> k
    com.lowagie.text.pdf.PdfName BM_DIFFERENCE -> l
    com.lowagie.text.pdf.PdfName BM_EXCLUSION -> m
com.lowagie.text.pdf.PdfImage -> com.a.a.b.cq:
    com.lowagie.text.pdf.PdfName name -> a
    com.lowagie.text.pdf.PdfName name() -> b
    void transferBytes(java.io.InputStream,java.io.OutputStream,int) -> a
com.lowagie.text.pdf.PdfImportedPage -> com.a.a.b.cr:
    com.lowagie.text.pdf.PdfReaderInstance readerInstance -> a
    int pageNumber -> i
    void addImage(com.lowagie.text.Image,float,float,float,float,float,float) -> a
    void addTemplate(com.lowagie.text.pdf.PdfTemplate,float,float,float,float,float,float) -> a
    com.lowagie.text.pdf.PdfContentByte getDuplicate() -> a
    com.lowagie.text.pdf.PdfStream getFormXObject(int) -> d
    void setColorFill(com.lowagie.text.pdf.PdfSpotColor,float) -> a
    void setColorStroke(com.lowagie.text.pdf.PdfSpotColor,float) -> b
    com.lowagie.text.pdf.PdfObject getResources() -> E
    void setFontAndSize(com.lowagie.text.pdf.BaseFont,float) -> a
    void throwError() -> F
    com.lowagie.text.pdf.PdfReaderInstance getPdfReaderInstance() -> G
com.lowagie.text.pdf.PdfIndirectObject -> com.a.a.b.cs:
    int number -> a
    int generation -> b
    byte[] STARTOBJ -> c
    byte[] ENDOBJ -> d
    int SIZEOBJ -> e
    com.lowagie.text.pdf.PdfObject object -> f
    com.lowagie.text.pdf.PdfWriter writer -> g
    com.lowagie.text.pdf.PdfIndirectReference getIndirectReference() -> a
    void writeTo(java.io.OutputStream) -> a
com.lowagie.text.pdf.PdfIndirectReference -> com.a.a.b.ct:
    int number -> b
    int generation -> c
    int getNumber() -> b
    int getGeneration() -> c
    java.lang.String toString() -> toString
com.lowagie.text.pdf.PdfLayer -> com.a.a.b.cu:
    com.lowagie.text.pdf.PdfIndirectReference ref -> a
    java.util.ArrayList children -> b
    com.lowagie.text.pdf.PdfLayer parent -> c
    java.lang.String title -> d
    boolean on -> e
    boolean onPanel -> f
    java.lang.String getTitle() -> b
    com.lowagie.text.pdf.PdfLayer getParent() -> c
    java.util.ArrayList getChildren() -> d
    com.lowagie.text.pdf.PdfIndirectReference getRef() -> f
    com.lowagie.text.pdf.PdfObject getPdfObject() -> g
    boolean isOn() -> h
    boolean isOnPanel() -> i
com.lowagie.text.pdf.PdfLayerMembership -> com.a.a.b.cv:
    com.lowagie.text.pdf.PdfName ALLON -> a
    com.lowagie.text.pdf.PdfName ANYON -> b
    com.lowagie.text.pdf.PdfName ANYOFF -> c
    com.lowagie.text.pdf.PdfName ALLOFF -> d
    com.lowagie.text.pdf.PdfIndirectReference ref -> e
    com.lowagie.text.pdf.PdfIndirectReference getRef() -> f
    com.lowagie.text.pdf.PdfObject getPdfObject() -> g
com.lowagie.text.pdf.PdfLine -> com.a.a.b.cw:
    java.util.ArrayList line -> a
    float left -> b
    float width -> c
    int alignment -> d
    float height -> e
    com.lowagie.text.Chunk listSymbol -> f
    float symbolIndent -> g
    boolean newlineSplit -> h
    float originalWidth -> i
    boolean isRTL -> j
    com.lowagie.text.pdf.PdfChunk add(com.lowagie.text.pdf.PdfChunk) -> a
    void addToLine(com.lowagie.text.pdf.PdfChunk) -> b
    int size() -> a
    java.util.Iterator iterator() -> b
    float height() -> c
    float indentLeft() -> d
    boolean hasToBeJustified() -> e
    void resetAlignment() -> f
    void setExtraIndent(float) -> a
    float widthLeft() -> g
    int numberOfSpaces() -> h
    void setListItem(com.lowagie.text.ListItem) -> a
    com.lowagie.text.Chunk listSymbol() -> i
    float listIndent() -> j
    java.lang.String toString() -> toString
    int GetLineLengthUtf32() -> k
    boolean isNewlineSplit() -> l
    int getLastStrokeChunk() -> m
    com.lowagie.text.pdf.PdfChunk getChunk(int) -> a
    float getOriginalWidth() -> n
    float[] getMaxSize() -> o
    boolean isRTL() -> p
    int getSeparatorCount() -> q
    float getAscender() -> r
    float getDescender() -> s
com.lowagie.text.pdf.PdfLiteral -> com.a.a.b.cx:
    int position -> a
    void toPdf(com.lowagie.text.pdf.PdfWriter,java.io.OutputStream) -> a
com.lowagie.text.pdf.PdfMediaClipData -> com.a.a.b.cy:
com.lowagie.text.pdf.PdfName -> com.a.a.b.cz:
    com.lowagie.text.pdf.PdfName _3D -> a
    com.lowagie.text.pdf.PdfName A -> b
    com.lowagie.text.pdf.PdfName AA -> c
    com.lowagie.text.pdf.PdfName ABSOLUTECOLORIMETRIC -> d
    com.lowagie.text.pdf.PdfName AC -> e
    com.lowagie.text.pdf.PdfName ACROFORM -> f
    com.lowagie.text.pdf.PdfName ACTION -> g
    com.lowagie.text.pdf.PdfName ACTIVATION -> h
    com.lowagie.text.pdf.PdfName ADBE -> i
    com.lowagie.text.pdf.PdfName ACTUALTEXT -> j
    com.lowagie.text.pdf.PdfName ADBE_PKCS7_DETACHED -> k
    com.lowagie.text.pdf.PdfName ADBE_PKCS7_S4 -> l
    com.lowagie.text.pdf.PdfName ADBE_PKCS7_S5 -> m
    com.lowagie.text.pdf.PdfName ADBE_PKCS7_SHA1 -> n
    com.lowagie.text.pdf.PdfName ADBE_X509_RSA_SHA1 -> o
    com.lowagie.text.pdf.PdfName ADOBE_PPKLITE -> p
    com.lowagie.text.pdf.PdfName ADOBE_PPKMS -> q
    com.lowagie.text.pdf.PdfName AESV2 -> r
    com.lowagie.text.pdf.PdfName AIS -> s
    com.lowagie.text.pdf.PdfName ALLPAGES -> t
    com.lowagie.text.pdf.PdfName ALT -> u
    com.lowagie.text.pdf.PdfName ALTERNATE -> v
    com.lowagie.text.pdf.PdfName ANIMATION -> w
    com.lowagie.text.pdf.PdfName ANNOT -> x
    com.lowagie.text.pdf.PdfName ANNOTS -> y
    com.lowagie.text.pdf.PdfName ANTIALIAS -> z
    com.lowagie.text.pdf.PdfName AP -> A
    com.lowagie.text.pdf.PdfName APPDEFAULT -> B
    com.lowagie.text.pdf.PdfName ART -> C
    com.lowagie.text.pdf.PdfName ARTBOX -> D
    com.lowagie.text.pdf.PdfName ASCENT -> E
    com.lowagie.text.pdf.PdfName AS -> F
    com.lowagie.text.pdf.PdfName ASCII85DECODE -> G
    com.lowagie.text.pdf.PdfName ASCIIHEXDECODE -> H
    com.lowagie.text.pdf.PdfName ASSET -> I
    com.lowagie.text.pdf.PdfName ASSETS -> J
    com.lowagie.text.pdf.PdfName AUTHEVENT -> K
    com.lowagie.text.pdf.PdfName AUTHOR -> L
    com.lowagie.text.pdf.PdfName B -> M
    com.lowagie.text.pdf.PdfName BACKGROUND -> N
    com.lowagie.text.pdf.PdfName BASEENCODING -> O
    com.lowagie.text.pdf.PdfName BASEFONT -> P
    com.lowagie.text.pdf.PdfName BASEVERSION -> Q
    com.lowagie.text.pdf.PdfName BBOX -> R
    com.lowagie.text.pdf.PdfName BC -> S
    com.lowagie.text.pdf.PdfName BG -> T
    com.lowagie.text.pdf.PdfName BIBENTRY -> U
    com.lowagie.text.pdf.PdfName BIGFIVE -> V
    com.lowagie.text.pdf.PdfName BINDING -> W
    com.lowagie.text.pdf.PdfName BINDINGMATERIALNAME -> X
    com.lowagie.text.pdf.PdfName BITSPERCOMPONENT -> Y
    com.lowagie.text.pdf.PdfName BITSPERSAMPLE -> Z
    com.lowagie.text.pdf.PdfName BL -> aa
    com.lowagie.text.pdf.PdfName BLACKIS1 -> ab
    com.lowagie.text.pdf.PdfName BLACKPOINT -> ac
    com.lowagie.text.pdf.PdfName BLOCKQUOTE -> ad
    com.lowagie.text.pdf.PdfName BLEEDBOX -> ae
    com.lowagie.text.pdf.PdfName BLINDS -> af
    com.lowagie.text.pdf.PdfName BM -> ag
    com.lowagie.text.pdf.PdfName BORDER -> ah
    com.lowagie.text.pdf.PdfName BOUNDS -> ai
    com.lowagie.text.pdf.PdfName BOX -> aj
    com.lowagie.text.pdf.PdfName BS -> ak
    com.lowagie.text.pdf.PdfName BTN -> al
    com.lowagie.text.pdf.PdfName BYTERANGE -> am
    com.lowagie.text.pdf.PdfName C -> an
    com.lowagie.text.pdf.PdfName C0 -> ao
    com.lowagie.text.pdf.PdfName C1 -> ap
    com.lowagie.text.pdf.PdfName CA -> aq
    com.lowagie.text.pdf.PdfName ca -> ar
    com.lowagie.text.pdf.PdfName CALGRAY -> as
    com.lowagie.text.pdf.PdfName CALRGB -> at
    com.lowagie.text.pdf.PdfName CAPHEIGHT -> au
    com.lowagie.text.pdf.PdfName CAPTION -> av
    com.lowagie.text.pdf.PdfName CATALOG -> aw
    com.lowagie.text.pdf.PdfName CATEGORY -> ax
    com.lowagie.text.pdf.PdfName CCITTFAXDECODE -> ay
    com.lowagie.text.pdf.PdfName CENTER -> az
    com.lowagie.text.pdf.PdfName CENTERWINDOW -> aA
    com.lowagie.text.pdf.PdfName CERT -> aB
    com.lowagie.text.pdf.PdfName CF -> aC
    com.lowagie.text.pdf.PdfName CFM -> aD
    com.lowagie.text.pdf.PdfName CH -> aE
    com.lowagie.text.pdf.PdfName CHARPROCS -> aF
    com.lowagie.text.pdf.PdfName CI -> aG
    com.lowagie.text.pdf.PdfName CIDFONTTYPE0 -> aH
    com.lowagie.text.pdf.PdfName CIDFONTTYPE2 -> aI
    com.lowagie.text.pdf.PdfName CIDSET -> aJ
    com.lowagie.text.pdf.PdfName CIDSYSTEMINFO -> aK
    com.lowagie.text.pdf.PdfName CIDTOGIDMAP -> aL
    com.lowagie.text.pdf.PdfName CIRCLE -> aM
    com.lowagie.text.pdf.PdfName CMD -> aN
    com.lowagie.text.pdf.PdfName CO -> aO
    com.lowagie.text.pdf.PdfName CODE -> aP
    com.lowagie.text.pdf.PdfName COLORS -> aQ
    com.lowagie.text.pdf.PdfName COLORSPACE -> aR
    com.lowagie.text.pdf.PdfName COLLECTION -> aS
    com.lowagie.text.pdf.PdfName COLLECTIONFIELD -> aT
    com.lowagie.text.pdf.PdfName COLLECTIONITEM -> aU
    com.lowagie.text.pdf.PdfName COLLECTIONSCHEMA -> aV
    com.lowagie.text.pdf.PdfName COLLECTIONSORT -> aW
    com.lowagie.text.pdf.PdfName COLLECTIONSUBITEM -> aX
    com.lowagie.text.pdf.PdfName COLUMNS -> aY
    com.lowagie.text.pdf.PdfName CONDITION -> aZ
    com.lowagie.text.pdf.PdfName CONFIGURATION -> ba
    com.lowagie.text.pdf.PdfName CONFIGURATIONS -> bb
    com.lowagie.text.pdf.PdfName CONTACTINFO -> bc
    com.lowagie.text.pdf.PdfName CONTENT -> bd
    com.lowagie.text.pdf.PdfName CONTENTS -> be
    com.lowagie.text.pdf.PdfName COORDS -> bf
    com.lowagie.text.pdf.PdfName COUNT -> bg
    com.lowagie.text.pdf.PdfName COURIER -> bh
    com.lowagie.text.pdf.PdfName COURIER_BOLD -> bi
    com.lowagie.text.pdf.PdfName COURIER_OBLIQUE -> bj
    com.lowagie.text.pdf.PdfName COURIER_BOLDOBLIQUE -> bk
    com.lowagie.text.pdf.PdfName CREATIONDATE -> bl
    com.lowagie.text.pdf.PdfName CREATOR -> bm
    com.lowagie.text.pdf.PdfName CREATORINFO -> bn
    com.lowagie.text.pdf.PdfName CROPBOX -> bo
    com.lowagie.text.pdf.PdfName CRYPT -> bp
    com.lowagie.text.pdf.PdfName CS -> bq
    com.lowagie.text.pdf.PdfName CUEPOINT -> br
    com.lowagie.text.pdf.PdfName CUEPOINTS -> bs
    com.lowagie.text.pdf.PdfName D -> bt
    com.lowagie.text.pdf.PdfName DA -> bu
    com.lowagie.text.pdf.PdfName DATA -> bv
    com.lowagie.text.pdf.PdfName DC -> bw
    com.lowagie.text.pdf.PdfName DCTDECODE -> bx
    com.lowagie.text.pdf.PdfName DEACTIVATION -> by
    com.lowagie.text.pdf.PdfName DECODE -> bz
    com.lowagie.text.pdf.PdfName DECODEPARMS -> bA
    com.lowagie.text.pdf.PdfName DEFAULT -> bB
    com.lowagie.text.pdf.PdfName DEFAULTCRYPTFILTER -> bC
    com.lowagie.text.pdf.PdfName DEFAULTCMYK -> bD
    com.lowagie.text.pdf.PdfName DEFAULTGRAY -> bE
    com.lowagie.text.pdf.PdfName DEFAULTRGB -> bF
    com.lowagie.text.pdf.PdfName DESC -> bG
    com.lowagie.text.pdf.PdfName DESCENDANTFONTS -> bH
    com.lowagie.text.pdf.PdfName DESCENT -> bI
    com.lowagie.text.pdf.PdfName DEST -> bJ
    com.lowagie.text.pdf.PdfName DESTOUTPUTPROFILE -> bK
    com.lowagie.text.pdf.PdfName DESTS -> bL
    com.lowagie.text.pdf.PdfName DEVICEGRAY -> bM
    com.lowagie.text.pdf.PdfName DEVICERGB -> bN
    com.lowagie.text.pdf.PdfName DEVICECMYK -> bO
    com.lowagie.text.pdf.PdfName DI -> bP
    com.lowagie.text.pdf.PdfName DIFFERENCES -> bQ
    com.lowagie.text.pdf.PdfName DISSOLVE -> bR
    com.lowagie.text.pdf.PdfName DIRECTION -> bS
    com.lowagie.text.pdf.PdfName DISPLAYDOCTITLE -> bT
    com.lowagie.text.pdf.PdfName DIV -> bU
    com.lowagie.text.pdf.PdfName DM -> bV
    com.lowagie.text.pdf.PdfName DOCMDP -> bW
    com.lowagie.text.pdf.PdfName DOCOPEN -> bX
    com.lowagie.text.pdf.PdfName DOCUMENT -> bY
    com.lowagie.text.pdf.PdfName DOMAIN -> bZ
    com.lowagie.text.pdf.PdfName DP -> ca
    com.lowagie.text.pdf.PdfName DR -> cb
    com.lowagie.text.pdf.PdfName DS -> cc
    com.lowagie.text.pdf.PdfName DUR -> cd
    com.lowagie.text.pdf.PdfName DUPLEX -> ce
    com.lowagie.text.pdf.PdfName DUPLEXFLIPSHORTEDGE -> cf
    com.lowagie.text.pdf.PdfName DUPLEXFLIPLONGEDGE -> cg
    com.lowagie.text.pdf.PdfName DV -> ch
    com.lowagie.text.pdf.PdfName DW -> ci
    com.lowagie.text.pdf.PdfName E -> cj
    com.lowagie.text.pdf.PdfName EARLYCHANGE -> ck
    com.lowagie.text.pdf.PdfName EF -> cl
    com.lowagie.text.pdf.PdfName EFF -> cm
    com.lowagie.text.pdf.PdfName EFOPEN -> cn
    com.lowagie.text.pdf.PdfName EMBEDDED -> co
    com.lowagie.text.pdf.PdfName EMBEDDEDFILE -> cp
    com.lowagie.text.pdf.PdfName EMBEDDEDFILES -> cq
    com.lowagie.text.pdf.PdfName ENCODE -> cr
    com.lowagie.text.pdf.PdfName ENCODEDBYTEALIGN -> cs
    com.lowagie.text.pdf.PdfName ENCODING -> ct
    com.lowagie.text.pdf.PdfName ENCRYPT -> cu
    com.lowagie.text.pdf.PdfName ENCRYPTMETADATA -> cv
    com.lowagie.text.pdf.PdfName ENDOFBLOCK -> cw
    com.lowagie.text.pdf.PdfName ENDOFLINE -> cx
    com.lowagie.text.pdf.PdfName EXTEND -> cy
    com.lowagie.text.pdf.PdfName EXTENSIONS -> cz
    com.lowagie.text.pdf.PdfName EXTENSIONLEVEL -> cA
    com.lowagie.text.pdf.PdfName EXTGSTATE -> cB
    com.lowagie.text.pdf.PdfName EXPORT -> cC
    com.lowagie.text.pdf.PdfName EXPORTSTATE -> cD
    com.lowagie.text.pdf.PdfName EVENT -> cE
    com.lowagie.text.pdf.PdfName F -> cF
    com.lowagie.text.pdf.PdfName FAR -> cG
    com.lowagie.text.pdf.PdfName FB -> cH
    com.lowagie.text.pdf.PdfName FDECODEPARMS -> cI
    com.lowagie.text.pdf.PdfName FDF -> cJ
    com.lowagie.text.pdf.PdfName FF -> cK
    com.lowagie.text.pdf.PdfName FFILTER -> cL
    com.lowagie.text.pdf.PdfName FIELDS -> cM
    com.lowagie.text.pdf.PdfName FIGURE -> cN
    com.lowagie.text.pdf.PdfName FILEATTACHMENT -> cO
    com.lowagie.text.pdf.PdfName FILESPEC -> cP
    com.lowagie.text.pdf.PdfName FILTER -> cQ
    com.lowagie.text.pdf.PdfName FIRST -> cR
    com.lowagie.text.pdf.PdfName FIRSTCHAR -> cS
    com.lowagie.text.pdf.PdfName FIRSTPAGE -> cT
    com.lowagie.text.pdf.PdfName FIT -> cU
    com.lowagie.text.pdf.PdfName FITH -> cV
    com.lowagie.text.pdf.PdfName FITV -> cW
    com.lowagie.text.pdf.PdfName FITR -> cX
    com.lowagie.text.pdf.PdfName FITB -> cY
    com.lowagie.text.pdf.PdfName FITBH -> cZ
    com.lowagie.text.pdf.PdfName FITBV -> da
    com.lowagie.text.pdf.PdfName FITWINDOW -> db
    com.lowagie.text.pdf.PdfName FLAGS -> dc
    com.lowagie.text.pdf.PdfName FLASH -> dd
    com.lowagie.text.pdf.PdfName FLASHVARS -> de
    com.lowagie.text.pdf.PdfName FLATEDECODE -> df
    com.lowagie.text.pdf.PdfName FO -> dg
    com.lowagie.text.pdf.PdfName FONT -> dh
    com.lowagie.text.pdf.PdfName FONTBBOX -> di
    com.lowagie.text.pdf.PdfName FONTDESCRIPTOR -> dj
    com.lowagie.text.pdf.PdfName FONTFILE -> dk
    com.lowagie.text.pdf.PdfName FONTFILE2 -> dl
    com.lowagie.text.pdf.PdfName FONTFILE3 -> dm
    com.lowagie.text.pdf.PdfName FONTMATRIX -> dn
    com.lowagie.text.pdf.PdfName FONTNAME -> do
    com.lowagie.text.pdf.PdfName FOREGROUND -> dp
    com.lowagie.text.pdf.PdfName FORM -> dq
    com.lowagie.text.pdf.PdfName FORMTYPE -> dr
    com.lowagie.text.pdf.PdfName FORMULA -> ds
    com.lowagie.text.pdf.PdfName FREETEXT -> dt
    com.lowagie.text.pdf.PdfName FRM -> du
    com.lowagie.text.pdf.PdfName FS -> dv
    com.lowagie.text.pdf.PdfName FT -> dw
    com.lowagie.text.pdf.PdfName FULLSCREEN -> dx
    com.lowagie.text.pdf.PdfName FUNCTION -> dy
    com.lowagie.text.pdf.PdfName FUNCTIONS -> dz
    com.lowagie.text.pdf.PdfName FUNCTIONTYPE -> dA
    com.lowagie.text.pdf.PdfName GAMMA -> dB
    com.lowagie.text.pdf.PdfName GBK -> dC
    com.lowagie.text.pdf.PdfName GLITTER -> dD
    com.lowagie.text.pdf.PdfName GOTO -> dE
    com.lowagie.text.pdf.PdfName GOTOE -> dF
    com.lowagie.text.pdf.PdfName GOTOR -> dG
    com.lowagie.text.pdf.PdfName GROUP -> dH
    com.lowagie.text.pdf.PdfName GTS_PDFA1 -> dI
    com.lowagie.text.pdf.PdfName GTS_PDFX -> dJ
    com.lowagie.text.pdf.PdfName GTS_PDFXVERSION -> dK
    com.lowagie.text.pdf.PdfName H -> dL
    com.lowagie.text.pdf.PdfName H1 -> dM
    com.lowagie.text.pdf.PdfName H2 -> dN
    com.lowagie.text.pdf.PdfName H3 -> dO
    com.lowagie.text.pdf.PdfName H4 -> dP
    com.lowagie.text.pdf.PdfName H5 -> dQ
    com.lowagie.text.pdf.PdfName H6 -> dR
    com.lowagie.text.pdf.PdfName HALIGN -> dS
    com.lowagie.text.pdf.PdfName HEIGHT -> dT
    com.lowagie.text.pdf.PdfName HELV -> dU
    com.lowagie.text.pdf.PdfName HELVETICA -> dV
    com.lowagie.text.pdf.PdfName HELVETICA_BOLD -> dW
    com.lowagie.text.pdf.PdfName HELVETICA_OBLIQUE -> dX
    com.lowagie.text.pdf.PdfName HELVETICA_BOLDOBLIQUE -> dY
    com.lowagie.text.pdf.PdfName HID -> dZ
    com.lowagie.text.pdf.PdfName HIDE -> ea
    com.lowagie.text.pdf.PdfName HIDEMENUBAR -> eb
    com.lowagie.text.pdf.PdfName HIDETOOLBAR -> ec
    com.lowagie.text.pdf.PdfName HIDEWINDOWUI -> ed
    com.lowagie.text.pdf.PdfName HIGHLIGHT -> ee
    com.lowagie.text.pdf.PdfName HOFFSET -> ef
    com.lowagie.text.pdf.PdfName I -> eg
    com.lowagie.text.pdf.PdfName ICCBASED -> eh
    com.lowagie.text.pdf.PdfName ID -> ei
    com.lowagie.text.pdf.PdfName IDENTITY -> ej
    com.lowagie.text.pdf.PdfName IF -> ek
    com.lowagie.text.pdf.PdfName IMAGE -> el
    com.lowagie.text.pdf.PdfName IMAGEB -> em
    com.lowagie.text.pdf.PdfName IMAGEC -> en
    com.lowagie.text.pdf.PdfName IMAGEI -> eo
    com.lowagie.text.pdf.PdfName IMAGEMASK -> ep
    com.lowagie.text.pdf.PdfName INDEX -> eq
    com.lowagie.text.pdf.PdfName INDEXED -> er
    com.lowagie.text.pdf.PdfName INFO -> es
    com.lowagie.text.pdf.PdfName INK -> et
    com.lowagie.text.pdf.PdfName INKLIST -> eu
    com.lowagie.text.pdf.PdfName INSTANCES -> ev
    com.lowagie.text.pdf.PdfName IMPORTDATA -> ew
    com.lowagie.text.pdf.PdfName INTENT -> ex
    com.lowagie.text.pdf.PdfName INTERPOLATE -> ey
    com.lowagie.text.pdf.PdfName ISMAP -> ez
    com.lowagie.text.pdf.PdfName IRT -> eA
    com.lowagie.text.pdf.PdfName ITALICANGLE -> eB
    com.lowagie.text.pdf.PdfName ITXT -> eC
    com.lowagie.text.pdf.PdfName IX -> eD
    com.lowagie.text.pdf.PdfName JAVASCRIPT -> eE
    com.lowagie.text.pdf.PdfName JBIG2DECODE -> eF
    com.lowagie.text.pdf.PdfName JBIG2GLOBALS -> eG
    com.lowagie.text.pdf.PdfName JPXDECODE -> eH
    com.lowagie.text.pdf.PdfName JS -> eI
    com.lowagie.text.pdf.PdfName K -> eJ
    com.lowagie.text.pdf.PdfName KEYWORDS -> eK
    com.lowagie.text.pdf.PdfName KIDS -> eL
    com.lowagie.text.pdf.PdfName L -> eM
    com.lowagie.text.pdf.PdfName L2R -> eN
    com.lowagie.text.pdf.PdfName LANG -> eO
    com.lowagie.text.pdf.PdfName LANGUAGE -> eP
    com.lowagie.text.pdf.PdfName LAST -> eQ
    com.lowagie.text.pdf.PdfName LASTCHAR -> eR
    com.lowagie.text.pdf.PdfName LASTPAGE -> eS
    com.lowagie.text.pdf.PdfName LAUNCH -> eT
    com.lowagie.text.pdf.PdfName LBL -> eU
    com.lowagie.text.pdf.PdfName LBODY -> eV
    com.lowagie.text.pdf.PdfName LENGTH -> eW
    com.lowagie.text.pdf.PdfName LENGTH1 -> eX
    com.lowagie.text.pdf.PdfName LI -> eY
    com.lowagie.text.pdf.PdfName LIMITS -> eZ
    com.lowagie.text.pdf.PdfName LINE -> fa
    com.lowagie.text.pdf.PdfName LINEAR -> fb
    com.lowagie.text.pdf.PdfName LINK -> fc
    com.lowagie.text.pdf.PdfName LISTMODE -> fd
    com.lowagie.text.pdf.PdfName LOCATION -> fe
    com.lowagie.text.pdf.PdfName LOCK -> ff
    com.lowagie.text.pdf.PdfName LOCKED -> fg
    com.lowagie.text.pdf.PdfName LZWDECODE -> fh
    com.lowagie.text.pdf.PdfName M -> fi
    com.lowagie.text.pdf.PdfName MATERIAL -> fj
    com.lowagie.text.pdf.PdfName MATRIX -> fk
    com.lowagie.text.pdf.PdfName MAC_EXPERT_ENCODING -> fl
    com.lowagie.text.pdf.PdfName MAC_ROMAN_ENCODING -> fm
    com.lowagie.text.pdf.PdfName MARKED -> fn
    com.lowagie.text.pdf.PdfName MARKINFO -> fo
    com.lowagie.text.pdf.PdfName MASK -> fp
    com.lowagie.text.pdf.PdfName MAX_LOWER_CASE -> fq
    com.lowagie.text.pdf.PdfName MAX_CAMEL_CASE -> fr
    com.lowagie.text.pdf.PdfName MAXLEN -> fs
    com.lowagie.text.pdf.PdfName MEDIABOX -> ft
    com.lowagie.text.pdf.PdfName MCID -> fu
    com.lowagie.text.pdf.PdfName MCR -> fv
    com.lowagie.text.pdf.PdfName METADATA -> fw
    com.lowagie.text.pdf.PdfName MIN_LOWER_CASE -> fx
    com.lowagie.text.pdf.PdfName MIN_CAMEL_CASE -> fy
    com.lowagie.text.pdf.PdfName MK -> fz
    com.lowagie.text.pdf.PdfName MMTYPE1 -> fA
    com.lowagie.text.pdf.PdfName MODDATE -> fB
    com.lowagie.text.pdf.PdfName N -> fC
    com.lowagie.text.pdf.PdfName N0 -> fD
    com.lowagie.text.pdf.PdfName N1 -> fE
    com.lowagie.text.pdf.PdfName N2 -> fF
    com.lowagie.text.pdf.PdfName N3 -> fG
    com.lowagie.text.pdf.PdfName N4 -> fH
    com.lowagie.text.pdf.PdfName NAME -> fI
    com.lowagie.text.pdf.PdfName NAMED -> fJ
    com.lowagie.text.pdf.PdfName NAMES -> fK
    com.lowagie.text.pdf.PdfName NAVIGATION -> fL
    com.lowagie.text.pdf.PdfName NAVIGATIONPANE -> fM
    com.lowagie.text.pdf.PdfName NEAR -> fN
    com.lowagie.text.pdf.PdfName NEEDAPPEARANCES -> fO
    com.lowagie.text.pdf.PdfName NEWWINDOW -> fP
    com.lowagie.text.pdf.PdfName NEXT -> fQ
    com.lowagie.text.pdf.PdfName NEXTPAGE -> fR
    com.lowagie.text.pdf.PdfName NM -> fS
    com.lowagie.text.pdf.PdfName NONE -> fT
    com.lowagie.text.pdf.PdfName NONFULLSCREENPAGEMODE -> fU
    com.lowagie.text.pdf.PdfName NONSTRUCT -> fV
    com.lowagie.text.pdf.PdfName NOTE -> fW
    com.lowagie.text.pdf.PdfName NUMCOPIES -> fX
    com.lowagie.text.pdf.PdfName NUMS -> fY
    com.lowagie.text.pdf.PdfName O -> fZ
    com.lowagie.text.pdf.PdfName OBJ -> ga
    com.lowagie.text.pdf.PdfName OBJR -> gb
    com.lowagie.text.pdf.PdfName OBJSTM -> gc
    com.lowagie.text.pdf.PdfName OC -> gd
    com.lowagie.text.pdf.PdfName OCG -> ge
    com.lowagie.text.pdf.PdfName OCGS -> gf
    com.lowagie.text.pdf.PdfName OCMD -> gg
    com.lowagie.text.pdf.PdfName OCPROPERTIES -> gh
    com.lowagie.text.pdf.PdfName Off -> gi
    com.lowagie.text.pdf.PdfName OFF -> gj
    com.lowagie.text.pdf.PdfName ON -> gk
    com.lowagie.text.pdf.PdfName ONECOLUMN -> gl
    com.lowagie.text.pdf.PdfName OPEN -> gm
    com.lowagie.text.pdf.PdfName OPENACTION -> gn
    com.lowagie.text.pdf.PdfName OP -> go
    com.lowagie.text.pdf.PdfName op -> gp
    com.lowagie.text.pdf.PdfName OPM -> gq
    com.lowagie.text.pdf.PdfName OPT -> gr
    com.lowagie.text.pdf.PdfName ORDER -> gs
    com.lowagie.text.pdf.PdfName ORDERING -> gt
    com.lowagie.text.pdf.PdfName OSCILLATING -> gu
    com.lowagie.text.pdf.PdfName OUTLINES -> gv
    com.lowagie.text.pdf.PdfName OUTPUTCONDITION -> gw
    com.lowagie.text.pdf.PdfName OUTPUTCONDITIONIDENTIFIER -> gx
    com.lowagie.text.pdf.PdfName OUTPUTINTENT -> gy
    com.lowagie.text.pdf.PdfName OUTPUTINTENTS -> gz
    com.lowagie.text.pdf.PdfName P -> gA
    com.lowagie.text.pdf.PdfName PAGE -> gB
    com.lowagie.text.pdf.PdfName PAGELABELS -> gC
    com.lowagie.text.pdf.PdfName PAGELAYOUT -> gD
    com.lowagie.text.pdf.PdfName PAGEMODE -> gE
    com.lowagie.text.pdf.PdfName PAGES -> gF
    com.lowagie.text.pdf.PdfName PAINTTYPE -> gG
    com.lowagie.text.pdf.PdfName PANOSE -> gH
    com.lowagie.text.pdf.PdfName PARAMS -> gI
    com.lowagie.text.pdf.PdfName PARENT -> gJ
    com.lowagie.text.pdf.PdfName PARENTTREE -> gK
    com.lowagie.text.pdf.PdfName PARENTTREENEXTKEY -> gL
    com.lowagie.text.pdf.PdfName PART -> gM
    com.lowagie.text.pdf.PdfName PASSCONTEXTCLICK -> gN
    com.lowagie.text.pdf.PdfName PATTERN -> gO
    com.lowagie.text.pdf.PdfName PATTERNTYPE -> gP
    com.lowagie.text.pdf.PdfName PC -> gQ
    com.lowagie.text.pdf.PdfName PDF -> gR
    com.lowagie.text.pdf.PdfName PDFDOCENCODING -> gS
    com.lowagie.text.pdf.PdfName PERCEPTUAL -> gT
    com.lowagie.text.pdf.PdfName PERMS -> gU
    com.lowagie.text.pdf.PdfName PG -> gV
    com.lowagie.text.pdf.PdfName PI -> gW
    com.lowagie.text.pdf.PdfName PICKTRAYBYPDFSIZE -> gX
    com.lowagie.text.pdf.PdfName PLAYCOUNT -> gY
    com.lowagie.text.pdf.PdfName PO -> gZ
    com.lowagie.text.pdf.PdfName POPUP -> ha
    com.lowagie.text.pdf.PdfName POSITION -> hb
    com.lowagie.text.pdf.PdfName PREDICTOR -> hc
    com.lowagie.text.pdf.PdfName PREFERRED -> hd
    com.lowagie.text.pdf.PdfName PRESENTATION -> he
    com.lowagie.text.pdf.PdfName PRESERVERB -> hf
    com.lowagie.text.pdf.PdfName PREV -> hg
    com.lowagie.text.pdf.PdfName PREVPAGE -> hh
    com.lowagie.text.pdf.PdfName PRINT -> hi
    com.lowagie.text.pdf.PdfName PRINTAREA -> hj
    com.lowagie.text.pdf.PdfName PRINTCLIP -> hk
    com.lowagie.text.pdf.PdfName PRINTPAGERANGE -> hl
    com.lowagie.text.pdf.PdfName PRINTSCALING -> hm
    com.lowagie.text.pdf.PdfName PRINTSTATE -> hn
    com.lowagie.text.pdf.PdfName PRIVATE -> ho
    com.lowagie.text.pdf.PdfName PROCSET -> hp
    com.lowagie.text.pdf.PdfName PRODUCER -> hq
    com.lowagie.text.pdf.PdfName PROPERTIES -> hr
    com.lowagie.text.pdf.PdfName PS -> hs
    com.lowagie.text.pdf.PdfName PUBSEC -> ht
    com.lowagie.text.pdf.PdfName PV -> hu
    com.lowagie.text.pdf.PdfName Q -> hv
    com.lowagie.text.pdf.PdfName QUADPOINTS -> hw
    com.lowagie.text.pdf.PdfName QUOTE -> hx
    com.lowagie.text.pdf.PdfName R -> hy
    com.lowagie.text.pdf.PdfName R2L -> hz
    com.lowagie.text.pdf.PdfName RANGE -> hA
    com.lowagie.text.pdf.PdfName RC -> hB
    com.lowagie.text.pdf.PdfName RBGROUPS -> hC
    com.lowagie.text.pdf.PdfName REASON -> hD
    com.lowagie.text.pdf.PdfName RECIPIENTS -> hE
    com.lowagie.text.pdf.PdfName RECT -> hF
    com.lowagie.text.pdf.PdfName REFERENCE -> hG
    com.lowagie.text.pdf.PdfName REGISTRY -> hH
    com.lowagie.text.pdf.PdfName REGISTRYNAME -> hI
    com.lowagie.text.pdf.PdfName RELATIVECOLORIMETRIC -> hJ
    com.lowagie.text.pdf.PdfName RENDITION -> hK
    com.lowagie.text.pdf.PdfName RESETFORM -> hL
    com.lowagie.text.pdf.PdfName RESOURCES -> hM
    com.lowagie.text.pdf.PdfName RI -> hN
    com.lowagie.text.pdf.PdfName RICHMEDIA -> hO
    com.lowagie.text.pdf.PdfName RICHMEDIAACTIVATION -> hP
    com.lowagie.text.pdf.PdfName RICHMEDIAANIMATION -> hQ
    com.lowagie.text.pdf.PdfName RICHMEDIACOMMAND -> hR
    com.lowagie.text.pdf.PdfName RICHMEDIACONFIGURATION -> hS
    com.lowagie.text.pdf.PdfName RICHMEDIACONTENT -> hT
    com.lowagie.text.pdf.PdfName RICHMEDIADEACTIVATION -> hU
    com.lowagie.text.pdf.PdfName RICHMEDIAEXECUTE -> hV
    com.lowagie.text.pdf.PdfName RICHMEDIAINSTANCE -> hW
    com.lowagie.text.pdf.PdfName RICHMEDIAPARAMS -> hX
    com.lowagie.text.pdf.PdfName RICHMEDIAPOSITION -> hY
    com.lowagie.text.pdf.PdfName RICHMEDIAPRESENTATION -> hZ
    com.lowagie.text.pdf.PdfName RICHMEDIASETTINGS -> ia
    com.lowagie.text.pdf.PdfName RICHMEDIAWINDOW -> ib
    com.lowagie.text.pdf.PdfName ROLEMAP -> ic
    com.lowagie.text.pdf.PdfName ROOT -> id
    com.lowagie.text.pdf.PdfName ROTATE -> ie
    com.lowagie.text.pdf.PdfName ROWS -> if
    com.lowagie.text.pdf.PdfName RUBY -> ig
    com.lowagie.text.pdf.PdfName RUNLENGTHDECODE -> ih
    com.lowagie.text.pdf.PdfName RV -> ii
    com.lowagie.text.pdf.PdfName S -> ij
    com.lowagie.text.pdf.PdfName SATURATION -> ik
    com.lowagie.text.pdf.PdfName SCHEMA -> il
    com.lowagie.text.pdf.PdfName SCREEN -> im
    com.lowagie.text.pdf.PdfName SCRIPTS -> in
    com.lowagie.text.pdf.PdfName SECT -> io
    com.lowagie.text.pdf.PdfName SEPARATION -> ip
    com.lowagie.text.pdf.PdfName SETOCGSTATE -> iq
    com.lowagie.text.pdf.PdfName SETTINGS -> ir
    com.lowagie.text.pdf.PdfName SHADING -> is
    com.lowagie.text.pdf.PdfName SHADINGTYPE -> it
    com.lowagie.text.pdf.PdfName SHIFT_JIS -> iu
    com.lowagie.text.pdf.PdfName SIG -> iv
    com.lowagie.text.pdf.PdfName SIGFLAGS -> iw
    com.lowagie.text.pdf.PdfName SIGREF -> ix
    com.lowagie.text.pdf.PdfName SIMPLEX -> iy
    com.lowagie.text.pdf.PdfName SINGLEPAGE -> iz
    com.lowagie.text.pdf.PdfName SIZE -> iA
    com.lowagie.text.pdf.PdfName SMASK -> iB
    com.lowagie.text.pdf.PdfName SORT -> iC
    com.lowagie.text.pdf.PdfName SOUND -> iD
    com.lowagie.text.pdf.PdfName SPAN -> iE
    com.lowagie.text.pdf.PdfName SPEED -> iF
    com.lowagie.text.pdf.PdfName SPLIT -> iG
    com.lowagie.text.pdf.PdfName SQUARE -> iH
    com.lowagie.text.pdf.PdfName SQUIGGLY -> iI
    com.lowagie.text.pdf.PdfName ST -> iJ
    com.lowagie.text.pdf.PdfName STAMP -> iK
    com.lowagie.text.pdf.PdfName STANDARD -> iL
    com.lowagie.text.pdf.PdfName STATE -> iM
    com.lowagie.text.pdf.PdfName STDCF -> iN
    com.lowagie.text.pdf.PdfName STEMV -> iO
    com.lowagie.text.pdf.PdfName STMF -> iP
    com.lowagie.text.pdf.PdfName STRF -> iQ
    com.lowagie.text.pdf.PdfName STRIKEOUT -> iR
    com.lowagie.text.pdf.PdfName STRUCTPARENT -> iS
    com.lowagie.text.pdf.PdfName STRUCTPARENTS -> iT
    com.lowagie.text.pdf.PdfName STRUCTTREEROOT -> iU
    com.lowagie.text.pdf.PdfName STYLE -> iV
    com.lowagie.text.pdf.PdfName SUBFILTER -> iW
    com.lowagie.text.pdf.PdfName SUBJECT -> iX
    com.lowagie.text.pdf.PdfName SUBMITFORM -> iY
    com.lowagie.text.pdf.PdfName SUBTYPE -> iZ
    com.lowagie.text.pdf.PdfName SUPPLEMENT -> ja
    com.lowagie.text.pdf.PdfName SV -> jb
    com.lowagie.text.pdf.PdfName SW -> jc
    com.lowagie.text.pdf.PdfName SYMBOL -> jd
    com.lowagie.text.pdf.PdfName T -> je
    com.lowagie.text.pdf.PdfName TA -> jf
    com.lowagie.text.pdf.PdfName TABLE -> jg
    com.lowagie.text.pdf.PdfName TABS -> jh
    com.lowagie.text.pdf.PdfName TBODY -> ji
    com.lowagie.text.pdf.PdfName TD -> jj
    com.lowagie.text.pdf.PdfName TEXT -> jk
    com.lowagie.text.pdf.PdfName TFOOT -> jl
    com.lowagie.text.pdf.PdfName TH -> jm
    com.lowagie.text.pdf.PdfName THEAD -> jn
    com.lowagie.text.pdf.PdfName THUMB -> jo
    com.lowagie.text.pdf.PdfName THREADS -> jp
    com.lowagie.text.pdf.PdfName TI -> jq
    com.lowagie.text.pdf.PdfName TIME -> jr
    com.lowagie.text.pdf.PdfName TILINGTYPE -> js
    com.lowagie.text.pdf.PdfName TIMES_ROMAN -> jt
    com.lowagie.text.pdf.PdfName TIMES_BOLD -> ju
    com.lowagie.text.pdf.PdfName TIMES_ITALIC -> jv
    com.lowagie.text.pdf.PdfName TIMES_BOLDITALIC -> jw
    com.lowagie.text.pdf.PdfName TITLE -> jx
    com.lowagie.text.pdf.PdfName TK -> jy
    com.lowagie.text.pdf.PdfName TM -> jz
    com.lowagie.text.pdf.PdfName TOC -> jA
    com.lowagie.text.pdf.PdfName TOCI -> jB
    com.lowagie.text.pdf.PdfName TOGGLE -> jC
    com.lowagie.text.pdf.PdfName TOOLBAR -> jD
    com.lowagie.text.pdf.PdfName TOUNICODE -> jE
    com.lowagie.text.pdf.PdfName TP -> jF
    com.lowagie.text.pdf.PdfName TABLEROW -> jG
    com.lowagie.text.pdf.PdfName TRANS -> jH
    com.lowagie.text.pdf.PdfName TRANSFORMPARAMS -> jI
    com.lowagie.text.pdf.PdfName TRANSFORMMETHOD -> jJ
    com.lowagie.text.pdf.PdfName TRANSPARENCY -> jK
    com.lowagie.text.pdf.PdfName TRANSPARENT -> jL
    com.lowagie.text.pdf.PdfName TRAPPED -> jM
    com.lowagie.text.pdf.PdfName TRIMBOX -> jN
    com.lowagie.text.pdf.PdfName TRUETYPE -> jO
    com.lowagie.text.pdf.PdfName TU -> jP
    com.lowagie.text.pdf.PdfName TWOCOLUMNLEFT -> jQ
    com.lowagie.text.pdf.PdfName TWOCOLUMNRIGHT -> jR
    com.lowagie.text.pdf.PdfName TWOPAGELEFT -> jS
    com.lowagie.text.pdf.PdfName TWOPAGERIGHT -> jT
    com.lowagie.text.pdf.PdfName TX -> jU
    com.lowagie.text.pdf.PdfName TYPE -> jV
    com.lowagie.text.pdf.PdfName TYPE0 -> jW
    com.lowagie.text.pdf.PdfName TYPE1 -> jX
    com.lowagie.text.pdf.PdfName TYPE3 -> jY
    com.lowagie.text.pdf.PdfName U -> jZ
    com.lowagie.text.pdf.PdfName UF -> ka
    com.lowagie.text.pdf.PdfName UHC -> kb
    com.lowagie.text.pdf.PdfName UNDERLINE -> kc
    com.lowagie.text.pdf.PdfName UR -> kd
    com.lowagie.text.pdf.PdfName UR3 -> ke
    com.lowagie.text.pdf.PdfName URI -> kf
    com.lowagie.text.pdf.PdfName URL -> kg
    com.lowagie.text.pdf.PdfName USAGE -> kh
    com.lowagie.text.pdf.PdfName USEATTACHMENTS -> ki
    com.lowagie.text.pdf.PdfName USENONE -> kj
    com.lowagie.text.pdf.PdfName USEOC -> kk
    com.lowagie.text.pdf.PdfName USEOUTLINES -> kl
    com.lowagie.text.pdf.PdfName USER -> km
    com.lowagie.text.pdf.PdfName USERPROPERTIES -> kn
    com.lowagie.text.pdf.PdfName USERUNIT -> ko
    com.lowagie.text.pdf.PdfName USETHUMBS -> kp
    com.lowagie.text.pdf.PdfName V -> kq
    com.lowagie.text.pdf.PdfName V2 -> kr
    com.lowagie.text.pdf.PdfName VALIGN -> ks
    com.lowagie.text.pdf.PdfName VERISIGN_PPKVS -> kt
    com.lowagie.text.pdf.PdfName VERSION -> ku
    com.lowagie.text.pdf.PdfName VIDEO -> kv
    com.lowagie.text.pdf.PdfName VIEW -> kw
    com.lowagie.text.pdf.PdfName VIEWS -> kx
    com.lowagie.text.pdf.PdfName VIEWAREA -> ky
    com.lowagie.text.pdf.PdfName VIEWCLIP -> kz
    com.lowagie.text.pdf.PdfName VIEWERPREFERENCES -> kA
    com.lowagie.text.pdf.PdfName VIEWSTATE -> kB
    com.lowagie.text.pdf.PdfName VISIBLEPAGES -> kC
    com.lowagie.text.pdf.PdfName VOFFSET -> kD
    com.lowagie.text.pdf.PdfName W -> kE
    com.lowagie.text.pdf.PdfName W2 -> kF
    com.lowagie.text.pdf.PdfName WARICHU -> kG
    com.lowagie.text.pdf.PdfName WC -> kH
    com.lowagie.text.pdf.PdfName WIDGET -> kI
    com.lowagie.text.pdf.PdfName WIDTH -> kJ
    com.lowagie.text.pdf.PdfName WIDTHS -> kK
    com.lowagie.text.pdf.PdfName WIN -> kL
    com.lowagie.text.pdf.PdfName WIN_ANSI_ENCODING -> kM
    com.lowagie.text.pdf.PdfName WINDOW -> kN
    com.lowagie.text.pdf.PdfName WINDOWED -> kO
    com.lowagie.text.pdf.PdfName WIPE -> kP
    com.lowagie.text.pdf.PdfName WHITEPOINT -> kQ
    com.lowagie.text.pdf.PdfName WP -> kR
    com.lowagie.text.pdf.PdfName WS -> kS
    com.lowagie.text.pdf.PdfName X -> kT
    com.lowagie.text.pdf.PdfName XA -> kU
    com.lowagie.text.pdf.PdfName XD -> kV
    com.lowagie.text.pdf.PdfName XFA -> kW
    com.lowagie.text.pdf.PdfName XML -> kX
    com.lowagie.text.pdf.PdfName XOBJECT -> kY
    com.lowagie.text.pdf.PdfName XSTEP -> kZ
    com.lowagie.text.pdf.PdfName XREF -> la
    com.lowagie.text.pdf.PdfName XREFSTM -> lb
    com.lowagie.text.pdf.PdfName XYZ -> lc
    com.lowagie.text.pdf.PdfName YSTEP -> ld
    com.lowagie.text.pdf.PdfName ZADB -> le
    com.lowagie.text.pdf.PdfName ZAPFDINGBATS -> lf
    com.lowagie.text.pdf.PdfName ZOOM -> lg
    java.util.Map staticNames -> lh
    int hash -> ll
    int compareTo(java.lang.Object) -> compareTo
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    byte[] encodeName(java.lang.String) -> a
    java.lang.String decodeName(java.lang.String) -> b
com.lowagie.text.pdf.PdfNameTree -> com.a.a.b.da:
    com.lowagie.text.pdf.PdfDictionary writeTree(java.util.HashMap,com.lowagie.text.pdf.PdfWriter) -> a
com.lowagie.text.pdf.PdfNull -> com.a.a.b.db:
    com.lowagie.text.pdf.PdfNull PDFNULL -> a
    java.lang.String toString() -> toString
com.lowagie.text.pdf.PdfNumber -> com.a.a.b.dc:
    double value -> a
    int intValue() -> a
    double doubleValue() -> b
com.lowagie.text.pdf.PdfNumberTree -> com.a.a.b.dd:
    com.lowagie.text.pdf.PdfDictionary writeTree(java.util.HashMap,com.lowagie.text.pdf.PdfWriter) -> a
com.lowagie.text.pdf.PdfOCG -> com.a.a.b.de:
    com.lowagie.text.pdf.PdfIndirectReference getRef() -> f
    com.lowagie.text.pdf.PdfObject getPdfObject() -> g
com.lowagie.text.pdf.PdfOCProperties -> com.a.a.b.df:
com.lowagie.text.pdf.PdfObject -> com.a.a.b.dg:
    byte[] bytes -> li
    int type -> lj
    com.lowagie.text.pdf.PRIndirectReference indRef -> lk
    void toPdf(com.lowagie.text.pdf.PdfWriter,java.io.OutputStream) -> a
    java.lang.String toString() -> toString
    byte[] getBytes() -> e
    boolean canBeInObjStm() -> o
    void setContent(java.lang.String) -> f
    int type() -> p
    boolean isNull() -> q
    boolean isNumber() -> r
    boolean isString() -> s
    boolean isName() -> t
    boolean isArray() -> u
    boolean isDictionary() -> v
    boolean isStream() -> w
    boolean isIndirect() -> x
    com.lowagie.text.pdf.PRIndirectReference getIndRef() -> y
    void setIndRef(com.lowagie.text.pdf.PRIndirectReference) -> a
com.lowagie.text.pdf.PdfOutline -> com.a.a.b.dh:
    com.lowagie.text.pdf.PdfIndirectReference reference -> c
    int count -> d
    com.lowagie.text.pdf.PdfOutline parent -> e
    com.lowagie.text.pdf.PdfDestination destination -> f
    com.lowagie.text.pdf.PdfAction action -> g
    java.util.ArrayList kids -> a
    com.lowagie.text.pdf.PdfWriter writer -> b
    boolean open -> h
    harmony.java.awt.Color color -> i
    int style -> j
    void initOutline(com.lowagie.text.pdf.PdfOutline,java.lang.String,boolean) -> a
    void setIndirectReference(com.lowagie.text.pdf.PdfIndirectReference) -> a
    com.lowagie.text.pdf.PdfIndirectReference indirectReference() -> b
    com.lowagie.text.pdf.PdfOutline parent() -> c
    boolean setDestinationPage(com.lowagie.text.pdf.PdfIndirectReference) -> b
    int getCount() -> d
    void setCount(int) -> a
    int level() -> f
    void toPdf(com.lowagie.text.pdf.PdfWriter,java.io.OutputStream) -> a
    void addKid(com.lowagie.text.pdf.PdfOutline) -> a
    java.util.ArrayList getKids() -> g
    boolean isOpen() -> h
com.lowagie.text.pdf.PdfPCell -> com.a.a.b.di:
    com.lowagie.text.pdf.ColumnText column -> b
    int verticalAlignment -> c
    float paddingLeft -> d
    float paddingRight -> e
    float paddingTop -> f
    float paddingBottom -> g
    float fixedHeight -> h
    float minimumHeight -> i
    boolean noWrap -> j
    com.lowagie.text.pdf.PdfPTable table -> k
    int colspan -> l
    int rowspan -> m
    com.lowagie.text.Image image -> n
    com.lowagie.text.pdf.PdfPCellEvent cellEvent -> o
    boolean useDescender -> p
    boolean useBorderPadding -> q
    com.lowagie.text.Phrase phrase -> a
    int rotation -> r
    void addElement(com.lowagie.text.Element) -> a
    void setPhrase(com.lowagie.text.Phrase) -> a
    int getHorizontalAlignment() -> c
    void setHorizontalAlignment(int) -> a
    int getVerticalAlignment() -> d
    void setVerticalAlignment(int) -> b
    float getEffectivePaddingLeft() -> f
    void setPaddingLeft(float) -> a
    float getEffectivePaddingRight() -> g
    void setPaddingRight(float) -> b
    float getEffectivePaddingTop() -> h
    void setPaddingTop(float) -> c
    float getEffectivePaddingBottom() -> i
    void setPaddingBottom(float) -> m
    void setPadding(float) -> n
    boolean isUseBorderPadding() -> j
    void setUseBorderPadding(boolean) -> a
    void setLeading(float,float) -> a
    void setFixedHeight(float) -> o
    float getFixedHeight() -> m
    boolean hasFixedHeight() -> n
    void setMinimumHeight(float) -> p
    float getMinimumHeight() -> o
    boolean isNoWrap() -> p
    void setNoWrap(boolean) -> b
    int getColspan() -> q
    void setColspan(int) -> c
    int getRowspan() -> r
    void setRowspan(int) -> d
    void setRunDirection(int) -> h
    int getRunDirection() -> s
    com.lowagie.text.Image getImage() -> t
    com.lowagie.text.pdf.PdfPCellEvent getCellEvent() -> u
    void setCellEvent(com.lowagie.text.pdf.PdfPCellEvent) -> a
    void setUseAscender(boolean) -> c
    boolean isUseDescender() -> z
    void setUseDescender(boolean) -> d
    com.lowagie.text.pdf.ColumnText getColumn() -> A
    void setColumn(com.lowagie.text.pdf.ColumnText) -> a
    int getRotation() -> V
    void consumeHeight(float) -> q
    float getMaxHeight() -> B
com.lowagie.text.pdf.PdfPCellEvent -> com.a.a.b.dj:
    void cellLayout(com.lowagie.text.pdf.PdfPCell,com.lowagie.text.Rectangle,com.lowagie.text.pdf.PdfContentByte[]) -> a
com.lowagie.text.pdf.PdfPRow -> com.a.a.b.dk:
    com.lowagie.text.pdf.PdfPCell[] cells -> a
    float[] widths -> b
    float[] extraHeights -> c
    float maxHeight -> d
    boolean calculated -> e
    int[] canvasesPos -> f
    boolean setWidths(float[]) -> a
    void initExtraHeights() -> a
    void setExtraHeight(int,float) -> a
    float calculateHeights() -> b
    void writeBorderAndBackground(float,float,float,com.lowagie.text.pdf.PdfPCell,com.lowagie.text.pdf.PdfContentByte[]) -> a
    void saveAndRotateCanvases(com.lowagie.text.pdf.PdfContentByte[],float,float,float,float,float,float) -> a
    void restoreCanvases(com.lowagie.text.pdf.PdfContentByte[]) -> a
    float setColumn(com.lowagie.text.pdf.ColumnText,float,float,float,float) -> a
    void writeCells(int,int,float,float,com.lowagie.text.pdf.PdfContentByte[]) -> a
    float getMaxHeights() -> c
    void setMaxHeights(float) -> a
    float[] getEventWidth(float) -> b
    com.lowagie.text.pdf.PdfPRow splitRow(com.lowagie.text.pdf.PdfPTable,int,float) -> a
    com.lowagie.text.pdf.PdfPCell[] getCells() -> d
com.lowagie.text.pdf.PdfPTable -> com.a.a.b.dl:
    java.util.ArrayList rows -> a
    float totalHeight -> b
    com.lowagie.text.pdf.PdfPCell[] currentRow -> c
    int currentRowIdx -> d
    com.lowagie.text.pdf.PdfPCell defaultCell -> e
    float totalWidth -> f
    float[] relativeWidths -> g
    float[] absoluteWidths -> h
    com.lowagie.text.pdf.PdfPTableEvent tableEvent -> i
    int headerRows -> j
    float widthPercentage -> k
    int horizontalAlignment -> r
    boolean skipFirstHeader -> s
    boolean skipLastFooter -> t
    boolean isColspan -> l
    int runDirection -> m
    boolean lockedWidth -> u
    boolean splitRows -> v
    float spacingBefore -> n
    float spacingAfter -> o
    boolean extendLastRow -> w
    boolean headersInEvent -> x
    boolean splitLate -> y
    boolean keepTogether -> z
    boolean complete -> p
    int footerRows -> A
    boolean rowCompleted -> q
    com.lowagie.text.pdf.PdfPTable shallowCopy(com.lowagie.text.pdf.PdfPTable) -> a
    void copyFormat(com.lowagie.text.pdf.PdfPTable) -> b
    void setWidths(float[]) -> a
    void calculateWidths() -> e
    void setTotalWidth(float) -> a
    float getTotalWidth() -> f
    float calculateHeights(boolean) -> a
    com.lowagie.text.pdf.PdfPCell getDefaultCell() -> g
    void addCell(com.lowagie.text.pdf.PdfPCell) -> a
    void skipColsWithRowspanAbove() -> E
    boolean rowSpanAbove(int,int) -> a
    float writeSelectedRows(int,int,float,float,com.lowagie.text.pdf.PdfContentByte[]) -> a
    float writeSelectedRows(int,int,int,int,float,float,com.lowagie.text.pdf.PdfContentByte[]) -> a
    float writeSelectedRows(int,int,float,float,com.lowagie.text.pdf.PdfContentByte) -> a
    float writeSelectedRows(int,int,int,int,float,float,com.lowagie.text.pdf.PdfContentByte) -> a
    com.lowagie.text.pdf.PdfContentByte[] beginWritingRows(com.lowagie.text.pdf.PdfContentByte) -> a
    void endWritingRows(com.lowagie.text.pdf.PdfContentByte[]) -> a
    int size() -> h
    float getTotalHeight() -> i
    float getRowHeight(int) -> a
    float getRowHeight(int,boolean) -> a
    float getRowspanHeight(int,int) -> b
    float getHeaderHeight() -> j
    float getFooterHeight() -> m
    void deleteBodyRows() -> n
    int getNumberOfColumns() -> o
    int getHeaderRows() -> p
    void setHeaderRows(int) -> b
    java.util.ArrayList getChunks() -> a
    int type() -> b
    boolean isContent() -> k
    boolean isNestable() -> l
    boolean process(com.lowagie.text.ElementListener) -> a
    float getWidthPercentage() -> q
    void setWidthPercentage(float) -> b
    int getHorizontalAlignment() -> r
    void setHorizontalAlignment(int) -> c
    com.lowagie.text.pdf.PdfPRow getRow(int) -> d
    java.util.ArrayList getRows() -> s
    java.util.ArrayList getRows(int,int) -> c
    com.lowagie.text.pdf.PdfPRow adjustCellsInRow(int,int) -> d
    void setTableEvent(com.lowagie.text.pdf.PdfPTableEvent) -> a
    float[][] getEventWidths(float,int,int,boolean) -> a
    boolean isSkipFirstHeader() -> t
    boolean isSkipLastFooter() -> u
    void setSkipFirstHeader(boolean) -> b
    boolean isLockedWidth() -> v
    void setLockedWidth(boolean) -> c
    boolean isSplitRows() -> w
    void setSpacingBefore(float) -> c
    void setSpacingAfter(float) -> d
    float spacingBefore() -> x
    float spacingAfter() -> y
    boolean isExtendLastRow() -> z
    void setExtendLastRow(boolean) -> d
    boolean isHeadersInEvent() -> A
    void setHeadersInEvent(boolean) -> e
    boolean isSplitLate() -> B
    void setSplitLate(boolean) -> f
    void setKeepTogether(boolean) -> g
    boolean getKeepTogether() -> C
    int getFooterRows() -> D
    void flushContent() -> d
    boolean isComplete() -> c
    void setComplete(boolean) -> h
com.lowagie.text.pdf.PdfPTableEvent -> com.a.a.b.dm:
    void tableLayout(com.lowagie.text.pdf.PdfPTable,float[][],float[],int,int,com.lowagie.text.pdf.PdfContentByte[]) -> a
com.lowagie.text.pdf.PdfPage -> com.a.a.b.dn:
    java.lang.String[] boxStrings -> f
    com.lowagie.text.pdf.PdfName[] boxNames -> g
    com.lowagie.text.pdf.PdfNumber PORTRAIT -> a
    com.lowagie.text.pdf.PdfNumber LANDSCAPE -> b
    com.lowagie.text.pdf.PdfNumber INVERTEDPORTRAIT -> c
    com.lowagie.text.pdf.PdfNumber SEASCAPE -> d
    com.lowagie.text.pdf.PdfRectangle mediaBox -> e
    void add(com.lowagie.text.pdf.PdfIndirectReference) -> a
com.lowagie.text.pdf.PdfPageEvent -> com.a.a.b.do:
    void onOpenDocument(com.lowagie.text.pdf.PdfWriter,com.lowagie.text.Document) -> a
    void onStartPage(com.lowagie.text.pdf.PdfWriter,com.lowagie.text.Document) -> b
    void onEndPage(com.lowagie.text.pdf.PdfWriter,com.lowagie.text.Document) -> c
    void onCloseDocument(com.lowagie.text.pdf.PdfWriter,com.lowagie.text.Document) -> d
    void onParagraph(com.lowagie.text.pdf.PdfWriter,com.lowagie.text.Document,float) -> a
    void onParagraphEnd(com.lowagie.text.pdf.PdfWriter,com.lowagie.text.Document,float) -> b
    void onChapter(com.lowagie.text.pdf.PdfWriter,com.lowagie.text.Document,float,com.lowagie.text.Paragraph) -> a
    void onChapterEnd(com.lowagie.text.pdf.PdfWriter,com.lowagie.text.Document,float) -> c
    void onSection(com.lowagie.text.pdf.PdfWriter,com.lowagie.text.Document,float,int,com.lowagie.text.Paragraph) -> a
    void onSectionEnd(com.lowagie.text.pdf.PdfWriter,com.lowagie.text.Document,float) -> d
    void onGenericTag(com.lowagie.text.pdf.PdfWriter,com.lowagie.text.Document,com.lowagie.text.Rectangle,java.lang.String) -> a
com.lowagie.text.pdf.PdfPageLabels -> com.a.a.b.dp:
    com.lowagie.text.pdf.PdfName[] numberingStyle -> a
    java.util.HashMap map -> b
    com.lowagie.text.pdf.PdfDictionary getDictionary(com.lowagie.text.pdf.PdfWriter) -> a
com.lowagie.text.pdf.PdfPages -> com.a.a.b.dq:
    java.util.ArrayList pages -> a
    java.util.ArrayList parents -> b
    int leafSize -> c
    com.lowagie.text.pdf.PdfWriter writer -> d
    com.lowagie.text.pdf.PdfIndirectReference topParent -> e
    void addPage(com.lowagie.text.pdf.PdfDictionary) -> a
    com.lowagie.text.pdf.PdfIndirectReference addPageRef(com.lowagie.text.pdf.PdfIndirectReference) -> a
    com.lowagie.text.pdf.PdfIndirectReference writePageTree() -> a
com.lowagie.text.pdf.PdfPattern -> com.a.a.b.dr:
com.lowagie.text.pdf.PdfPatternPainter -> com.a.a.b.ds:
    float xstep -> a
    float ystep -> i
    boolean stencil -> j
    harmony.java.awt.Color defaultColor -> k
    float getXStep() -> F
    float getYStep() -> G
    boolean isStencil() -> H
    com.lowagie.text.pdf.PdfPattern getPattern(int) -> e
    com.lowagie.text.pdf.PdfContentByte getDuplicate() -> a
    harmony.java.awt.Color getDefaultColor() -> I
    void setGrayFill(float) -> c
    void resetGrayFill() -> g
    void setGrayStroke(float) -> d
    void resetGrayStroke() -> h
    void resetRGBColorFill() -> i
    void resetRGBColorStroke() -> j
    void setCMYKColorFillF(float,float,float,float) -> a
    void setCMYKColorStrokeF(float,float,float,float) -> b
    void addImage(com.lowagie.text.Image,float,float,float,float,float,float) -> a
    void setRGBColorFill(int,int,int) -> a
    void setRGBColorStroke(int,int,int) -> b
    void setColorStroke(harmony.java.awt.Color) -> a
    void setColorFill(harmony.java.awt.Color) -> b
    void setColorFill(com.lowagie.text.pdf.PdfSpotColor,float) -> a
    void setColorStroke(com.lowagie.text.pdf.PdfSpotColor,float) -> b
    void setPatternFill(com.lowagie.text.pdf.PdfPatternPainter) -> a
    void setPatternFill(com.lowagie.text.pdf.PdfPatternPainter,harmony.java.awt.Color,float) -> a
    void setPatternStroke(com.lowagie.text.pdf.PdfPatternPainter,harmony.java.awt.Color,float) -> b
    void setPatternStroke(com.lowagie.text.pdf.PdfPatternPainter) -> b
    void checkNoColor() -> J
com.lowagie.text.pdf.PdfPublicKeyRecipient -> com.a.a.b.dt:
    java.security.cert.Certificate certificate -> b
    int permission -> c
    byte[] cms -> a
    java.security.cert.Certificate getCertificate() -> a
    int getPermission() -> b
    void setCms(byte[]) -> a
    byte[] getCms() -> c
com.lowagie.text.pdf.PdfPublicKeySecurityHandler -> com.a.a.b.du:
    java.util.ArrayList recipients -> a
    byte[] seed -> b
    byte[] getSeed() -> a
    int getRecipientsSize() -> b
    byte[] getEncodedRecipient(int) -> a
    com.lowagie.text.pdf.PdfArray getEncodedRecipients() -> c
    repack.org.bouncycastle.asn1.DERObject createDERForRecipient(byte[],java.security.cert.X509Certificate) -> a
    repack.org.bouncycastle.asn1.cms.KeyTransRecipientInfo computeRecipientInfo(java.security.cert.X509Certificate,byte[]) -> a
com.lowagie.text.pdf.PdfReader -> com.a.a.b.dv:
    com.lowagie.text.pdf.PdfName[] pageInhCandidates -> a
    byte[] endstream -> b
    byte[] endobj -> c
    com.lowagie.text.pdf.PRTokeniser tokens -> d
    int[] xref -> e
    com.lowagie.text.pdf.IntHashtable objStmToOffset -> f
    java.util.ArrayList xrefObj -> w
    com.lowagie.text.pdf.PdfDictionary rootPages -> g
    com.lowagie.text.pdf.PdfDictionary catalog -> h
    com.lowagie.text.pdf.PdfReader$PageRefs pageRefs -> i
    com.lowagie.text.pdf.PRAcroForm acroForm -> j
    boolean acroFormParsed -> k
    boolean encrypted -> l
    boolean rebuilt -> m
    boolean tampered -> n
    com.lowagie.text.pdf.PdfEncryption decrypt -> o
    byte[] password -> p
    java.security.Key certificateKey -> q
    java.security.cert.Certificate certificate -> r
    java.lang.String certificateKeyProvider -> s
    java.util.ArrayList strings -> t
    boolean sharedStreams -> u
    boolean consolidateNamedDestinations -> v
    int objNum -> x
    int objGen -> y
    int lastXrefPartial -> z
    boolean partial -> A
    com.lowagie.text.pdf.internal.PdfViewerPreferencesImp viewerPreferences -> B
    boolean appendable -> C
    int readDepth -> D
    com.lowagie.text.pdf.RandomAccessFileOrArray getSafeFile() -> a
    int getNumberOfPages() -> b
    com.lowagie.text.pdf.PdfObject getPdfObjectRelease(com.lowagie.text.pdf.PdfObject) -> a
    com.lowagie.text.pdf.PdfObject getPdfObject(com.lowagie.text.pdf.PdfObject) -> b
    com.lowagie.text.pdf.PdfObject getPdfObject(com.lowagie.text.pdf.PdfObject,com.lowagie.text.pdf.PdfObject) -> a
    com.lowagie.text.pdf.PdfObject getPdfObjectRelease(int) -> a
    com.lowagie.text.pdf.PdfObject getPdfObject(int) -> b
    void releaseLastXrefPartial() -> c
    void releaseLastXrefPartial(com.lowagie.text.pdf.PdfObject) -> c
    com.lowagie.text.pdf.PdfObject readSingleObject(int) -> c
    com.lowagie.text.pdf.PdfObject readOneObjStm(com.lowagie.text.pdf.PRStream,int) -> a
    void checkPRStreamLength(com.lowagie.text.pdf.PRStream) -> b
    com.lowagie.text.pdf.PdfDictionary readDictionary() -> d
    com.lowagie.text.pdf.PdfArray readArray() -> e
    com.lowagie.text.pdf.PdfObject readPRObject() -> f
    byte[] FlateDecode(byte[]) -> a
    byte[] decodePredictor(byte[],com.lowagie.text.pdf.PdfObject) -> a
    byte[] FlateDecode(byte[],boolean) -> a
    byte[] ASCIIHexDecode(byte[]) -> b
    byte[] ASCII85Decode(byte[]) -> c
    byte[] LZWDecode(byte[]) -> d
    com.lowagie.text.pdf.PdfDictionary getPageN(int) -> d
    com.lowagie.text.pdf.PdfDictionary getPageNRelease(int) -> e
    com.lowagie.text.pdf.PRIndirectReference getPageOrigRef(int) -> f
    byte[] getPageContent(int,com.lowagie.text.pdf.RandomAccessFileOrArray) -> a
    byte[] getStreamBytes(com.lowagie.text.pdf.PRStream,com.lowagie.text.pdf.RandomAccessFileOrArray) -> a
    byte[] getStreamBytesRaw(com.lowagie.text.pdf.PRStream,com.lowagie.text.pdf.RandomAccessFileOrArray) -> b
    byte[] getStreamBytesRaw(com.lowagie.text.pdf.PRStream) -> a
    com.lowagie.text.pdf.PdfEncryption getDecrypt() -> g
    boolean equalsn(byte[],byte[]) -> a
    void removeFields() -> h
    void close() -> i
    boolean isAppendable() -> j
    int access$1(com.lowagie.text.pdf.PdfReader) -> a
    void access$2(com.lowagie.text.pdf.PdfReader,int) -> a
com.lowagie.text.pdf.PdfReader$PageRefs -> com.a.a.b.dw:
    com.lowagie.text.pdf.PdfReader reader -> a
    com.lowagie.text.pdf.IntHashtable refsp -> b
    java.util.ArrayList refsn -> c
    int lastPageRead -> d
    int sizep -> e
    boolean keepPages -> f
    int size() -> a
    com.lowagie.text.pdf.PdfDictionary getPageN(int) -> a
    com.lowagie.text.pdf.PRIndirectReference getPageOrigRef(int) -> b
    void releasePage(int) -> c
    void resetReleasePage() -> b
    com.lowagie.text.pdf.PRIndirectReference getSinglePage(int) -> d
com.lowagie.text.pdf.PdfReaderInstance -> com.a.a.b.dx:
    com.lowagie.text.pdf.PdfLiteral IDENTITYMATRIX -> a
    com.lowagie.text.pdf.PdfNumber ONE -> b
    int[] myXref -> c
    com.lowagie.text.pdf.PdfReader reader -> d
    com.lowagie.text.pdf.RandomAccessFileOrArray file -> e
    java.util.HashMap importedPages -> f
    com.lowagie.text.pdf.PdfWriter writer -> g
    java.util.HashMap visited -> h
    java.util.ArrayList nextRound -> i
    com.lowagie.text.pdf.PdfReader getReader() -> a
    int getNewObjectNumber(int,int) -> a
    com.lowagie.text.pdf.PdfObject getResources(int) -> a
    com.lowagie.text.pdf.PdfStream getFormXObject(int,int) -> b
    void writeAllVisited() -> b
    void writeAllPages() -> c
com.lowagie.text.pdf.PdfRectangle -> com.a.a.b.dy:
    float llx -> b
    float lly -> c
    float urx -> d
    float ury -> e
    boolean add(com.lowagie.text.pdf.PdfObject) -> a
    boolean add(float[]) -> a
    boolean add(int[]) -> a
    void addFirst(com.lowagie.text.pdf.PdfObject) -> b
    float left() -> f
    float right() -> g
    float top() -> h
    float bottom() -> i
com.lowagie.text.pdf.PdfRendition -> com.a.a.b.dz:
com.lowagie.text.pdf.PdfResources -> com.a.a.b.ea:
    void add(com.lowagie.text.pdf.PdfName,com.lowagie.text.pdf.PdfDictionary) -> a
com.lowagie.text.pdf.PdfShading -> com.a.a.b.eb:
    com.lowagie.text.pdf.PdfDictionary shading -> a
    com.lowagie.text.pdf.PdfWriter writer -> b
    com.lowagie.text.pdf.ColorDetails colorDetails -> c
    com.lowagie.text.pdf.PdfName shadingName -> d
    com.lowagie.text.pdf.PdfIndirectReference shadingReference -> e
    harmony.java.awt.Color cspace -> h
    float[] bBox -> f
    boolean antiAlias -> g
    harmony.java.awt.Color getColorSpace() -> a
    com.lowagie.text.pdf.PdfIndirectReference getShadingReference() -> b
    void setName(int) -> a
    void addToBody() -> c
    com.lowagie.text.pdf.ColorDetails getColorDetails() -> d
com.lowagie.text.pdf.PdfShadingPattern -> com.a.a.b.ec:
    com.lowagie.text.pdf.PdfShading shading -> a
    com.lowagie.text.pdf.PdfWriter writer -> b
    float[] matrix -> c
    com.lowagie.text.pdf.PdfName patternName -> d
    com.lowagie.text.pdf.PdfIndirectReference patternReference -> e
    com.lowagie.text.pdf.PdfName getPatternName() -> b
    com.lowagie.text.pdf.PdfIndirectReference getPatternReference() -> c
    com.lowagie.text.pdf.PdfIndirectReference getShadingReference() -> d
    void setName(int) -> a
    void addToBody() -> f
    com.lowagie.text.pdf.PdfShading getShading() -> g
    com.lowagie.text.pdf.ColorDetails getColorDetails() -> h
com.lowagie.text.pdf.PdfSpotColor -> com.a.a.b.ed:
    com.lowagie.text.pdf.PdfName name -> a
    harmony.java.awt.Color altcs -> b
    harmony.java.awt.Color getAlternativeCS() -> a
    com.lowagie.text.pdf.PdfObject getSpotObject(com.lowagie.text.pdf.PdfWriter) -> a
com.lowagie.text.pdf.PdfStamperImp -> com.a.a.b.ee:
    java.util.HashMap readers2intrefs -> g
    com.lowagie.text.pdf.PdfReader reader -> h
    com.lowagie.text.pdf.IntHashtable myXref -> i
    boolean append -> j
    com.lowagie.text.pdf.IntHashtable marked -> k
    int initialXrefSize -> l
    int getNewObjectNumber(com.lowagie.text.pdf.PdfReader,int,int) -> a
    com.lowagie.text.pdf.PdfIndirectReference getPageReference(int) -> a
    void addAnnotation(com.lowagie.text.pdf.PdfAnnotation) -> a
    void markUsed(com.lowagie.text.pdf.PdfObject) -> a
    com.lowagie.text.pdf.PdfContentByte getDirectContentUnder() -> b_
    com.lowagie.text.pdf.PdfContentByte getDirectContent() -> a_
com.lowagie.text.pdf.PdfStream -> com.a.a.b.ef:
    boolean compressed -> g
    int compressionLevel -> h
    java.io.ByteArrayOutputStream streamBytes -> i
    java.io.InputStream inputStream -> j
    com.lowagie.text.pdf.PdfIndirectReference ref -> k
    int inputStreamLength -> l
    com.lowagie.text.pdf.PdfWriter writer -> m
    int rawLength -> n
    byte[] STARTSTREAM -> o
    byte[] ENDSTREAM -> p
    int SIZESTREAM -> q
    void writeLength() -> h
    int getRawLength() -> i
    void flateCompress(int) -> b
    void superToPdf(com.lowagie.text.pdf.PdfWriter,java.io.OutputStream) -> b
    void toPdf(com.lowagie.text.pdf.PdfWriter,java.io.OutputStream) -> a
    void writeContent(java.io.OutputStream) -> a
    java.lang.String toString() -> toString
com.lowagie.text.pdf.PdfString -> com.a.a.b.eg:
    java.lang.String value -> a
    java.lang.String originalValue -> b
    java.lang.String encoding -> c
    int objNum -> d
    int objGen -> e
    boolean hexWriting -> f
    void toPdf(com.lowagie.text.pdf.PdfWriter,java.io.OutputStream) -> a
    java.lang.String toString() -> toString
    byte[] getBytes() -> e
    void setObjNum(int,int) -> a
    void decrypt(com.lowagie.text.pdf.PdfReader) -> a
    com.lowagie.text.pdf.PdfString setHexWriting(boolean) -> a
com.lowagie.text.pdf.PdfStructureElement -> com.a.a.b.eh:
    com.lowagie.text.pdf.PdfIndirectReference reference -> a
    com.lowagie.text.pdf.PdfIndirectReference getReference() -> b
com.lowagie.text.pdf.PdfStructureTreeRoot -> com.a.a.b.ei:
    java.util.HashMap parentTree -> a
    com.lowagie.text.pdf.PdfIndirectReference reference -> b
    com.lowagie.text.pdf.PdfWriter writer -> c
    com.lowagie.text.pdf.PdfIndirectReference getReference() -> b
    void nodeProcess(com.lowagie.text.pdf.PdfDictionary,com.lowagie.text.pdf.PdfIndirectReference) -> a
    void buildTree() -> c
com.lowagie.text.pdf.PdfTable -> com.a.a.b.ej:
    int columns -> c
    java.util.ArrayList headercells -> d
    java.util.ArrayList cells -> e
    com.lowagie.text.Table table -> a
    float[] positions -> b
    void updateRowAdditionsInternal() -> m
    int rows() -> c
    int type() -> b
    java.util.ArrayList getHeaderCells() -> d
    java.util.ArrayList getCells() -> f
    int columns() -> g
    float cellpadding() -> h
    float cellspacing() -> i
    boolean hasToFitPageCells() -> j
com.lowagie.text.pdf.PdfTemplate -> com.a.a.b.ek:
    int type -> l
    com.lowagie.text.pdf.PdfIndirectReference thisReference -> m
    com.lowagie.text.pdf.PageResources pageResources -> n
    com.lowagie.text.Rectangle bBox -> o
    com.lowagie.text.pdf.PdfArray matrix -> p
    com.lowagie.text.pdf.PdfTransparencyGroup group -> q
    com.lowagie.text.pdf.PdfOCG layer -> r
    com.lowagie.text.pdf.PdfTemplate createTemplate(com.lowagie.text.pdf.PdfWriter,float,float) -> b
    com.lowagie.text.pdf.PdfTemplate createTemplate(com.lowagie.text.pdf.PdfWriter,float,float,com.lowagie.text.pdf.PdfName) -> b
    void setWidth(float) -> h
    void setHeight(float) -> i
    float getWidth() -> K
    float getHeight() -> L
    com.lowagie.text.Rectangle getBoundingBox() -> M
    com.lowagie.text.pdf.PdfOCG getLayer() -> N
    void setMatrix(float,float,float,float,float,float) -> f
    com.lowagie.text.pdf.PdfArray getMatrix() -> O
    com.lowagie.text.pdf.PdfIndirectReference getIndirectReference() -> P
    com.lowagie.text.pdf.PdfObject getResources() -> E
    com.lowagie.text.pdf.PdfStream getFormXObject(int) -> d
    com.lowagie.text.pdf.PdfContentByte getDuplicate() -> a
    int getType() -> Q
    com.lowagie.text.pdf.PageResources getPageResources() -> B
    com.lowagie.text.pdf.PdfTransparencyGroup getGroup() -> R
com.lowagie.text.pdf.PdfTextArray -> com.a.a.b.el:
    java.util.ArrayList arrayList -> a
    java.lang.String lastStr -> b
    java.lang.Float lastNum -> c
    void add(float) -> a
    void add(java.lang.String) -> a
    java.util.ArrayList getArrayList() -> a
    void replaceLast(java.lang.Object) -> a
com.lowagie.text.pdf.PdfTransition -> com.a.a.b.em:
    int duration -> a
    int type -> b
    com.lowagie.text.pdf.PdfDictionary getTransitionDictionary() -> a
com.lowagie.text.pdf.PdfTransparencyGroup -> com.a.a.b.en:
com.lowagie.text.pdf.PdfWriter -> com.a.a.b.eo:
    com.lowagie.text.pdf.PdfDocument pdf -> u
    com.lowagie.text.pdf.PdfContentByte directContent -> v
    com.lowagie.text.pdf.PdfContentByte directContentUnder -> w
    com.lowagie.text.pdf.PdfWriter$PdfBody body -> x
    com.lowagie.text.pdf.PdfDictionary extraCatalog -> y
    com.lowagie.text.pdf.PdfPages root -> z
    java.util.ArrayList pageReferences -> A
    int currentPageNumber -> B
    com.lowagie.text.pdf.PdfName tabs -> C
    com.lowagie.text.pdf.PdfPageEvent pageEvent -> g
    int prevxref -> D
    java.util.List newBookmarks -> E
    com.lowagie.text.pdf.PdfName PDF_VERSION_1_2 -> F
    com.lowagie.text.pdf.PdfName PDF_VERSION_1_3 -> G
    com.lowagie.text.pdf.PdfName PDF_VERSION_1_4 -> H
    com.lowagie.text.pdf.PdfName PDF_VERSION_1_5 -> I
    com.lowagie.text.pdf.PdfName PDF_VERSION_1_6 -> J
    com.lowagie.text.pdf.PdfName PDF_VERSION_1_7 -> K
    com.lowagie.text.pdf.internal.PdfVersionImp pdf_version -> L
    com.lowagie.text.pdf.PdfName DOCUMENT_CLOSE -> M
    com.lowagie.text.pdf.PdfName WILL_SAVE -> N
    com.lowagie.text.pdf.PdfName DID_SAVE -> O
    com.lowagie.text.pdf.PdfName WILL_PRINT -> P
    com.lowagie.text.pdf.PdfName DID_PRINT -> Q
    byte[] xmpMetadata -> R
    com.lowagie.text.pdf.internal.PdfXConformanceImp pdfxConformance -> h
    com.lowagie.text.pdf.PdfEncryption crypto -> S
    boolean fullCompression -> T
    int compressionLevel -> U
    java.util.LinkedHashMap documentFonts -> V
    int fontNumber -> W
    java.util.HashMap formXObjects -> X
    int formXObjectsCounter -> Y
    java.util.HashMap importedPages -> Z
    com.lowagie.text.pdf.PdfReaderInstance currentPdfReaderInstance -> aa
    java.util.HashMap documentColors -> ab
    int colorNumber -> ac
    java.util.HashMap documentPatterns -> ad
    int patternNumber -> ae
    java.util.HashMap documentShadingPatterns -> af
    java.util.HashMap documentShadings -> ag
    java.util.HashMap documentExtGState -> ah
    java.util.HashMap documentProperties -> ai
    boolean tagged -> aj
    com.lowagie.text.pdf.PdfStructureTreeRoot structureTreeRoot -> ak
    java.util.HashSet documentOCG -> al
    java.util.ArrayList documentOCGorder -> am
    com.lowagie.text.pdf.PdfOCProperties OCProperties -> an
    com.lowagie.text.pdf.PdfArray OCGRadioGroup -> ao
    com.lowagie.text.pdf.PdfArray OCGLocked -> ap
    com.lowagie.text.pdf.PdfName PAGE_OPEN -> aq
    com.lowagie.text.pdf.PdfName PAGE_CLOSE -> ar
    com.lowagie.text.pdf.PdfDictionary group -> as
    float spaceCharRatio -> i
    int runDirection -> at
    float userunit -> au
    com.lowagie.text.pdf.PdfDictionary defaultColorspace -> av
    java.util.HashMap documentSpotPatterns -> aw
    com.lowagie.text.pdf.ColorDetails patternColorspaceRGB -> ax
    com.lowagie.text.pdf.ColorDetails patternColorspaceGRAY -> ay
    com.lowagie.text.pdf.ColorDetails patternColorspaceCMYK -> az
    com.lowagie.text.pdf.PdfDictionary imageDictionary -> aA
    java.util.HashMap images -> j
    java.util.HashMap JBIG2Globals -> aB
    boolean userProperties -> k
    boolean rgbTransparencyBlending -> l
    com.lowagie.text.pdf.PdfWriter getInstance(com.lowagie.text.Document,java.io.OutputStream) -> a
    com.lowagie.text.pdf.PdfDocument getPdfDocument() -> h
    com.lowagie.text.pdf.PdfDictionary getInfo() -> i
    com.lowagie.text.pdf.PdfContentByte getDirectContent() -> a_
    com.lowagie.text.pdf.PdfContentByte getDirectContentUnder() -> b_
    void resetContent() -> j
    void addLocalDestinations(java.util.TreeMap) -> a
    com.lowagie.text.pdf.PdfIndirectObject addToBody(com.lowagie.text.pdf.PdfObject) -> b
    com.lowagie.text.pdf.PdfIndirectObject addToBody(com.lowagie.text.pdf.PdfObject,boolean) -> a
    com.lowagie.text.pdf.PdfIndirectObject addToBody(com.lowagie.text.pdf.PdfObject,com.lowagie.text.pdf.PdfIndirectReference) -> a
    com.lowagie.text.pdf.PdfIndirectObject addToBody(com.lowagie.text.pdf.PdfObject,com.lowagie.text.pdf.PdfIndirectReference,boolean) -> b
    com.lowagie.text.pdf.PdfIndirectObject addToBody(com.lowagie.text.pdf.PdfObject,int) -> a
    com.lowagie.text.pdf.PdfIndirectReference getPdfIndirectReference() -> k
    int getIndirectReferenceNumber() -> l
    com.lowagie.text.pdf.OutputStreamCounter getOs() -> m
    com.lowagie.text.pdf.PdfDictionary getCatalog(com.lowagie.text.pdf.PdfIndirectReference) -> a
    com.lowagie.text.pdf.PdfDictionary getExtraCatalog() -> n
    com.lowagie.text.pdf.PdfIndirectReference getPageReference(int) -> a
    com.lowagie.text.pdf.PdfIndirectReference getCurrentPage() -> o
    int getCurrentPageNumber() -> p
    com.lowagie.text.pdf.PdfName getTabs() -> q
    com.lowagie.text.pdf.PdfIndirectReference add(com.lowagie.text.pdf.PdfPage,com.lowagie.text.pdf.PdfContents) -> a
    com.lowagie.text.pdf.PdfPageEvent getPageEvent() -> r
    void open() -> a
    void close() -> b
    void addSharedObjectsToBody() -> s
    void writeOutlines(com.lowagie.text.pdf.PdfDictionary,boolean) -> a
    com.lowagie.text.pdf.internal.PdfVersionImp getPdfVersion() -> t
    void addAnnotation(com.lowagie.text.pdf.PdfAnnotation) -> a
    int getPDFXConformance() -> u
    boolean isPdfX() -> v
    com.lowagie.text.pdf.PdfEncryption getEncryption() -> w
    boolean isFullCompression() -> x
    int getCompressionLevel() -> y
    com.lowagie.text.pdf.FontDetails addSimple(com.lowagie.text.pdf.BaseFont) -> a
    void eliminateFontSubset(com.lowagie.text.pdf.PdfDictionary) -> a
    com.lowagie.text.pdf.PdfName addDirectTemplateSimple(com.lowagie.text.pdf.PdfTemplate,com.lowagie.text.pdf.PdfName) -> a
    int getNewObjectNumber(com.lowagie.text.pdf.PdfReader,int,int) -> a
    com.lowagie.text.pdf.PdfName getColorspaceName() -> z
    com.lowagie.text.pdf.ColorDetails addSimple(com.lowagie.text.pdf.PdfSpotColor) -> a
    com.lowagie.text.pdf.PdfName addSimplePattern(com.lowagie.text.pdf.PdfPatternPainter) -> a
    void addSimpleShadingPattern(com.lowagie.text.pdf.PdfShadingPattern) -> a
    void addSimpleShading(com.lowagie.text.pdf.PdfShading) -> a
    com.lowagie.text.pdf.PdfObject[] addSimpleProperty(java.lang.Object,com.lowagie.text.pdf.PdfIndirectReference) -> a
    boolean isTagged() -> A
    com.lowagie.text.pdf.PdfStructureTreeRoot getStructureTreeRoot() -> B
    void getOCGOrder(com.lowagie.text.pdf.PdfArray,com.lowagie.text.pdf.PdfLayer) -> a
    void addASEvent(com.lowagie.text.pdf.PdfName,com.lowagie.text.pdf.PdfName) -> a
    void fillOCProperties(boolean) -> a
    float getSpaceCharRatio() -> C
    float getUserunit() -> D
    com.lowagie.text.pdf.PdfDictionary getDefaultColorspace() -> E
    void setDefaultColorspace(com.lowagie.text.pdf.PdfName,com.lowagie.text.pdf.PdfObject) -> a
    com.lowagie.text.pdf.ColorDetails addSimplePatternColorspace(harmony.java.awt.Color) -> a
    com.lowagie.text.pdf.PdfName addDirectImageSimple(com.lowagie.text.Image) -> a
    com.lowagie.text.pdf.PdfName addDirectImageSimple(com.lowagie.text.Image,com.lowagie.text.pdf.PdfIndirectReference) -> a
    com.lowagie.text.pdf.PdfIndirectReference add(com.lowagie.text.pdf.PdfImage,com.lowagie.text.pdf.PdfIndirectReference) -> a
    com.lowagie.text.pdf.PdfIndirectReference getImageReference(com.lowagie.text.pdf.PdfName) -> a
    com.lowagie.text.pdf.PdfIndirectReference getReferenceJBIG2Globals(byte[]) -> a
    boolean isRgbTransparencyBlending() -> F
com.lowagie.text.pdf.PdfWriter$PdfBody -> com.a.a.b.ep:
    java.util.TreeSet xrefs -> a
    int refnum -> b
    int position -> c
    com.lowagie.text.pdf.PdfWriter writer -> d
    com.lowagie.text.pdf.ByteBuffer index -> e
    com.lowagie.text.pdf.ByteBuffer streamObjects -> f
    int currentObjNum -> g
    int numObj -> h
    com.lowagie.text.pdf.PdfWriter$PdfBody$PdfCrossReference addToObjStm(com.lowagie.text.pdf.PdfObject,int) -> b
    void flushObjStm() -> e
    com.lowagie.text.pdf.PdfIndirectObject add(com.lowagie.text.pdf.PdfObject) -> a
    com.lowagie.text.pdf.PdfIndirectObject add(com.lowagie.text.pdf.PdfObject,boolean) -> a
    com.lowagie.text.pdf.PdfIndirectReference getPdfIndirectReference() -> a
    int getIndirectReferenceNumber() -> b
    com.lowagie.text.pdf.PdfIndirectObject add(com.lowagie.text.pdf.PdfObject,com.lowagie.text.pdf.PdfIndirectReference) -> a
    com.lowagie.text.pdf.PdfIndirectObject add(com.lowagie.text.pdf.PdfObject,com.lowagie.text.pdf.PdfIndirectReference,boolean) -> a
    com.lowagie.text.pdf.PdfIndirectObject add(com.lowagie.text.pdf.PdfObject,int) -> a
    com.lowagie.text.pdf.PdfIndirectObject add(com.lowagie.text.pdf.PdfObject,int,boolean) -> a
    int offset() -> c
    int size() -> d
    void writeCrossReferenceTable(java.io.OutputStream,com.lowagie.text.pdf.PdfIndirectReference,com.lowagie.text.pdf.PdfIndirectReference,com.lowagie.text.pdf.PdfIndirectReference,com.lowagie.text.pdf.PdfObject,int) -> a
    void access$0(com.lowagie.text.pdf.PdfWriter$PdfBody) -> a
com.lowagie.text.pdf.PdfWriter$PdfBody$PdfCrossReference -> com.a.a.b.eq:
    int type -> a
    int offset -> b
    int refnum -> c
    int generation -> d
    int getRefnum() -> a
    void toPdf(java.io.OutputStream) -> a
    void toPdf(int,java.io.OutputStream) -> a
    int compareTo(java.lang.Object) -> compareTo
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.lowagie.text.pdf.PdfWriter$PdfTrailer -> com.a.a.b.er:
    int offset -> a
    void toPdf(com.lowagie.text.pdf.PdfWriter,java.io.OutputStream) -> a
com.lowagie.text.pdf.PdfXConformanceException -> com.a.a.b.es:
com.lowagie.text.pdf.Pfm2afm -> com.a.a.b.et:
    com.lowagie.text.pdf.RandomAccessFileOrArray in -> a
    java.io.PrintWriter out -> b
    short vers -> c
    int h_len -> d
    java.lang.String copyright -> e
    short type -> f
    short points -> g
    short verres -> h
    short horres -> i
    short ascent -> j
    short intleading -> k
    short extleading -> l
    byte italic -> m
    byte uline -> n
    byte overs -> o
    short weight -> p
    byte charset -> q
    short pixwidth -> r
    short pixheight -> s
    byte kind -> t
    short avgwidth -> u
    short maxwidth -> v
    int firstchar -> w
    int lastchar -> x
    byte defchar -> y
    byte brkchar -> z
    short widthby -> A
    int device -> B
    int face -> C
    int bits -> D
    int bitoff -> E
    short extlen -> F
    int psext -> G
    int chartab -> H
    int res1 -> I
    int kernpairs -> J
    int res2 -> K
    int fontname -> L
    short capheight -> M
    short xheight -> N
    short ascender -> O
    short descender -> P
    boolean isMono -> Q
    int[] Win2PSStd -> R
    int[] WinClass -> S
    java.lang.String[] WinChars -> T
    void convert(com.lowagie.text.pdf.RandomAccessFileOrArray,java.io.OutputStream) -> a
    java.lang.String readString(int) -> a
    java.lang.String readString() -> a
    void outval(int) -> b
    void outchar(int,int,java.lang.String) -> a
    void openpfm() -> b
    void putheader() -> c
    void putchartab() -> d
    void putkerntab() -> e
    void puttrailer() -> f
com.lowagie.text.pdf.RadioCheckField -> com.a.a.b.eu:
    java.lang.String[] typeChars -> q
    int checkType -> r
    java.lang.String onValue -> s
    boolean checked -> t
    void setCheckType(int) -> a
    void setOnValue(java.lang.String) -> b
    void setChecked(boolean) -> a
    com.lowagie.text.pdf.PdfAppearance getAppearance(boolean,boolean) -> a
    com.lowagie.text.pdf.PdfAppearance getAppearanceRadioCircle(boolean) -> b
    com.lowagie.text.pdf.PdfFormField getCheckField() -> c
    com.lowagie.text.pdf.PdfFormField getField(boolean) -> c
com.lowagie.text.pdf.RandomAccessFileOrArray -> com.a.a.b.ev:
    com.lowagie.text.pdf.MappedRandomAccessFile rf -> a
    java.io.RandomAccessFile trf -> b
    boolean plainRandomAccess -> c
    java.lang.String filename -> d
    byte[] arrayIn -> e
    int arrayInPtr -> f
    byte back -> g
    boolean isBack -> h
    int startOffset -> i
    byte[] InputStreamToArray(java.io.InputStream) -> a
    void pushBack(byte) -> a
    int read() -> a
    int read(byte[],int,int) -> a
    void readFully(byte[]) -> readFully
    void readFully(byte[],int,int) -> readFully
    int skipBytes(int) -> skipBytes
    void reOpen() -> b
    void insureOpen() -> c
    void close() -> d
    int length() -> e
    void seek(int) -> a
    int getFilePointer() -> f
    boolean readBoolean() -> readBoolean
    byte readByte() -> readByte
    int readUnsignedByte() -> readUnsignedByte
    short readShort() -> readShort
    short readShortLE() -> g
    int readUnsignedShort() -> readUnsignedShort
    int readUnsignedShortLE() -> h
    char readChar() -> readChar
    int readInt() -> readInt
    int readIntLE() -> i
    long readLong() -> readLong
    float readFloat() -> readFloat
    double readDouble() -> readDouble
    java.lang.String readLine() -> readLine
    java.lang.String readUTF() -> readUTF
com.lowagie.text.pdf.ShadingColor -> com.a.a.b.ew:
    com.lowagie.text.pdf.PdfShadingPattern shadingPattern -> a
    com.lowagie.text.pdf.PdfShadingPattern getPdfShadingPattern() -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.lowagie.text.pdf.SimpleBookmark -> com.a.a.b.ex:
    void createOutlineAction(com.lowagie.text.pdf.PdfDictionary,java.util.HashMap,com.lowagie.text.pdf.PdfWriter,boolean) -> a
    java.lang.Object[] iterateOutlines(com.lowagie.text.pdf.PdfWriter,com.lowagie.text.pdf.PdfIndirectReference,java.util.List,boolean) -> a
com.lowagie.text.pdf.SpotColor -> com.a.a.b.ey:
    com.lowagie.text.pdf.PdfSpotColor spot -> a
    float tint -> b
    com.lowagie.text.pdf.PdfSpotColor getPdfSpotColor() -> a
    float getTint() -> b
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.lowagie.text.pdf.StandardDecryption -> com.a.a.b.ez:
    com.lowagie.text.pdf.crypto.ARCFOUREncryption arcfour -> a
    com.lowagie.text.pdf.crypto.AESCipher cipher -> b
    byte[] key -> c
    boolean aes -> d
    boolean initiated -> e
    byte[] iv -> f
    int ivptr -> g
    byte[] update(byte[],int,int) -> a
    byte[] finish() -> a
com.lowagie.text.pdf.TrueTypeFont -> com.a.a.b.fa:
    java.lang.String[] codePages -> v
    boolean justNames -> w
    java.util.HashMap tables -> x
    com.lowagie.text.pdf.RandomAccessFileOrArray rf -> y
    java.lang.String fileName -> z
    boolean cff -> A
    int cffOffset -> B
    int cffLength -> C
    int directoryOffset -> D
    java.lang.String ttcIndex -> E
    java.lang.String style -> F
    com.lowagie.text.pdf.TrueTypeFont$FontHeader head -> G
    com.lowagie.text.pdf.TrueTypeFont$HorizontalHeader hhea -> H
    com.lowagie.text.pdf.TrueTypeFont$WindowsMetrics os_2 -> I
    int[] GlyphWidths -> J
    int[][] bboxes -> K
    java.util.HashMap cmap10 -> L
    java.util.HashMap cmap31 -> M
    java.util.HashMap cmapExt -> N
    com.lowagie.text.pdf.IntHashtable kerning -> O
    java.lang.String fontName -> P
    java.lang.String[][] fullName -> Q
    java.lang.String[][] allNameEntries -> R
    java.lang.String[][] familyName -> S
    double italicAngle -> T
    boolean isFixedPitch -> U
    int underlinePosition -> V
    int underlineThickness -> W
    java.lang.String getTTCName(java.lang.String) -> g
    void fillTables() -> j
    java.lang.String getBaseFont() -> k
    java.lang.String[][] getNames(int) -> g
    java.lang.String[][] getAllNames() -> l
    void checkCff() -> m
    void process(byte[],boolean) -> a
    java.lang.String readStandardString(int) -> h
    java.lang.String readUnicodeString(int) -> i
    void readGlyphWidths() -> n
    int getGlyphWidth(int) -> j
    void readBbox() -> w
    void readCMaps() -> o
    java.util.HashMap readFormat12() -> p
    java.util.HashMap readFormat0() -> q
    java.util.HashMap readFormat4() -> r
    java.util.HashMap readFormat6() -> s
    void readKerning() -> t
    int getRawWidth(int,java.lang.String) -> a
    com.lowagie.text.pdf.PdfDictionary getFontDescriptor(com.lowagie.text.pdf.PdfIndirectReference,java.lang.String,com.lowagie.text.pdf.PdfIndirectReference) -> a
    com.lowagie.text.pdf.PdfDictionary getFontBaseType(com.lowagie.text.pdf.PdfIndirectReference,java.lang.String,int,int,byte[]) -> a
    byte[] getFullFont() -> u
    int[] compactRanges(java.util.ArrayList) -> a
    void addRangeUni(java.util.HashMap,boolean,boolean) -> a
    void writeFont(com.lowagie.text.pdf.PdfWriter,com.lowagie.text.pdf.PdfIndirectReference,java.lang.Object[]) -> a
    byte[] readCffFont() -> v
    float getFontDescriptor(int,float) -> b
    int[] getMetricsTT(int) -> k
    java.lang.String getPostscriptFontName() -> g
    java.lang.String[][] getFamilyFontName() -> h
    int[] getRawCharBBox(int,java.lang.String) -> b
com.lowagie.text.pdf.TrueTypeFont$FontHeader -> com.a.a.b.fb:
    int flags -> a
    int unitsPerEm -> b
    short xMin -> c
    short yMin -> d
    short xMax -> e
    short yMax -> f
    int macStyle -> g
com.lowagie.text.pdf.TrueTypeFont$HorizontalHeader -> com.a.a.b.fc:
    short Ascender -> a
    short Descender -> b
    short LineGap -> c
    int advanceWidthMax -> d
    short minLeftSideBearing -> e
    short minRightSideBearing -> f
    short xMaxExtent -> g
    short caretSlopeRise -> h
    short caretSlopeRun -> i
    int numberOfHMetrics -> j
com.lowagie.text.pdf.TrueTypeFont$WindowsMetrics -> com.a.a.b.fd:
    short xAvgCharWidth -> a
    int usWeightClass -> b
    int usWidthClass -> c
    short fsType -> d
    short ySubscriptXSize -> e
    short ySubscriptYSize -> f
    short ySubscriptXOffset -> g
    short ySubscriptYOffset -> h
    short ySuperscriptXSize -> i
    short ySuperscriptYSize -> j
    short ySuperscriptXOffset -> k
    short ySuperscriptYOffset -> l
    short yStrikeoutSize -> m
    short yStrikeoutPosition -> n
    short sFamilyClass -> o
    byte[] panose -> p
    byte[] achVendID -> q
    int fsSelection -> r
    int usFirstCharIndex -> s
    int usLastCharIndex -> t
    short sTypoAscender -> u
    short sTypoDescender -> v
    short sTypoLineGap -> w
    int usWinAscent -> x
    int usWinDescent -> y
    int ulCodePageRange1 -> z
    int ulCodePageRange2 -> A
    int sCapHeight -> B
com.lowagie.text.pdf.TrueTypeFontSubSet -> com.a.a.b.fe:
    java.lang.String[] tableNamesSimple -> a
    java.lang.String[] tableNamesCmap -> b
    java.lang.String[] tableNamesExtra -> c
    int[] entrySelectors -> d
    java.util.HashMap tableDirectory -> e
    com.lowagie.text.pdf.RandomAccessFileOrArray rf -> f
    java.lang.String fileName -> g
    boolean includeCmap -> h
    boolean includeExtras -> i
    boolean locaShortTable -> j
    int[] locaTable -> k
    java.util.HashMap glyphsUsed -> l
    java.util.ArrayList glyphsInList -> m
    int tableGlyphOffset -> n
    int[] newLocaTable -> o
    byte[] newLocaTableOut -> p
    byte[] newGlyfTable -> q
    int glyfTableRealSize -> r
    int locaTableRealSize -> s
    byte[] outFont -> t
    int fontPtr -> u
    int directoryOffset -> v
    byte[] process() -> a
    void assembleFont() -> b
    void createTableDirectory() -> c
    void readLoca() -> d
    void createNewGlyphTables() -> e
    void locaTobytes() -> f
    void flatGlyphs() -> g
    void checkGlyphComposite(int) -> a
    java.lang.String readStandardString(int) -> b
    void writeFontShort(int) -> c
    void writeFontInt(int) -> d
    void writeFontString(java.lang.String) -> a
    int calculateChecksum(byte[]) -> a
com.lowagie.text.pdf.TrueTypeFontUnicode -> com.a.a.b.ff:
    boolean vertical -> X
    byte[] rotbits -> Y
    int getWidth(int) -> a
    int getWidth(java.lang.String) -> c
    com.lowagie.text.pdf.PdfStream getToUnicode(java.lang.Object[]) -> a
    java.lang.String toHex4(int) -> m
    java.lang.String toHex(int) -> l
    com.lowagie.text.pdf.PdfDictionary getCIDFontType2(com.lowagie.text.pdf.PdfIndirectReference,java.lang.String,java.lang.Object[]) -> a
    com.lowagie.text.pdf.PdfDictionary getFontBaseType(com.lowagie.text.pdf.PdfIndirectReference,java.lang.String,com.lowagie.text.pdf.PdfIndirectReference) -> b
    int compare(java.lang.Object,java.lang.Object) -> compare
    void writeFont(com.lowagie.text.pdf.PdfWriter,com.lowagie.text.pdf.PdfIndirectReference,java.lang.Object[]) -> a
    byte[] convertToBytes(java.lang.String) -> e
    byte[] convertToBytes(int) -> b
    int[] getMetricsTT(int) -> k
    int[] getCharBBox(int) -> f
com.lowagie.text.pdf.Type1Font -> com.a.a.b.fg:
    com.lowagie.text.pdf.fonts.FontsResourceAnchor resourceAnchor -> w
    byte[] pfb -> v
    java.lang.String FontName -> x
    java.lang.String FullName -> y
    java.lang.String FamilyName -> z
    java.lang.String Weight -> A
    float ItalicAngle -> B
    boolean IsFixedPitch -> C
    java.lang.String CharacterSet -> D
    int llx -> E
    int lly -> F
    int urx -> G
    int ury -> H
    int UnderlinePosition -> I
    int UnderlineThickness -> J
    java.lang.String EncodingScheme -> K
    int CapHeight -> L
    int XHeight -> M
    int Ascender -> N
    int Descender -> O
    int StdHW -> P
    int StdVW -> Q
    java.util.HashMap CharMetrics -> R
    java.util.HashMap KernPairs -> S
    java.lang.String fileName -> T
    boolean builtinFont -> U
    int[] PFB_TYPES -> V
    int getRawWidth(int,java.lang.String) -> a
    void process(com.lowagie.text.pdf.RandomAccessFileOrArray) -> a
    com.lowagie.text.pdf.PdfStream getFullFontStream() -> j
    com.lowagie.text.pdf.PdfDictionary getFontDescriptor(com.lowagie.text.pdf.PdfIndirectReference) -> a
    com.lowagie.text.pdf.PdfDictionary getFontBaseType(com.lowagie.text.pdf.PdfIndirectReference,int,int,byte[]) -> a
    void writeFont(com.lowagie.text.pdf.PdfWriter,com.lowagie.text.pdf.PdfIndirectReference,java.lang.Object[]) -> a
    float getFontDescriptor(int,float) -> b
    java.lang.String getPostscriptFontName() -> g
    java.lang.String[][] getFamilyFontName() -> h
    int[] getRawCharBBox(int,java.lang.String) -> b
com.lowagie.text.pdf.codec.BmpImage -> com.a.a.b.a.a:
    java.io.InputStream inputStream -> d
    long bitmapFileSize -> e
    long bitmapOffset -> f
    long compression -> g
    long imageSize -> h
    byte[] palette -> i
    int imageType -> j
    int numBands -> k
    boolean isBottomUp -> l
    int bitsPerPixel -> m
    int redMask -> n
    int greenMask -> o
    int blueMask -> p
    int alphaMask -> q
    java.util.HashMap properties -> a
    long xPelsPerMeter -> r
    long yPelsPerMeter -> s
    int width -> b
    int height -> c
    com.lowagie.text.Image getImage(java.io.InputStream,boolean,int) -> a
    void process(java.io.InputStream,boolean) -> a
    byte[] getPalette(int) -> a
    com.lowagie.text.Image getImage() -> a
    com.lowagie.text.Image indexedModel(byte[],int,int) -> a
    void readPalette(int) -> b
    com.lowagie.text.Image read1Bit(int) -> c
    com.lowagie.text.Image read4Bit(int) -> d
    com.lowagie.text.Image read8Bit(int) -> e
    void read24Bit(byte[]) -> a
    int findMask(int) -> f
    int findShift(int) -> g
    com.lowagie.text.Image read1632Bit(boolean) -> a
    com.lowagie.text.Image readRLE8() -> b
    com.lowagie.text.Image readRLE4() -> c
    byte[] decodeRLE(boolean,byte[]) -> a
    int readUnsignedByte(java.io.InputStream) -> a
    int readUnsignedShort(java.io.InputStream) -> b
    int readWord(java.io.InputStream) -> c
    long readUnsignedInt(java.io.InputStream) -> d
    int readInt(java.io.InputStream) -> e
    long readDWord(java.io.InputStream) -> f
    int readLong(java.io.InputStream) -> g
com.lowagie.text.pdf.codec.wmf.InputMeta -> com.a.a.b.a.a.a:
    java.io.InputStream in -> a
    int length -> b
    int readWord() -> a
    int readShort() -> b
    int readInt() -> c
    int readByte() -> d
    void skip(int) -> a
    int getLength() -> e
    harmony.java.awt.Color readColor() -> f
com.lowagie.text.pdf.codec.wmf.MetaBrush -> com.a.a.b.a.a.b:
    int style -> a
    int hatch -> b
    harmony.java.awt.Color color -> c
    void init(com.lowagie.text.pdf.codec.wmf.InputMeta) -> a
    int getStyle() -> a
    harmony.java.awt.Color getColor() -> b
com.lowagie.text.pdf.codec.wmf.MetaDo -> com.a.a.b.a.a.c:
    com.lowagie.text.pdf.PdfContentByte cb -> a
    com.lowagie.text.pdf.codec.wmf.InputMeta in -> b
    int left -> c
    int top -> d
    int right -> e
    int bottom -> f
    int inch -> g
    com.lowagie.text.pdf.codec.wmf.MetaState state -> h
    void readAll() -> a
    void outputText(int,int,int,int,int,int,int,java.lang.String) -> a
    boolean isNullStrokeFill(boolean) -> a
    void strokeAndFill() -> b
    float getArc(float,float,float,float) -> a
com.lowagie.text.pdf.codec.wmf.MetaFont -> com.a.a.b.a.a.d:
    java.lang.String[] fontNames -> a
    int height -> b
    float angle -> c
    int bold -> d
    int italic -> e
    boolean underline -> f
    boolean strikeout -> g
    int charset -> h
    int pitchAndFamily -> i
    java.lang.String faceName -> j
    com.lowagie.text.pdf.BaseFont font -> k
    void init(com.lowagie.text.pdf.codec.wmf.InputMeta) -> a
    com.lowagie.text.pdf.BaseFont getFont() -> a
    float getAngle() -> b
    boolean isUnderline() -> c
    boolean isStrikeout() -> d
    float getFontSize(com.lowagie.text.pdf.codec.wmf.MetaState) -> a
com.lowagie.text.pdf.codec.wmf.MetaObject -> com.a.a.b.a.a.e:
    int type -> l
    int getType() -> e
com.lowagie.text.pdf.codec.wmf.MetaPen -> com.a.a.b.a.a.f:
    int style -> a
    int penWidth -> b
    harmony.java.awt.Color color -> c
    void init(com.lowagie.text.pdf.codec.wmf.InputMeta) -> a
    int getStyle() -> a
    int getPenWidth() -> b
    harmony.java.awt.Color getColor() -> c
com.lowagie.text.pdf.codec.wmf.MetaState -> com.a.a.b.a.a.g:
    java.util.Stack savedStates -> a
    java.util.ArrayList MetaObjects -> b
    harmony.java.awt.Point currentPoint -> c
    com.lowagie.text.pdf.codec.wmf.MetaPen currentPen -> d
    com.lowagie.text.pdf.codec.wmf.MetaBrush currentBrush -> e
    com.lowagie.text.pdf.codec.wmf.MetaFont currentFont -> f
    harmony.java.awt.Color currentBackgroundColor -> g
    harmony.java.awt.Color currentTextColor -> h
    int backgroundMode -> i
    int polyFillMode -> j
    int lineJoin -> k
    int textAlign -> l
    int offsetWx -> m
    int offsetWy -> n
    int extentWx -> o
    int extentWy -> p
    float scalingX -> q
    float scalingY -> r
    void setMetaState(com.lowagie.text.pdf.codec.wmf.MetaState) -> a
    void addMetaObject(com.lowagie.text.pdf.codec.wmf.MetaObject) -> a
    void selectMetaObject(int,com.lowagie.text.pdf.PdfContentByte) -> a
    void deleteMetaObject(int) -> a
    void saveState(com.lowagie.text.pdf.PdfContentByte) -> a
    void restoreState(int,com.lowagie.text.pdf.PdfContentByte) -> b
    void cleanup(com.lowagie.text.pdf.PdfContentByte) -> b
    float transformX(int) -> b
    float transformY(int) -> c
    void setScalingX(float) -> a
    void setScalingY(float) -> b
    void setOffsetWx(int) -> d
    void setOffsetWy(int) -> e
    void setExtentWx(int) -> f
    void setExtentWy(int) -> g
    float transformAngle(float) -> c
    void setCurrentPoint(harmony.java.awt.Point) -> a
    harmony.java.awt.Point getCurrentPoint() -> a
    com.lowagie.text.pdf.codec.wmf.MetaBrush getCurrentBrush() -> b
    com.lowagie.text.pdf.codec.wmf.MetaPen getCurrentPen() -> c
    com.lowagie.text.pdf.codec.wmf.MetaFont getCurrentFont() -> d
    harmony.java.awt.Color getCurrentBackgroundColor() -> e
    void setCurrentBackgroundColor(harmony.java.awt.Color) -> a
    harmony.java.awt.Color getCurrentTextColor() -> f
    void setCurrentTextColor(harmony.java.awt.Color) -> b
    int getBackgroundMode() -> g
    void setBackgroundMode(int) -> h
    int getTextAlign() -> h
    void setTextAlign(int) -> i
    int getPolyFillMode() -> i
    void setPolyFillMode(int) -> j
    void setLineJoinRectangle(com.lowagie.text.pdf.PdfContentByte) -> c
    void setLineJoinPolygon(com.lowagie.text.pdf.PdfContentByte) -> d
    boolean getLineNeutral() -> j
com.lowagie.text.pdf.collection.PdfCollection -> com.a.a.b.b.a:
com.lowagie.text.pdf.crypto.AESCipher -> com.a.a.b.c.a:
    repack.org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher bp -> a
    byte[] update(byte[],int,int) -> a
    byte[] doFinal() -> a
com.lowagie.text.pdf.crypto.ARCFOUREncryption -> com.a.a.b.c.b:
    byte[] state -> a
    int x -> b
    int y -> c
    void prepareARCFOURKey(byte[]) -> a
    void prepareARCFOURKey(byte[],int,int) -> a
    void encryptARCFOUR(byte[],int,int,byte[],int) -> a
    void encryptARCFOUR(byte[]) -> b
com.lowagie.text.pdf.crypto.IVGenerator -> com.a.a.b.c.c:
    com.lowagie.text.pdf.crypto.ARCFOUREncryption arcfour -> a
    byte[] getIV() -> a
    byte[] getIV(int) -> a
com.lowagie.text.pdf.draw.DrawInterface -> com.a.a.b.d.a:
    void draw(com.lowagie.text.pdf.PdfContentByte,float,float,float,float,float) -> a
com.lowagie.text.pdf.events.PdfPCellEventForwarder -> com.a.a.b.e.a:
    java.util.ArrayList events -> a
    void addCellEvent(com.lowagie.text.pdf.PdfPCellEvent) -> a
    void cellLayout(com.lowagie.text.pdf.PdfPCell,com.lowagie.text.Rectangle,com.lowagie.text.pdf.PdfContentByte[]) -> a
com.lowagie.text.pdf.events.PdfPTableEventForwarder -> com.a.a.b.e.b:
    java.util.ArrayList events -> a
    void addTableEvent(com.lowagie.text.pdf.PdfPTableEvent) -> a
    void tableLayout(com.lowagie.text.pdf.PdfPTable,float[][],float[],int,int,com.lowagie.text.pdf.PdfContentByte[]) -> a
com.lowagie.text.pdf.fonts.FontsResourceAnchor -> com.a.a.b.f.a:
com.lowagie.text.pdf.internal.PdfAnnotationsImp -> com.a.a.b.g.a:
    com.lowagie.text.pdf.PdfAcroForm acroForm -> a
    java.util.ArrayList annotations -> b
    java.util.ArrayList delayedAnnotations -> c
    boolean hasValidAcroForm() -> a
    com.lowagie.text.pdf.PdfAcroForm getAcroForm() -> b
    void addAnnotation(com.lowagie.text.pdf.PdfAnnotation) -> a
    void addPlainAnnotation(com.lowagie.text.pdf.PdfAnnotation) -> b
    void addFormFieldRaw(com.lowagie.text.pdf.PdfFormField) -> a
    boolean hasUnusedAnnotations() -> c
    void resetAnnotations() -> d
    com.lowagie.text.pdf.PdfArray rotateAnnotations(com.lowagie.text.pdf.PdfWriter,com.lowagie.text.Rectangle) -> a
    com.lowagie.text.pdf.PdfAnnotation convertAnnotation(com.lowagie.text.pdf.PdfWriter,com.lowagie.text.Annotation,com.lowagie.text.Rectangle) -> a
com.lowagie.text.pdf.internal.PdfVersionImp -> com.a.a.b.g.b:
    byte[][] HEADER -> a
    boolean headerWasWritten -> b
    boolean appendmode -> c
    char header_version -> d
    com.lowagie.text.pdf.PdfName catalog_version -> e
    com.lowagie.text.pdf.PdfDictionary extensions -> f
    void writeHeader(com.lowagie.text.pdf.OutputStreamCounter) -> a
    com.lowagie.text.pdf.PdfName getVersionAsName(char) -> a
    byte[] getVersionAsByteArray(char) -> b
    void addToCatalog(com.lowagie.text.pdf.PdfDictionary) -> a
com.lowagie.text.pdf.internal.PdfViewerPreferencesImp -> com.a.a.b.g.c:
    com.lowagie.text.pdf.PdfName[] VIEWER_PREFERENCES -> a
    com.lowagie.text.pdf.PdfName[] NONFULLSCREENPAGEMODE_PREFERENCES -> b
    com.lowagie.text.pdf.PdfName[] DIRECTION_PREFERENCES -> c
    com.lowagie.text.pdf.PdfName[] PAGE_BOUNDARIES -> d
    com.lowagie.text.pdf.PdfName[] PRINTSCALING_PREFERENCES -> e
    com.lowagie.text.pdf.PdfName[] DUPLEX_PREFERENCES -> f
    int pageLayoutAndMode -> g
    com.lowagie.text.pdf.PdfDictionary viewerPreferences -> h
    void addToCatalog(com.lowagie.text.pdf.PdfDictionary) -> a
com.lowagie.text.pdf.internal.PdfXConformanceImp -> com.a.a.b.g.d:
    int pdfxConformance -> a
    int getPDFXConformance() -> a
    boolean isPdfX() -> b
    boolean isPdfX1A2001() -> c
    boolean isPdfX32002() -> d
    boolean isPdfA1() -> e
    void completeInfoDictionary(com.lowagie.text.pdf.PdfDictionary) -> a
    void completeExtraCatalog(com.lowagie.text.pdf.PdfDictionary) -> b
    void checkPDFXConformance(com.lowagie.text.pdf.PdfWriter,int,java.lang.Object) -> a
harmony.java.awt.Color -> a.a.a.a:
    harmony.java.awt.Color white -> f
    harmony.java.awt.Color WHITE -> g
    harmony.java.awt.Color lightGray -> h
    harmony.java.awt.Color LIGHT_GRAY -> i
    harmony.java.awt.Color gray -> j
    harmony.java.awt.Color GRAY -> k
    harmony.java.awt.Color darkGray -> l
    harmony.java.awt.Color DARK_GRAY -> m
    harmony.java.awt.Color black -> n
    harmony.java.awt.Color BLACK -> o
    harmony.java.awt.Color red -> p
    harmony.java.awt.Color RED -> q
    harmony.java.awt.Color pink -> r
    harmony.java.awt.Color PINK -> s
    harmony.java.awt.Color orange -> t
    harmony.java.awt.Color ORANGE -> u
    harmony.java.awt.Color yellow -> v
    harmony.java.awt.Color YELLOW -> w
    harmony.java.awt.Color green -> x
    harmony.java.awt.Color GREEN -> y
    harmony.java.awt.Color magenta -> z
    harmony.java.awt.Color MAGENTA -> A
    harmony.java.awt.Color cyan -> B
    harmony.java.awt.Color CYAN -> C
    harmony.java.awt.Color blue -> D
    harmony.java.awt.Color BLUE -> E
    int value -> F
    float[] frgbvalue -> a
    float[] fvalue -> b
    float falpha -> c
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    harmony.java.awt.Color darker() -> f
    int hashCode() -> hashCode
    int getRed() -> g
    int getGreen() -> h
    int getBlue() -> i
harmony.java.awt.Dimension -> a.a.a.b:
    int width -> a
    int height -> b
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    void setSize(int,int) -> a
harmony.java.awt.Point -> a.a.a.c:
    int x -> a
    int y -> b
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    double getX() -> a
    double getY() -> b
    void setLocation(int,int) -> a
harmony.java.awt.geom.Dimension2D -> a.a.a.a.a:
    java.lang.Object clone() -> clone
harmony.java.awt.geom.Point2D -> a.a.a.a.b:
    double getX() -> a
    double getY() -> b
    java.lang.Object clone() -> clone
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
org.apache.harmony.awt.internal.nls.Messages -> b.a.a.a.a.a.a:
    java.util.ResourceBundle bundle -> a
    java.lang.String getString(java.lang.String) -> a
    java.util.ResourceBundle setLocale(java.util.Locale,java.lang.String) -> a
org.apache.harmony.misc.HashCode -> b.a.a.b.a:
    int hashCode -> a
    int hashCode() -> hashCode
    int combine(int,long) -> a
    int combine(int,double) -> a
    int combine(int,int) -> a
    org.apache.harmony.misc.HashCode append(int) -> a
    org.apache.harmony.misc.HashCode append(double) -> a
repack.org.bouncycastle.asn1.ASN1ApplicationSpecificParser -> c.a.a.a.a:
repack.org.bouncycastle.asn1.ASN1Boolean -> c.a.a.a.b:
repack.org.bouncycastle.asn1.ASN1Choice -> c.a.a.a.c:
repack.org.bouncycastle.asn1.ASN1Encodable -> c.a.a.a.d:
    byte[] getEncoded() -> a
    byte[] getEncoded(java.lang.String) -> a
    byte[] getDEREncoded() -> b
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    repack.org.bouncycastle.asn1.DERObject getDERObject() -> c
    repack.org.bouncycastle.asn1.DERObject toASN1Object() -> d
repack.org.bouncycastle.asn1.ASN1EncodableVector -> c.a.a.a.e:
    java.util.Vector v -> a
    void add(repack.org.bouncycastle.asn1.DEREncodable) -> a
    repack.org.bouncycastle.asn1.DEREncodable get(int) -> a
    int size() -> a
repack.org.bouncycastle.asn1.ASN1Enumerated -> c.a.a.a.f:
repack.org.bouncycastle.asn1.ASN1Exception -> c.a.a.a.g:
    java.lang.Throwable cause -> a
    java.lang.Throwable getCause() -> getCause
repack.org.bouncycastle.asn1.ASN1GeneralizedTime -> c.a.a.a.h:
repack.org.bouncycastle.asn1.ASN1InputStream -> c.a.a.a.i:
    int limit -> a
    boolean lazyEvaluate -> b
    int findLimit(java.io.InputStream) -> a
    int readLength() -> a
    repack.org.bouncycastle.asn1.DERObject buildObject(int,int,int) -> a
    repack.org.bouncycastle.asn1.ASN1EncodableVector buildEncodableVector() -> b
    repack.org.bouncycastle.asn1.ASN1EncodableVector buildDEREncodableVector(repack.org.bouncycastle.asn1.DefiniteLengthInputStream) -> a
    repack.org.bouncycastle.asn1.DERObject readObject() -> c
    int readTagNumber(java.io.InputStream,int) -> a
    int readLength(java.io.InputStream,int) -> b
    repack.org.bouncycastle.asn1.DERObject createPrimitiveDERObject(int,byte[]) -> a
repack.org.bouncycastle.asn1.ASN1Integer -> c.a.a.a.j:
repack.org.bouncycastle.asn1.ASN1Null -> c.a.a.a.k:
    int hashCode() -> hashCode
    boolean asn1Equals(repack.org.bouncycastle.asn1.DERObject) -> a
    java.lang.String toString() -> toString
repack.org.bouncycastle.asn1.ASN1Object -> c.a.a.a.l:
    repack.org.bouncycastle.asn1.ASN1Object fromByteArray(byte[]) -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean asn1Equals(repack.org.bouncycastle.asn1.DERObject) -> a
repack.org.bouncycastle.asn1.ASN1ObjectIdentifier -> c.a.a.a.m:
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier branch(java.lang.String) -> b
repack.org.bouncycastle.asn1.ASN1OctetString -> c.a.a.a.n:
    byte[] string -> a
    repack.org.bouncycastle.asn1.ASN1OctetString getInstance(repack.org.bouncycastle.asn1.ASN1TaggedObject,boolean) -> a
    repack.org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object) -> a
    java.io.InputStream getOctetStream() -> e
    byte[] getOctets() -> f
    int hashCode() -> hashCode
    boolean asn1Equals(repack.org.bouncycastle.asn1.DERObject) -> a
    repack.org.bouncycastle.asn1.DERObject getLoadedObject() -> g
    java.lang.String toString() -> toString
repack.org.bouncycastle.asn1.ASN1OctetStringParser -> c.a.a.a.o:
    java.io.InputStream getOctetStream() -> e
repack.org.bouncycastle.asn1.ASN1OutputStream -> c.a.a.a.p:
    void writeObject(java.lang.Object) -> a
repack.org.bouncycastle.asn1.ASN1ParsingException -> c.a.a.a.q:
    java.lang.Throwable cause -> a
    java.lang.Throwable getCause() -> getCause
repack.org.bouncycastle.asn1.ASN1Sequence -> c.a.a.a.r:
    java.util.Vector seq -> a
    repack.org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object) -> a
    repack.org.bouncycastle.asn1.ASN1Sequence getInstance(repack.org.bouncycastle.asn1.ASN1TaggedObject,boolean) -> a
    java.util.Enumeration getObjects() -> e
    repack.org.bouncycastle.asn1.DEREncodable getObjectAt(int) -> a
    int size() -> f
    int hashCode() -> hashCode
    boolean asn1Equals(repack.org.bouncycastle.asn1.DERObject) -> a
    repack.org.bouncycastle.asn1.DEREncodable getNext(java.util.Enumeration) -> a
    void addObject(repack.org.bouncycastle.asn1.DEREncodable) -> a
    java.lang.String toString() -> toString
repack.org.bouncycastle.asn1.ASN1SequenceParser -> c.a.a.a.s:
repack.org.bouncycastle.asn1.ASN1Set -> c.a.a.a.t:
    java.util.Vector set -> a
    repack.org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object) -> a
    java.util.Enumeration getObjects() -> e
    repack.org.bouncycastle.asn1.DEREncodable getObjectAt(int) -> a
    int size() -> f
    int hashCode() -> hashCode
    boolean asn1Equals(repack.org.bouncycastle.asn1.DERObject) -> a
    repack.org.bouncycastle.asn1.DEREncodable getNext(java.util.Enumeration) -> a
    boolean lessThanOrEqual(byte[],byte[]) -> a
    byte[] getEncoded(repack.org.bouncycastle.asn1.DEREncodable) -> b
    void sort() -> g
    void addObject(repack.org.bouncycastle.asn1.DEREncodable) -> a
    java.lang.String toString() -> toString
repack.org.bouncycastle.asn1.ASN1SetParser -> c.a.a.a.u:
repack.org.bouncycastle.asn1.ASN1StreamParser -> c.a.a.a.v:
    java.io.InputStream _in -> a
    int _limit -> b
    repack.org.bouncycastle.asn1.DEREncodable readIndef(int) -> a
    repack.org.bouncycastle.asn1.DERObject readTaggedObject(boolean,int) -> a
    repack.org.bouncycastle.asn1.DEREncodable readObject() -> a
    void set00Check(boolean) -> a
    repack.org.bouncycastle.asn1.ASN1EncodableVector readVector() -> b
repack.org.bouncycastle.asn1.ASN1String -> c.a.a.a.w:
    java.lang.String getString() -> c_
repack.org.bouncycastle.asn1.ASN1TaggedObject -> c.a.a.a.x:
    int tagNo -> a
    boolean empty -> b
    boolean explicit -> c
    repack.org.bouncycastle.asn1.DEREncodable obj -> d
    boolean asn1Equals(repack.org.bouncycastle.asn1.DERObject) -> a
    int hashCode() -> hashCode
    int getTagNo() -> e
    boolean isExplicit() -> f
    repack.org.bouncycastle.asn1.DERObject getObject() -> h
    repack.org.bouncycastle.asn1.DERObject getLoadedObject() -> g
    java.lang.String toString() -> toString
repack.org.bouncycastle.asn1.ASN1TaggedObjectParser -> c.a.a.a.y:
repack.org.bouncycastle.asn1.ASN1UTCTime -> c.a.a.a.z:
repack.org.bouncycastle.asn1.BERApplicationSpecific -> c.a.a.a.aa:
repack.org.bouncycastle.asn1.BERApplicationSpecificParser -> c.a.a.a.ab:
    int tag -> a
    repack.org.bouncycastle.asn1.ASN1StreamParser parser -> b
    repack.org.bouncycastle.asn1.DERObject getLoadedObject() -> g
    repack.org.bouncycastle.asn1.DERObject getDERObject() -> c
repack.org.bouncycastle.asn1.BERConstructedOctetString -> c.a.a.a.ac:
    java.util.Vector octs -> b
    byte[] toBytes(java.util.Vector) -> a
    byte[] getOctets() -> f
    java.util.Enumeration getObjects() -> h
    java.util.Vector generateOcts() -> i
    void encode(repack.org.bouncycastle.asn1.DEROutputStream) -> a
    repack.org.bouncycastle.asn1.BERConstructedOctetString fromSequence(repack.org.bouncycastle.asn1.ASN1Sequence) -> a
repack.org.bouncycastle.asn1.BERFactory -> c.a.a.a.ad:
    repack.org.bouncycastle.asn1.BERSequence EMPTY_SEQUENCE -> a
    repack.org.bouncycastle.asn1.BERSet EMPTY_SET -> b
    repack.org.bouncycastle.asn1.BERSequence createSequence(repack.org.bouncycastle.asn1.ASN1EncodableVector) -> a
repack.org.bouncycastle.asn1.BEROctetStringParser -> c.a.a.a.ae:
    repack.org.bouncycastle.asn1.ASN1StreamParser _parser -> a
    java.io.InputStream getOctetStream() -> e
    repack.org.bouncycastle.asn1.DERObject getLoadedObject() -> g
    repack.org.bouncycastle.asn1.DERObject getDERObject() -> c
repack.org.bouncycastle.asn1.BEROutputStream -> c.a.a.a.af:
    void writeObject(java.lang.Object) -> a
repack.org.bouncycastle.asn1.BERSequence -> c.a.a.a.ag:
    void encode(repack.org.bouncycastle.asn1.DEROutputStream) -> a
repack.org.bouncycastle.asn1.BERSequenceParser -> c.a.a.a.ah:
    repack.org.bouncycastle.asn1.ASN1StreamParser _parser -> a
    repack.org.bouncycastle.asn1.DERObject getLoadedObject() -> g
    repack.org.bouncycastle.asn1.DERObject getDERObject() -> c
repack.org.bouncycastle.asn1.BERSet -> c.a.a.a.ai:
    void encode(repack.org.bouncycastle.asn1.DEROutputStream) -> a
repack.org.bouncycastle.asn1.BERSetParser -> c.a.a.a.aj:
    repack.org.bouncycastle.asn1.ASN1StreamParser _parser -> a
    repack.org.bouncycastle.asn1.DERObject getLoadedObject() -> g
    repack.org.bouncycastle.asn1.DERObject getDERObject() -> c
repack.org.bouncycastle.asn1.BERTaggedObject -> c.a.a.a.ak:
    void encode(repack.org.bouncycastle.asn1.DEROutputStream) -> a
repack.org.bouncycastle.asn1.BERTaggedObjectParser -> c.a.a.a.al:
    boolean _constructed -> a
    int _tagNumber -> b
    repack.org.bouncycastle.asn1.ASN1StreamParser _parser -> c
    repack.org.bouncycastle.asn1.DERObject getLoadedObject() -> g
    repack.org.bouncycastle.asn1.DERObject getDERObject() -> c
repack.org.bouncycastle.asn1.ConstructedOctetStream -> c.a.a.a.am:
    repack.org.bouncycastle.asn1.ASN1StreamParser _parser -> a
    boolean _first -> b
    java.io.InputStream _currentStream -> c
    int read(byte[],int,int) -> read
    int read() -> read
repack.org.bouncycastle.asn1.DERApplicationSpecific -> c.a.a.a.an:
    boolean isConstructed -> a
    int tag -> b
    byte[] octets -> c
    void encode(repack.org.bouncycastle.asn1.DEROutputStream) -> a
    boolean asn1Equals(repack.org.bouncycastle.asn1.DERObject) -> a
    int hashCode() -> hashCode
repack.org.bouncycastle.asn1.DERBMPString -> c.a.a.a.ao:
    java.lang.String string -> a
    java.lang.String getString() -> c_
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean asn1Equals(repack.org.bouncycastle.asn1.DERObject) -> a
    void encode(repack.org.bouncycastle.asn1.DEROutputStream) -> a
repack.org.bouncycastle.asn1.DERBitString -> c.a.a.a.ap:
    char[] table -> c
    byte[] data -> a
    int padBits -> b
    repack.org.bouncycastle.asn1.DERBitString getInstance(java.lang.Object) -> a
    repack.org.bouncycastle.asn1.DERBitString getInstance(repack.org.bouncycastle.asn1.ASN1TaggedObject,boolean) -> a
    byte[] getBytes() -> e
    int getPadBits() -> f
    void encode(repack.org.bouncycastle.asn1.DEROutputStream) -> a
    int hashCode() -> hashCode
    boolean asn1Equals(repack.org.bouncycastle.asn1.DERObject) -> a
    java.lang.String getString() -> c_
    java.lang.String toString() -> toString
    repack.org.bouncycastle.asn1.DERBitString fromOctetString(byte[]) -> b
repack.org.bouncycastle.asn1.DERBoolean -> c.a.a.a.aq:
    byte value -> a
    repack.org.bouncycastle.asn1.DERBoolean FALSE -> b
    repack.org.bouncycastle.asn1.DERBoolean TRUE -> c
    repack.org.bouncycastle.asn1.DERBoolean getInstance(java.lang.Object) -> a
    boolean isTrue() -> e
    void encode(repack.org.bouncycastle.asn1.DEROutputStream) -> a
    boolean asn1Equals(repack.org.bouncycastle.asn1.DERObject) -> a
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
repack.org.bouncycastle.asn1.DEREncodable -> c.a.a.a.ar:
    repack.org.bouncycastle.asn1.DERObject getDERObject() -> c
repack.org.bouncycastle.asn1.DEREncodableVector -> c.a.a.a.as:
    java.util.Vector v -> b
    void add(repack.org.bouncycastle.asn1.DEREncodable) -> a
    repack.org.bouncycastle.asn1.DEREncodable get(int) -> a
    int size() -> a
repack.org.bouncycastle.asn1.DEREnumerated -> c.a.a.a.at:
    byte[] bytes -> a
    void encode(repack.org.bouncycastle.asn1.DEROutputStream) -> a
    boolean asn1Equals(repack.org.bouncycastle.asn1.DERObject) -> a
    int hashCode() -> hashCode
repack.org.bouncycastle.asn1.DERExternal -> c.a.a.a.au:
    repack.org.bouncycastle.asn1.DERObjectIdentifier directReference -> a
    repack.org.bouncycastle.asn1.DERInteger indirectReference -> b
    repack.org.bouncycastle.asn1.ASN1Object dataValueDescriptor -> c
    int encoding -> d
    repack.org.bouncycastle.asn1.DERObject externalContent -> e
    repack.org.bouncycastle.asn1.DERObject getObjFromVector(repack.org.bouncycastle.asn1.ASN1EncodableVector,int) -> a
    int hashCode() -> hashCode
    void encode(repack.org.bouncycastle.asn1.DEROutputStream) -> a
    boolean asn1Equals(repack.org.bouncycastle.asn1.DERObject) -> a
    void setEncoding(int) -> a
repack.org.bouncycastle.asn1.DERExternalParser -> c.a.a.a.av:
    repack.org.bouncycastle.asn1.ASN1StreamParser _parser -> a
    repack.org.bouncycastle.asn1.DERObject getLoadedObject() -> g
    repack.org.bouncycastle.asn1.DERObject getDERObject() -> c
repack.org.bouncycastle.asn1.DERFactory -> c.a.a.a.aw:
    repack.org.bouncycastle.asn1.DERSequence EMPTY_SEQUENCE -> a
    repack.org.bouncycastle.asn1.DERSet EMPTY_SET -> b
    repack.org.bouncycastle.asn1.DERSequence createSequence(repack.org.bouncycastle.asn1.ASN1EncodableVector) -> a
    repack.org.bouncycastle.asn1.DERSet createSet(repack.org.bouncycastle.asn1.ASN1EncodableVector,boolean) -> a
repack.org.bouncycastle.asn1.DERGeneralString -> c.a.a.a.ax:
    java.lang.String string -> a
    java.lang.String getString() -> c_
    java.lang.String toString() -> toString
    byte[] getOctets() -> e
    void encode(repack.org.bouncycastle.asn1.DEROutputStream) -> a
    int hashCode() -> hashCode
    boolean asn1Equals(repack.org.bouncycastle.asn1.DERObject) -> a
repack.org.bouncycastle.asn1.DERGeneralizedTime -> c.a.a.a.ay:
    java.lang.String time -> a
    java.lang.String getTime() -> e
    java.lang.String calculateGMTOffset() -> g
    java.lang.String convert(int) -> a
    java.util.Date getDate() -> f
    boolean hasFractionalSeconds() -> h
    byte[] getOctets() -> i
    void encode(repack.org.bouncycastle.asn1.DEROutputStream) -> a
    boolean asn1Equals(repack.org.bouncycastle.asn1.DERObject) -> a
    int hashCode() -> hashCode
repack.org.bouncycastle.asn1.DERIA5String -> c.a.a.a.az:
    java.lang.String string -> a
    java.lang.String getString() -> c_
    java.lang.String toString() -> toString
    byte[] getOctets() -> e
    void encode(repack.org.bouncycastle.asn1.DEROutputStream) -> a
    int hashCode() -> hashCode
    boolean asn1Equals(repack.org.bouncycastle.asn1.DERObject) -> a
repack.org.bouncycastle.asn1.DERInteger -> c.a.a.a.ba:
    byte[] bytes -> a
    repack.org.bouncycastle.asn1.DERInteger getInstance(java.lang.Object) -> a
    repack.org.bouncycastle.asn1.DERInteger getInstance(repack.org.bouncycastle.asn1.ASN1TaggedObject,boolean) -> a
    java.math.BigInteger getValue() -> e
    void encode(repack.org.bouncycastle.asn1.DEROutputStream) -> a
    int hashCode() -> hashCode
    boolean asn1Equals(repack.org.bouncycastle.asn1.DERObject) -> a
    java.lang.String toString() -> toString
repack.org.bouncycastle.asn1.DERNull -> c.a.a.a.bb:
    repack.org.bouncycastle.asn1.DERNull INSTANCE -> a
    byte[] zeroBytes -> b
    void encode(repack.org.bouncycastle.asn1.DEROutputStream) -> a
repack.org.bouncycastle.asn1.DERNumericString -> c.a.a.a.bc:
    java.lang.String string -> a
    java.lang.String getString() -> c_
    java.lang.String toString() -> toString
    byte[] getOctets() -> e
    void encode(repack.org.bouncycastle.asn1.DEROutputStream) -> a
    int hashCode() -> hashCode
    boolean asn1Equals(repack.org.bouncycastle.asn1.DERObject) -> a
repack.org.bouncycastle.asn1.DERObject -> c.a.a.a.bd:
    repack.org.bouncycastle.asn1.DERObject toASN1Object() -> d
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    void encode(repack.org.bouncycastle.asn1.DEROutputStream) -> a
repack.org.bouncycastle.asn1.DERObjectIdentifier -> c.a.a.a.be:
    java.lang.String identifier -> a
    repack.org.bouncycastle.asn1.DERObjectIdentifier getInstance(java.lang.Object) -> a
    java.lang.String getId() -> e
    void writeField(java.io.OutputStream,long) -> a
    void writeField(java.io.OutputStream,java.math.BigInteger) -> a
    void encode(repack.org.bouncycastle.asn1.DEROutputStream) -> a
    int hashCode() -> hashCode
    boolean asn1Equals(repack.org.bouncycastle.asn1.DERObject) -> a
    java.lang.String toString() -> toString
    boolean isValidIdentifier(java.lang.String) -> b
repack.org.bouncycastle.asn1.DEROctetString -> c.a.a.a.bf:
    void encode(repack.org.bouncycastle.asn1.DEROutputStream) -> a
repack.org.bouncycastle.asn1.DEROctetStringParser -> c.a.a.a.bg:
    repack.org.bouncycastle.asn1.DefiniteLengthInputStream stream -> a
    java.io.InputStream getOctetStream() -> e
    repack.org.bouncycastle.asn1.DERObject getLoadedObject() -> g
    repack.org.bouncycastle.asn1.DERObject getDERObject() -> c
repack.org.bouncycastle.asn1.DEROutputStream -> c.a.a.a.bh:
    void writeLength(int) -> a
    void writeEncoded(int,byte[]) -> a
    void writeTag(int,int) -> a
    void writeEncoded(int,int,byte[]) -> a
    void writeNull() -> a
    void write(byte[]) -> write
    void write(byte[],int,int) -> write
    void writeObject(java.lang.Object) -> a
repack.org.bouncycastle.asn1.DERPrintableString -> c.a.a.a.bi:
    java.lang.String string -> a
    java.lang.String getString() -> c_
    byte[] getOctets() -> e
    void encode(repack.org.bouncycastle.asn1.DEROutputStream) -> a
    int hashCode() -> hashCode
    boolean asn1Equals(repack.org.bouncycastle.asn1.DERObject) -> a
    java.lang.String toString() -> toString
repack.org.bouncycastle.asn1.DERSequence -> c.a.a.a.bj:
    void encode(repack.org.bouncycastle.asn1.DEROutputStream) -> a
repack.org.bouncycastle.asn1.DERSequenceParser -> c.a.a.a.bk:
    repack.org.bouncycastle.asn1.ASN1StreamParser _parser -> a
    repack.org.bouncycastle.asn1.DERObject getLoadedObject() -> g
    repack.org.bouncycastle.asn1.DERObject getDERObject() -> c
repack.org.bouncycastle.asn1.DERSet -> c.a.a.a.bl:
    void encode(repack.org.bouncycastle.asn1.DEROutputStream) -> a
repack.org.bouncycastle.asn1.DERSetParser -> c.a.a.a.bm:
    repack.org.bouncycastle.asn1.ASN1StreamParser _parser -> a
    repack.org.bouncycastle.asn1.DERObject getLoadedObject() -> g
    repack.org.bouncycastle.asn1.DERObject getDERObject() -> c
repack.org.bouncycastle.asn1.DERString -> c.a.a.a.bn:
repack.org.bouncycastle.asn1.DERT61String -> c.a.a.a.bo:
    java.lang.String string -> a
    java.lang.String getString() -> c_
    java.lang.String toString() -> toString
    void encode(repack.org.bouncycastle.asn1.DEROutputStream) -> a
    byte[] getOctets() -> e
    boolean asn1Equals(repack.org.bouncycastle.asn1.DERObject) -> a
    int hashCode() -> hashCode
repack.org.bouncycastle.asn1.DERTaggedObject -> c.a.a.a.bp:
    byte[] ZERO_BYTES -> e
    void encode(repack.org.bouncycastle.asn1.DEROutputStream) -> a
repack.org.bouncycastle.asn1.DERUTCTime -> c.a.a.a.bq:
    java.lang.String time -> a
    java.lang.String getTime() -> e
    java.lang.String getAdjustedTime() -> f
    byte[] getOctets() -> g
    void encode(repack.org.bouncycastle.asn1.DEROutputStream) -> a
    boolean asn1Equals(repack.org.bouncycastle.asn1.DERObject) -> a
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
repack.org.bouncycastle.asn1.DERUTF8String -> c.a.a.a.br:
    java.lang.String string -> a
    java.lang.String getString() -> c_
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean asn1Equals(repack.org.bouncycastle.asn1.DERObject) -> a
    void encode(repack.org.bouncycastle.asn1.DEROutputStream) -> a
repack.org.bouncycastle.asn1.DERUniversalString -> c.a.a.a.bs:
    char[] table -> a
    byte[] string -> b
    java.lang.String getString() -> c_
    java.lang.String toString() -> toString
    byte[] getOctets() -> e
    void encode(repack.org.bouncycastle.asn1.DEROutputStream) -> a
    boolean asn1Equals(repack.org.bouncycastle.asn1.DERObject) -> a
    int hashCode() -> hashCode
repack.org.bouncycastle.asn1.DERUnknownTag -> c.a.a.a.bt:
    boolean isConstructed -> a
    int tag -> b
    byte[] data -> c
    void encode(repack.org.bouncycastle.asn1.DEROutputStream) -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
repack.org.bouncycastle.asn1.DERVisibleString -> c.a.a.a.bu:
    java.lang.String string -> a
    java.lang.String getString() -> c_
    java.lang.String toString() -> toString
    byte[] getOctets() -> e
    void encode(repack.org.bouncycastle.asn1.DEROutputStream) -> a
    boolean asn1Equals(repack.org.bouncycastle.asn1.DERObject) -> a
    int hashCode() -> hashCode
repack.org.bouncycastle.asn1.DefiniteLengthInputStream -> c.a.a.a.bv:
    byte[] EMPTY_BYTES -> b
    int _originalLength -> c
    int _remaining -> d
    int getRemaining() -> a
    int read() -> read
    int read(byte[],int,int) -> read
    byte[] toByteArray() -> b
repack.org.bouncycastle.asn1.InMemoryRepresentable -> c.a.a.a.bw:
    repack.org.bouncycastle.asn1.DERObject getLoadedObject() -> g
repack.org.bouncycastle.asn1.IndefiniteLengthInputStream -> c.a.a.a.bx:
    int _b1 -> b
    int _b2 -> c
    boolean _eofReached -> d
    boolean _eofOn00 -> e
    void setEofOn00(boolean) -> a
    boolean checkForEof() -> b
    int read(byte[],int,int) -> read
    int read() -> read
repack.org.bouncycastle.asn1.LazyDERConstructionEnumeration -> c.a.a.a.by:
    repack.org.bouncycastle.asn1.ASN1InputStream aIn -> a
    java.lang.Object nextObj -> b
    boolean hasMoreElements() -> hasMoreElements
    java.lang.Object nextElement() -> nextElement
    java.lang.Object readObject() -> a
repack.org.bouncycastle.asn1.LazyDERSequence -> c.a.a.a.bz:
    byte[] encoded -> a
    boolean parsed -> b
    int size -> c
    void parse() -> g
    repack.org.bouncycastle.asn1.DEREncodable getObjectAt(int) -> a
    java.util.Enumeration getObjects() -> e
    int size() -> f
    void encode(repack.org.bouncycastle.asn1.DEROutputStream) -> a
repack.org.bouncycastle.asn1.LimitedInputStream -> c.a.a.a.ca:
    java.io.InputStream _in -> a
    int _limit -> b
    int getRemaining() -> a
    void setParentEofDetect(boolean) -> b
repack.org.bouncycastle.asn1.OIDTokenizer -> c.a.a.a.cb:
    java.lang.String oid -> a
    int index -> b
    boolean hasMoreTokens() -> a
    java.lang.String nextToken() -> b
repack.org.bouncycastle.asn1.cms.ContentInfo -> c.a.a.a.a.a:
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier contentType -> a
    repack.org.bouncycastle.asn1.DEREncodable content -> b
    repack.org.bouncycastle.asn1.DERObject toASN1Object() -> d
repack.org.bouncycastle.asn1.cms.EncryptedContentInfo -> c.a.a.a.a.b:
    repack.org.bouncycastle.asn1.DERObjectIdentifier contentType -> a
    repack.org.bouncycastle.asn1.x509.AlgorithmIdentifier contentEncryptionAlgorithm -> b
    repack.org.bouncycastle.asn1.ASN1OctetString encryptedContent -> c
    repack.org.bouncycastle.asn1.DERObject toASN1Object() -> d
repack.org.bouncycastle.asn1.cms.EnvelopedData -> c.a.a.a.a.c:
    repack.org.bouncycastle.asn1.DERInteger version -> a
    repack.org.bouncycastle.asn1.cms.OriginatorInfo originatorInfo -> b
    repack.org.bouncycastle.asn1.ASN1Set recipientInfos -> c
    repack.org.bouncycastle.asn1.cms.EncryptedContentInfo encryptedContentInfo -> d
    repack.org.bouncycastle.asn1.ASN1Set unprotectedAttrs -> e
    repack.org.bouncycastle.asn1.DERObject toASN1Object() -> d
repack.org.bouncycastle.asn1.cms.IssuerAndSerialNumber -> c.a.a.a.a.d:
    repack.org.bouncycastle.asn1.x500.X500Name name -> a
    repack.org.bouncycastle.asn1.DERInteger serialNumber -> b
    repack.org.bouncycastle.asn1.DERObject toASN1Object() -> d
repack.org.bouncycastle.asn1.cms.KEKIdentifier -> c.a.a.a.a.e:
    repack.org.bouncycastle.asn1.ASN1OctetString keyIdentifier -> a
    repack.org.bouncycastle.asn1.DERGeneralizedTime date -> b
    repack.org.bouncycastle.asn1.cms.OtherKeyAttribute other -> c
    repack.org.bouncycastle.asn1.cms.KEKIdentifier getInstance(java.lang.Object) -> a
    repack.org.bouncycastle.asn1.DERObject toASN1Object() -> d
repack.org.bouncycastle.asn1.cms.KEKRecipientInfo -> c.a.a.a.a.f:
    repack.org.bouncycastle.asn1.DERInteger version -> a
    repack.org.bouncycastle.asn1.cms.KEKIdentifier kekid -> b
    repack.org.bouncycastle.asn1.x509.AlgorithmIdentifier keyEncryptionAlgorithm -> c
    repack.org.bouncycastle.asn1.ASN1OctetString encryptedKey -> d
    repack.org.bouncycastle.asn1.cms.KEKRecipientInfo getInstance(repack.org.bouncycastle.asn1.ASN1TaggedObject,boolean) -> a
    repack.org.bouncycastle.asn1.cms.KEKRecipientInfo getInstance(java.lang.Object) -> a
    repack.org.bouncycastle.asn1.DERInteger getVersion() -> e
    repack.org.bouncycastle.asn1.DERObject toASN1Object() -> d
repack.org.bouncycastle.asn1.cms.KeyAgreeRecipientInfo -> c.a.a.a.a.g:
    repack.org.bouncycastle.asn1.DERInteger version -> a
    repack.org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey originator -> b
    repack.org.bouncycastle.asn1.ASN1OctetString ukm -> c
    repack.org.bouncycastle.asn1.x509.AlgorithmIdentifier keyEncryptionAlgorithm -> d
    repack.org.bouncycastle.asn1.ASN1Sequence recipientEncryptedKeys -> e
    repack.org.bouncycastle.asn1.cms.KeyAgreeRecipientInfo getInstance(repack.org.bouncycastle.asn1.ASN1TaggedObject,boolean) -> a
    repack.org.bouncycastle.asn1.cms.KeyAgreeRecipientInfo getInstance(java.lang.Object) -> a
    repack.org.bouncycastle.asn1.DERInteger getVersion() -> e
    repack.org.bouncycastle.asn1.DERObject toASN1Object() -> d
repack.org.bouncycastle.asn1.cms.KeyTransRecipientInfo -> c.a.a.a.a.h:
    repack.org.bouncycastle.asn1.DERInteger version -> a
    repack.org.bouncycastle.asn1.cms.RecipientIdentifier rid -> b
    repack.org.bouncycastle.asn1.x509.AlgorithmIdentifier keyEncryptionAlgorithm -> c
    repack.org.bouncycastle.asn1.ASN1OctetString encryptedKey -> d
    repack.org.bouncycastle.asn1.cms.KeyTransRecipientInfo getInstance(java.lang.Object) -> a
    repack.org.bouncycastle.asn1.DERInteger getVersion() -> e
    repack.org.bouncycastle.asn1.DERObject toASN1Object() -> d
repack.org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey -> c.a.a.a.a.i:
    repack.org.bouncycastle.asn1.DEREncodable id -> a
    repack.org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey getInstance(repack.org.bouncycastle.asn1.ASN1TaggedObject,boolean) -> a
    repack.org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey getInstance(java.lang.Object) -> a
    repack.org.bouncycastle.asn1.DERObject toASN1Object() -> d
repack.org.bouncycastle.asn1.cms.OriginatorInfo -> c.a.a.a.a.j:
    repack.org.bouncycastle.asn1.ASN1Set certs -> a
    repack.org.bouncycastle.asn1.ASN1Set crls -> b
    repack.org.bouncycastle.asn1.DERObject toASN1Object() -> d
repack.org.bouncycastle.asn1.cms.OriginatorPublicKey -> c.a.a.a.a.k:
    repack.org.bouncycastle.asn1.x509.AlgorithmIdentifier algorithm -> a
    repack.org.bouncycastle.asn1.DERBitString publicKey -> b
    repack.org.bouncycastle.asn1.DERObject toASN1Object() -> d
repack.org.bouncycastle.asn1.cms.OtherKeyAttribute -> c.a.a.a.a.l:
    repack.org.bouncycastle.asn1.DERObjectIdentifier keyAttrId -> a
    repack.org.bouncycastle.asn1.DEREncodable keyAttr -> b
    repack.org.bouncycastle.asn1.cms.OtherKeyAttribute getInstance(java.lang.Object) -> a
    repack.org.bouncycastle.asn1.DERObject toASN1Object() -> d
repack.org.bouncycastle.asn1.cms.PasswordRecipientInfo -> c.a.a.a.a.m:
    repack.org.bouncycastle.asn1.DERInteger version -> a
    repack.org.bouncycastle.asn1.x509.AlgorithmIdentifier keyDerivationAlgorithm -> b
    repack.org.bouncycastle.asn1.x509.AlgorithmIdentifier keyEncryptionAlgorithm -> c
    repack.org.bouncycastle.asn1.ASN1OctetString encryptedKey -> d
    repack.org.bouncycastle.asn1.cms.PasswordRecipientInfo getInstance(repack.org.bouncycastle.asn1.ASN1TaggedObject,boolean) -> a
    repack.org.bouncycastle.asn1.cms.PasswordRecipientInfo getInstance(java.lang.Object) -> a
    repack.org.bouncycastle.asn1.DERInteger getVersion() -> e
    repack.org.bouncycastle.asn1.DERObject toASN1Object() -> d
repack.org.bouncycastle.asn1.cms.RecipientIdentifier -> c.a.a.a.a.n:
    repack.org.bouncycastle.asn1.DEREncodable id -> a
    repack.org.bouncycastle.asn1.cms.RecipientIdentifier getInstance(java.lang.Object) -> a
    repack.org.bouncycastle.asn1.DERObject toASN1Object() -> d
repack.org.bouncycastle.asn1.cms.RecipientInfo -> c.a.a.a.a.o:
    repack.org.bouncycastle.asn1.DEREncodable info -> a
    repack.org.bouncycastle.asn1.cms.RecipientInfo getInstance(java.lang.Object) -> a
    repack.org.bouncycastle.asn1.DERInteger getVersion() -> e
    repack.org.bouncycastle.asn1.cms.KEKRecipientInfo getKEKInfo(repack.org.bouncycastle.asn1.ASN1TaggedObject) -> a
    repack.org.bouncycastle.asn1.DERObject toASN1Object() -> d
repack.org.bouncycastle.asn1.pkcs.PKCSObjectIdentifiers -> c.a.a.a.b.a:
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier pkcs_1 -> g_
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier rsaEncryption -> h_
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier md2WithRSAEncryption -> i_
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier md4WithRSAEncryption -> d
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier md5WithRSAEncryption -> e
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier sha1WithRSAEncryption -> j_
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier srsaOAEPEncryptionSET -> k_
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier id_RSAES_OAEP -> h
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier id_mgf1 -> l_
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier id_pSpecified -> j
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier id_RSASSA_PSS -> k
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier sha256WithRSAEncryption -> m_
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier sha384WithRSAEncryption -> n_
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier sha512WithRSAEncryption -> o_
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier sha224WithRSAEncryption -> p_
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier pkcs_3 -> q_
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier dhKeyAgreement -> q
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier pkcs_5 -> r_
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier pbeWithMD2AndDES_CBC -> s_
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier pbeWithMD2AndRC2_CBC -> t
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier pbeWithMD5AndDES_CBC -> u
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier pbeWithMD5AndRC2_CBC -> v
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier pbeWithSHA1AndDES_CBC -> w
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier pbeWithSHA1AndRC2_CBC -> x
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier id_PBES2 -> y
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier id_PBKDF2 -> z
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier encryptionAlgorithm -> A
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier des_EDE3_CBC -> B
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier RC2_CBC -> C
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier digestAlgorithm -> D
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier md2 -> E
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier md4 -> F
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier md5 -> G
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier id_hmacWithSHA1 -> H
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier id_hmacWithSHA224 -> I
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier id_hmacWithSHA256 -> J
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier id_hmacWithSHA384 -> K
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier id_hmacWithSHA512 -> L
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier data -> M
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier signedData -> N
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier envelopedData -> O
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier signedAndEnvelopedData -> P
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier digestedData -> Q
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier encryptedData -> R
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier pkcs_9 -> S
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier pkcs_9_at_emailAddress -> T
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier pkcs_9_at_unstructuredName -> U
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier pkcs_9_at_contentType -> V
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier pkcs_9_at_messageDigest -> W
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier pkcs_9_at_signingTime -> X
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier pkcs_9_at_counterSignature -> Y
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier pkcs_9_at_challengePassword -> Z
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier pkcs_9_at_unstructuredAddress -> aa
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier pkcs_9_at_extendedCertificateAttributes -> ab
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier pkcs_9_at_signingDescription -> ac
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier pkcs_9_at_extensionRequest -> ad
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier pkcs_9_at_smimeCapabilities -> ae
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier pkcs_9_at_friendlyName -> af
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier pkcs_9_at_localKeyId -> ag
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier x509certType -> ah
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier certTypes -> ai
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier x509Certificate -> aj
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier sdsiCertificate -> ak
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier crlTypes -> al
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier x509Crl -> am
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier id_alg_PWRI_KEK -> an
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier preferSignedData -> ao
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier canNotDecryptAny -> ap
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier sMIMECapabilitiesVersions -> aq
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier id_ct -> ar
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier id_ct_authData -> as
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier id_ct_TSTInfo -> at
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier id_ct_compressedData -> au
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier id_ct_authEnvelopedData -> av
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier id_ct_timestampedData -> aw
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier id_cti -> ax
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier id_cti_ets_proofOfOrigin -> ay
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier id_cti_ets_proofOfReceipt -> az
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier id_cti_ets_proofOfDelivery -> aA
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier id_cti_ets_proofOfSender -> aB
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier id_cti_ets_proofOfApproval -> aC
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier id_cti_ets_proofOfCreation -> aD
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier id_aa -> aE
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier id_aa_receiptRequest -> aF
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier id_aa_contentHint -> aG
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier id_aa_msgSigDigest -> aH
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier id_aa_contentReference -> aI
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier id_aa_encrypKeyPref -> aJ
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier id_aa_signingCertificate -> aK
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier id_aa_signingCertificateV2 -> aL
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier id_aa_contentIdentifier -> aM
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier id_aa_signatureTimeStampToken -> aN
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier id_aa_ets_sigPolicyId -> aO
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier id_aa_ets_commitmentType -> aP
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier id_aa_ets_signerLocation -> aQ
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier id_aa_ets_signerAttr -> aR
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier id_aa_ets_otherSigCert -> aS
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier id_aa_ets_contentTimestamp -> aT
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier id_aa_ets_certificateRefs -> aU
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier id_aa_ets_revocationRefs -> aV
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier id_aa_ets_certValues -> aW
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier id_aa_ets_revocationValues -> aX
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier id_aa_ets_escTimeStamp -> aY
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier id_aa_ets_certCRLTimestamp -> aZ
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier id_aa_ets_archiveTimestamp -> ba
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier id_aa_sigPolicyId -> bb
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier id_aa_commitmentType -> bc
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier id_aa_signerLocation -> bd
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier id_aa_otherSigCert -> be
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier id_spq_ets_uri -> bf
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier id_spq_ets_unotice -> bg
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier pkcs_12 -> bh
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier bagtypes -> bi
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier keyBag -> bj
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier pkcs8ShroudedKeyBag -> bk
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier certBag -> bl
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier crlBag -> bm
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier secretBag -> bn
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier safeContentsBag -> bo
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier pkcs_12PbeIds -> bp
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier pbeWithSHAAnd128BitRC4 -> bq
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier pbeWithSHAAnd40BitRC4 -> br
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier pbeWithSHAAnd3_KeyTripleDES_CBC -> bs
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier pbeWithSHAAnd2_KeyTripleDES_CBC -> bt
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier pbeWithSHAAnd128BitRC2_CBC -> bu
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier pbewithSHAAnd40BitRC2_CBC -> bv
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier id_alg_CMS3DESwrap -> bw
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier id_alg_CMSRC2wrap -> bx
repack.org.bouncycastle.asn1.x500.AttributeTypeAndValue -> c.a.a.a.c.a:
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier type -> a
    repack.org.bouncycastle.asn1.ASN1Encodable value -> b
    repack.org.bouncycastle.asn1.x500.AttributeTypeAndValue getInstance(java.lang.Object) -> a
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier getType() -> e
    repack.org.bouncycastle.asn1.ASN1Encodable getValue() -> f
    repack.org.bouncycastle.asn1.DERObject toASN1Object() -> d
repack.org.bouncycastle.asn1.x500.RDN -> c.a.a.a.c.b:
    repack.org.bouncycastle.asn1.ASN1Set values -> a
    repack.org.bouncycastle.asn1.x500.RDN getInstance(java.lang.Object) -> a
    boolean isMultiValued() -> e
    repack.org.bouncycastle.asn1.x500.AttributeTypeAndValue getFirst() -> f
    repack.org.bouncycastle.asn1.x500.AttributeTypeAndValue[] getTypesAndValues() -> g
    repack.org.bouncycastle.asn1.DERObject toASN1Object() -> d
repack.org.bouncycastle.asn1.x500.X500Name -> c.a.a.a.c.c:
    repack.org.bouncycastle.asn1.x500.X500NameStyle defaultStyle -> a
    boolean isHashCodeCalculated -> b
    int hashCodeValue -> c
    repack.org.bouncycastle.asn1.x500.X500NameStyle style -> d
    repack.org.bouncycastle.asn1.x500.RDN[] rdns -> e
    repack.org.bouncycastle.asn1.x500.X500Name getInstance(java.lang.Object) -> a
    repack.org.bouncycastle.asn1.x500.RDN[] getRDNs() -> e
    repack.org.bouncycastle.asn1.DERObject toASN1Object() -> d
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
repack.org.bouncycastle.asn1.x500.X500NameStyle -> c.a.a.a.c.d:
    boolean areEqual(repack.org.bouncycastle.asn1.x500.X500Name,repack.org.bouncycastle.asn1.x500.X500Name) -> a
    int calculateHashCode(repack.org.bouncycastle.asn1.x500.X500Name) -> a
    java.lang.String toString(repack.org.bouncycastle.asn1.x500.X500Name) -> b
repack.org.bouncycastle.asn1.x500.style.BCStyle -> c.a.a.a.c.a.a:
    repack.org.bouncycastle.asn1.x500.X500NameStyle INSTANCE -> a
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier C -> b
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier O -> c
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier OU -> d
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier T -> e
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier CN -> f
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier SN -> g
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier STREET -> h
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier SERIALNUMBER -> i
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier L -> j
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier ST -> k
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier SURNAME -> l
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier GIVENNAME -> m
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier INITIALS -> n
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier GENERATION -> o
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier UNIQUE_IDENTIFIER -> p
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier BUSINESS_CATEGORY -> q
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier POSTAL_CODE -> r
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier DN_QUALIFIER -> s
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier PSEUDONYM -> t
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier DATE_OF_BIRTH -> u
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier PLACE_OF_BIRTH -> v
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier GENDER -> w
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier COUNTRY_OF_CITIZENSHIP -> x
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier COUNTRY_OF_RESIDENCE -> y
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier NAME_AT_BIRTH -> z
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier POSTAL_ADDRESS -> A
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier DMD_NAME -> B
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier TELEPHONE_NUMBER -> C
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier NAME -> D
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier EmailAddress -> E
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier UnstructuredName -> F
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier UnstructuredAddress -> G
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier E -> H
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier DC -> I
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier UID -> J
    java.util.Hashtable DefaultSymbols -> K
    java.util.Hashtable DefaultLookUp -> L
    boolean areEqual(repack.org.bouncycastle.asn1.x500.X500Name,repack.org.bouncycastle.asn1.x500.X500Name) -> a
    boolean foundMatch(boolean,repack.org.bouncycastle.asn1.x500.RDN,repack.org.bouncycastle.asn1.x500.RDN[]) -> a
    boolean rdnAreEqual(repack.org.bouncycastle.asn1.x500.RDN,repack.org.bouncycastle.asn1.x500.RDN) -> a
    boolean atvAreEqual(repack.org.bouncycastle.asn1.x500.AttributeTypeAndValue,repack.org.bouncycastle.asn1.x500.AttributeTypeAndValue) -> a
    int calculateHashCode(repack.org.bouncycastle.asn1.x500.X500Name) -> a
    int calcHashCode(repack.org.bouncycastle.asn1.ASN1Encodable) -> a
    java.lang.String toString(repack.org.bouncycastle.asn1.x500.X500Name) -> b
repack.org.bouncycastle.asn1.x500.style.IETFUtils -> c.a.a.a.c.a.b:
    void appendTypeAndValue(java.lang.StringBuffer,repack.org.bouncycastle.asn1.x500.AttributeTypeAndValue,java.util.Hashtable) -> a
    java.lang.String valueToString(repack.org.bouncycastle.asn1.ASN1Encodable) -> a
    java.lang.String bytesToString(byte[]) -> a
    java.lang.String canonicalize(java.lang.String) -> a
    repack.org.bouncycastle.asn1.ASN1Object decodeObject(java.lang.String) -> c
    java.lang.String stripInternalSpaces(java.lang.String) -> b
repack.org.bouncycastle.asn1.x509.AlgorithmIdentifier -> c.a.a.a.d.a:
    repack.org.bouncycastle.asn1.DERObjectIdentifier objectId -> a
    repack.org.bouncycastle.asn1.DEREncodable parameters -> b
    boolean parametersDefined -> c
    repack.org.bouncycastle.asn1.x509.AlgorithmIdentifier getInstance(repack.org.bouncycastle.asn1.ASN1TaggedObject,boolean) -> a
    repack.org.bouncycastle.asn1.x509.AlgorithmIdentifier getInstance(java.lang.Object) -> a
    repack.org.bouncycastle.asn1.DERObjectIdentifier getObjectId() -> e
    repack.org.bouncycastle.asn1.DERObject toASN1Object() -> d
repack.org.bouncycastle.asn1.x509.SubjectKeyIdentifier -> c.a.a.a.d.b:
    byte[] keyidentifier -> a
    repack.org.bouncycastle.asn1.DERObject toASN1Object() -> d
repack.org.bouncycastle.asn1.x509.SubjectPublicKeyInfo -> c.a.a.a.d.c:
    repack.org.bouncycastle.asn1.x509.AlgorithmIdentifier algId -> a
    repack.org.bouncycastle.asn1.DERBitString keyData -> b
    repack.org.bouncycastle.asn1.x509.SubjectPublicKeyInfo getInstance(java.lang.Object) -> a
    repack.org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmId() -> e
    repack.org.bouncycastle.asn1.DERObject toASN1Object() -> d
repack.org.bouncycastle.asn1.x509.TBSCertificateStructure -> c.a.a.a.d.d:
    repack.org.bouncycastle.asn1.ASN1Sequence seq -> by
    repack.org.bouncycastle.asn1.DERInteger version -> bz
    repack.org.bouncycastle.asn1.DERInteger serialNumber -> bA
    repack.org.bouncycastle.asn1.x509.AlgorithmIdentifier signature -> bB
    repack.org.bouncycastle.asn1.x509.X509Name issuer -> bC
    repack.org.bouncycastle.asn1.x509.Time startDate -> bD
    repack.org.bouncycastle.asn1.x509.Time endDate -> bE
    repack.org.bouncycastle.asn1.x509.X509Name subject -> bF
    repack.org.bouncycastle.asn1.x509.SubjectPublicKeyInfo subjectPublicKeyInfo -> bG
    repack.org.bouncycastle.asn1.DERBitString issuerUniqueId -> bH
    repack.org.bouncycastle.asn1.DERBitString subjectUniqueId -> bI
    repack.org.bouncycastle.asn1.x509.X509Extensions extensions -> bJ
    repack.org.bouncycastle.asn1.x509.TBSCertificateStructure getInstance(java.lang.Object) -> a
    repack.org.bouncycastle.asn1.DERInteger getSerialNumber() -> e
    repack.org.bouncycastle.asn1.x509.X509Name getIssuer() -> f
    repack.org.bouncycastle.asn1.x509.SubjectPublicKeyInfo getSubjectPublicKeyInfo() -> g
    repack.org.bouncycastle.asn1.DERObject toASN1Object() -> d
repack.org.bouncycastle.asn1.x509.Time -> c.a.a.a.d.e:
    repack.org.bouncycastle.asn1.DERObject time -> a
    repack.org.bouncycastle.asn1.x509.Time getInstance(java.lang.Object) -> a
    java.lang.String getTime() -> e
    repack.org.bouncycastle.asn1.DERObject toASN1Object() -> d
    java.lang.String toString() -> toString
repack.org.bouncycastle.asn1.x509.X509Extension -> c.a.a.a.d.f:
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier subjectDirectoryAttributes -> a
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier subjectKeyIdentifier -> b
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier keyUsage -> c
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier privateKeyUsagePeriod -> d
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier subjectAlternativeName -> e
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier issuerAlternativeName -> f
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier basicConstraints -> g
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier cRLNumber -> h
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier reasonCode -> i
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier instructionCode -> j
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier invalidityDate -> k
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier deltaCRLIndicator -> l
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier issuingDistributionPoint -> m
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier certificateIssuer -> n
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier nameConstraints -> o
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier cRLDistributionPoints -> p
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier certificatePolicies -> q
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier policyMappings -> r
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier authorityKeyIdentifier -> s
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier policyConstraints -> t
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier extendedKeyUsage -> u
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier freshestCRL -> v
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier inhibitAnyPolicy -> w
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier authorityInfoAccess -> x
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier subjectInfoAccess -> y
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier logoType -> z
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier biometricInfo -> A
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier qCStatements -> B
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier auditIdentity -> C
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier noRevAvail -> D
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier targetInformation -> E
    boolean critical -> F
    repack.org.bouncycastle.asn1.ASN1OctetString value -> G
    boolean isCritical() -> a
    repack.org.bouncycastle.asn1.ASN1OctetString getValue() -> b
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
repack.org.bouncycastle.asn1.x509.X509Extensions -> c.a.a.a.d.g:
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier SubjectDirectoryAttributes -> a
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier SubjectKeyIdentifier -> b
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier KeyUsage -> c
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier PrivateKeyUsagePeriod -> d
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier SubjectAlternativeName -> e
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier IssuerAlternativeName -> f
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier BasicConstraints -> g
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier CRLNumber -> h
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier ReasonCode -> i
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier InstructionCode -> j
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier InvalidityDate -> k
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier DeltaCRLIndicator -> l
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier IssuingDistributionPoint -> m
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier CertificateIssuer -> n
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier NameConstraints -> o
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier CRLDistributionPoints -> p
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier CertificatePolicies -> q
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier PolicyMappings -> r
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier AuthorityKeyIdentifier -> s
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier PolicyConstraints -> t
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier ExtendedKeyUsage -> u
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier FreshestCRL -> v
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier InhibitAnyPolicy -> w
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier AuthorityInfoAccess -> x
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier SubjectInfoAccess -> y
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier LogoType -> z
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier BiometricInfo -> A
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier QCStatements -> B
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier AuditIdentity -> C
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier NoRevAvail -> D
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier TargetInformation -> E
    java.util.Hashtable extensions -> F
    java.util.Vector ordering -> G
    repack.org.bouncycastle.asn1.x509.X509Extensions getInstance(java.lang.Object) -> a
    repack.org.bouncycastle.asn1.DERObject toASN1Object() -> d
repack.org.bouncycastle.asn1.x509.X509Name -> c.a.a.a.d.h:
    repack.org.bouncycastle.asn1.DERObjectIdentifier C -> a
    repack.org.bouncycastle.asn1.DERObjectIdentifier O -> b
    repack.org.bouncycastle.asn1.DERObjectIdentifier OU -> c
    repack.org.bouncycastle.asn1.DERObjectIdentifier T -> d
    repack.org.bouncycastle.asn1.DERObjectIdentifier CN -> e
    repack.org.bouncycastle.asn1.DERObjectIdentifier SN -> f
    repack.org.bouncycastle.asn1.DERObjectIdentifier STREET -> g
    repack.org.bouncycastle.asn1.DERObjectIdentifier SERIALNUMBER -> h
    repack.org.bouncycastle.asn1.DERObjectIdentifier L -> i
    repack.org.bouncycastle.asn1.DERObjectIdentifier ST -> j
    repack.org.bouncycastle.asn1.DERObjectIdentifier SURNAME -> k
    repack.org.bouncycastle.asn1.DERObjectIdentifier GIVENNAME -> l
    repack.org.bouncycastle.asn1.DERObjectIdentifier INITIALS -> m
    repack.org.bouncycastle.asn1.DERObjectIdentifier GENERATION -> n
    repack.org.bouncycastle.asn1.DERObjectIdentifier UNIQUE_IDENTIFIER -> o
    repack.org.bouncycastle.asn1.DERObjectIdentifier BUSINESS_CATEGORY -> p
    repack.org.bouncycastle.asn1.DERObjectIdentifier POSTAL_CODE -> q
    repack.org.bouncycastle.asn1.DERObjectIdentifier DN_QUALIFIER -> r
    repack.org.bouncycastle.asn1.DERObjectIdentifier PSEUDONYM -> s
    repack.org.bouncycastle.asn1.DERObjectIdentifier DATE_OF_BIRTH -> t
    repack.org.bouncycastle.asn1.DERObjectIdentifier PLACE_OF_BIRTH -> u
    repack.org.bouncycastle.asn1.DERObjectIdentifier GENDER -> v
    repack.org.bouncycastle.asn1.DERObjectIdentifier COUNTRY_OF_CITIZENSHIP -> w
    repack.org.bouncycastle.asn1.DERObjectIdentifier COUNTRY_OF_RESIDENCE -> x
    repack.org.bouncycastle.asn1.DERObjectIdentifier NAME_AT_BIRTH -> y
    repack.org.bouncycastle.asn1.DERObjectIdentifier POSTAL_ADDRESS -> z
    repack.org.bouncycastle.asn1.DERObjectIdentifier DMD_NAME -> A
    repack.org.bouncycastle.asn1.DERObjectIdentifier TELEPHONE_NUMBER -> B
    repack.org.bouncycastle.asn1.DERObjectIdentifier NAME -> C
    repack.org.bouncycastle.asn1.DERObjectIdentifier EmailAddress -> D
    repack.org.bouncycastle.asn1.DERObjectIdentifier UnstructuredName -> E
    repack.org.bouncycastle.asn1.DERObjectIdentifier UnstructuredAddress -> F
    repack.org.bouncycastle.asn1.DERObjectIdentifier E -> G
    repack.org.bouncycastle.asn1.DERObjectIdentifier DC -> H
    repack.org.bouncycastle.asn1.DERObjectIdentifier UID -> I
    boolean DefaultReverse -> J
    java.util.Hashtable DefaultSymbols -> K
    java.util.Hashtable RFC2253Symbols -> L
    java.util.Hashtable RFC1779Symbols -> M
    java.util.Hashtable DefaultLookUp -> N
    java.util.Hashtable OIDLookUp -> O
    java.util.Hashtable SymbolLookUp -> P
    java.lang.Boolean TRUE -> Q
    java.lang.Boolean FALSE -> R
    repack.org.bouncycastle.asn1.x509.X509NameEntryConverter converter -> S
    java.util.Vector ordering -> T
    java.util.Vector values -> U
    java.util.Vector added -> V
    repack.org.bouncycastle.asn1.ASN1Sequence seq -> W
    boolean isHashCodeCalculated -> X
    int hashCodeValue -> Y
    repack.org.bouncycastle.asn1.x509.X509Name getInstance(java.lang.Object) -> a
    repack.org.bouncycastle.asn1.DERObject toASN1Object() -> d
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    boolean equivalentStrings(java.lang.String,java.lang.String) -> a
    java.lang.String canonicalize(java.lang.String) -> b
    repack.org.bouncycastle.asn1.ASN1Object decodeObject(java.lang.String) -> c
    java.lang.String stripInternalSpaces(java.lang.String) -> d
    void appendValue(java.lang.StringBuffer,java.util.Hashtable,repack.org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String) -> a
    java.lang.String toString(boolean,java.util.Hashtable) -> a
    java.lang.String bytesToString(byte[]) -> a
    java.lang.String toString() -> toString
repack.org.bouncycastle.asn1.x509.X509NameEntryConverter -> c.a.a.a.d.i:
    repack.org.bouncycastle.asn1.DERObject getConvertedValue(repack.org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String) -> a
repack.org.bouncycastle.asn1.x509.X509ObjectIdentifiers -> c.a.a.a.d.j:
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier commonName -> a
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier countryName -> b
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier localityName -> c
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier stateOrProvinceName -> a_
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier organization -> b_
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier organizationalUnitName -> f
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier id_at_telephoneNumber -> g
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier id_at_name -> c_
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier id_SHA1 -> i
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier ripemd160 -> d_
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier ripemd160WithRSAEncryption -> e_
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier id_ea_rsa -> l
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier id_pkix -> m
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier id_pe -> n
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier id_ad -> o
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier id_ad_caIssuers -> p
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier id_ad_ocsp -> f_
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier ocspAccessMethod -> r
    repack.org.bouncycastle.asn1.ASN1ObjectIdentifier crlAccessMethod -> s
repack.org.bouncycastle.crypto.BlockCipher -> c.a.a.b.a:
    void init(boolean,repack.org.bouncycastle.crypto.CipherParameters) -> a
    int getBlockSize() -> a
    int processBlock(byte[],int,byte[],int) -> a
    void reset() -> b
repack.org.bouncycastle.crypto.BufferedBlockCipher -> c.a.a.b.b:
    byte[] buf -> a
    int bufOff -> b
    boolean forEncryption -> c
    repack.org.bouncycastle.crypto.BlockCipher cipher -> d
    boolean partialBlockOkay -> e
    boolean pgpCFB -> f
    void init(boolean,repack.org.bouncycastle.crypto.CipherParameters) -> a
    int getBlockSize() -> a
    int getUpdateOutputSize(int) -> a
    int getOutputSize(int) -> b
    int processBytes(byte[],int,int,byte[],int) -> a
    int doFinal(byte[],int) -> a
    void reset() -> b
repack.org.bouncycastle.crypto.CipherParameters -> c.a.a.b.c:
repack.org.bouncycastle.crypto.CryptoException -> c.a.a.b.d:
repack.org.bouncycastle.crypto.DataLengthException -> c.a.a.b.e:
repack.org.bouncycastle.crypto.InvalidCipherTextException -> c.a.a.b.f:
repack.org.bouncycastle.crypto.RuntimeCryptoException -> c.a.a.b.g:
repack.org.bouncycastle.crypto.engines.AESFastEngine -> c.a.a.b.a.a:
    byte[] S -> a
    byte[] Si -> b
    int[] rcon -> c
    int[] T0 -> d
    int[] T1 -> e
    int[] T2 -> f
    int[] T3 -> g
    int[] Tinv0 -> h
    int[] Tinv1 -> i
    int[] Tinv2 -> j
    int[] Tinv3 -> k
    int ROUNDS -> l
    int[][] WorkingKey -> m
    int C0 -> n
    int C1 -> o
    int C2 -> p
    int C3 -> q
    boolean forEncryption -> r
    int shift(int,int) -> a
    int FFmulX(int) -> a
    int inv_mcol(int) -> b
    int subWord(int) -> c
    int[][] generateWorkingKey(byte[],boolean) -> a
    void init(boolean,repack.org.bouncycastle.crypto.CipherParameters) -> a
    int getBlockSize() -> a
    int processBlock(byte[],int,byte[],int) -> a
    void reset() -> b
    void unpackBlock(byte[],int) -> a
    void packBlock(byte[],int) -> b
    void encryptBlock(int[][]) -> a
    void decryptBlock(int[][]) -> b
repack.org.bouncycastle.crypto.modes.CBCBlockCipher -> c.a.a.b.b.a:
    byte[] IV -> a
    byte[] cbcV -> b
    byte[] cbcNextV -> c
    int blockSize -> d
    repack.org.bouncycastle.crypto.BlockCipher cipher -> e
    boolean encrypting -> f
    void init(boolean,repack.org.bouncycastle.crypto.CipherParameters) -> a
    int getBlockSize() -> a
    int processBlock(byte[],int,byte[],int) -> a
    void reset() -> b
    int encryptBlock(byte[],int,byte[],int) -> b
    int decryptBlock(byte[],int,byte[],int) -> c
repack.org.bouncycastle.crypto.paddings.BlockCipherPadding -> c.a.a.b.c.a:
    void init(java.security.SecureRandom) -> a
    int addPadding(byte[],int) -> a
    int padCount(byte[]) -> a
repack.org.bouncycastle.crypto.paddings.PKCS7Padding -> c.a.a.b.c.b:
    void init(java.security.SecureRandom) -> a
    int addPadding(byte[],int) -> a
    int padCount(byte[]) -> a
repack.org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher -> c.a.a.b.c.c:
    repack.org.bouncycastle.crypto.paddings.BlockCipherPadding padding -> g
    void init(boolean,repack.org.bouncycastle.crypto.CipherParameters) -> a
    int getOutputSize(int) -> b
    int getUpdateOutputSize(int) -> a
    int processBytes(byte[],int,int,byte[],int) -> a
    int doFinal(byte[],int) -> a
repack.org.bouncycastle.crypto.params.KeyParameter -> c.a.a.b.d.a:
    byte[] key -> a
    byte[] getKey() -> a
repack.org.bouncycastle.crypto.params.ParametersWithIV -> c.a.a.b.d.b:
    byte[] iv -> a
    repack.org.bouncycastle.crypto.CipherParameters parameters -> b
    byte[] getIV() -> a
    repack.org.bouncycastle.crypto.CipherParameters getParameters() -> b
repack.org.bouncycastle.crypto.params.ParametersWithRandom -> c.a.a.b.d.c:
    java.security.SecureRandom random -> a
    repack.org.bouncycastle.crypto.CipherParameters parameters -> b
    java.security.SecureRandom getRandom() -> a
    repack.org.bouncycastle.crypto.CipherParameters getParameters() -> b
repack.org.bouncycastle.util.Arrays -> c.a.a.c.a:
    boolean areEqual(byte[],byte[]) -> a
    void fill(byte[],byte) -> a
    int hashCode(byte[]) -> a
repack.org.bouncycastle.util.Strings -> c.a.a.c.b:
    java.lang.String fromUTF8ByteArray(byte[]) -> a
    byte[] toUTF8ByteArray(java.lang.String) -> a
    byte[] toUTF8ByteArray(char[]) -> a
    java.lang.String toLowerCase(java.lang.String) -> b
repack.org.bouncycastle.util.encoders.Encoder -> c.a.a.c.a.a:
    int encode(byte[],int,int,java.io.OutputStream) -> a
    int decode(java.lang.String,java.io.OutputStream) -> a
repack.org.bouncycastle.util.encoders.Hex -> c.a.a.c.a.b:
    repack.org.bouncycastle.util.encoders.Encoder encoder -> a
    byte[] encode(byte[]) -> a
    byte[] encode(byte[],int,int) -> a
    byte[] decode(java.lang.String) -> a
repack.org.bouncycastle.util.encoders.HexEncoder -> c.a.a.c.a.c:
    byte[] encodingTable -> a
    byte[] decodingTable -> b
    void initialiseDecodingTable() -> a
    int encode(byte[],int,int,java.io.OutputStream) -> a
    boolean ignore(char) -> a
    int decode(java.lang.String,java.io.OutputStream) -> a
repack.org.bouncycastle.util.io.Streams -> c.a.a.c.b.a:
    int BUFFER_SIZE -> a
    byte[] readAll(java.io.InputStream) -> a
    int readFully(java.io.InputStream,byte[]) -> a
    int readFully(java.io.InputStream,byte[],int,int) -> a
    void pipeAll(java.io.InputStream,java.io.OutputStream) -> a
